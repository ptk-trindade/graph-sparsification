/* Generated by Cython 3.0.8 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "networkit/cython_helper.h"
        ],
        "include_dirs": [
            "networkit"
        ],
        "language": "c++",
        "name": "networkit.sparsification",
        "sources": [
            "networkit/sparsification.pyx"
        ]
    },
    "module_name": "networkit.sparsification"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#if defined(CYTHON_LIMITED_API) && CYTHON_LIMITED_API
#define __PYX_EXTRA_ABI_MODULE_NAME "limited"
#else
#define __PYX_EXTRA_ABI_MODULE_NAME ""
#endif
#define CYTHON_ABI "3_0_8" __PYX_EXTRA_ABI_MODULE_NAME
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x030008F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(Py_GIL_DISABLED) || defined(Py_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    static CYTHON_INLINE PyObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030B0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030B0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
    #ifndef CO_OPTIMIZED
    #define CO_OPTIMIZED 0x0001
    #endif
    #ifndef CO_NEWLOCALS
    #define CO_NEWLOCALS 0x0002
    #endif
    #ifndef CO_VARARGS
    #define CO_VARARGS 0x0004
    #endif
    #ifndef CO_VARKEYWORDS
    #define CO_VARKEYWORDS 0x0008
    #endif
    #ifndef CO_ASYNC_GENERATOR
    #define CO_ASYNC_GENERATOR 0x0200
    #endif
    #ifndef CO_GENERATOR
    #define CO_GENERATOR 0x0020
    #endif
    #ifndef CO_COROUTINE
    #define CO_COROUTINE 0x0080
    #endif
#elif PY_VERSION_HEX >= 0x030B0000
  static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);
    if (!empty_bytes) return NULL;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, empty_bytes);
    Py_DECREF(empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_MAJOR_VERSION >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void *cfunc) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000 || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && PY_VERSION_HEX < 0x030d0000 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyObject_GenericSetAttr((PyObject*)tp, k, v)
#else
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyDict_SetItem(tp->tp_dict, k, v)
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
#endif
#if PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__networkit__sparsification
#define __PYX_HAVE_API__networkit__sparsification
/* Early includes */
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <networkit/base/Algorithm.hpp>
#include <utility>

    #if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
    // move should be defined for these versions of MSVC, but __cplusplus isn't set usefully
    #include <type_traits>

    namespace cython_std {
    template <typename T> typename std::remove_reference<T>::type&& move(T& t) noexcept { return std::move(t); }
    template <typename T> typename std::remove_reference<T>::type&& move(T&& t) noexcept { return std::move(t); }
    }

    #endif
    
#include <string.h>
#include <string>
#include <unordered_set>
#include <stdint.h>
#include <map>
#include <set>
#include "cython_helper.h"
#include <algorithm>
#include <networkit/structures/Cover.hpp>
#include <networkit/structures/Partition.hpp>
#include <networkit/Globals.hpp>
#include <networkit/graph/Graph.hpp>
#include <networkit/graph/SpanningForest.hpp>
#include <networkit/graph/RandomMaximumSpanningForest.hpp>
#include <networkit/graph/UnionMaximumSpanningForest.hpp>
#include <networkit/edgescores/EdgeScore.hpp>
#include <networkit/edgescores/ChibaNishizekiTriangleEdgeScore.hpp>
#include <networkit/edgescores/ChibaNishizekiQuadrangleEdgeScore.hpp>
#include <networkit/edgescores/TriangleEdgeScore.hpp>
#include <networkit/edgescores/EdgeScoreLinearizer.hpp>
#include <networkit/edgescores/EdgeScoreNormalizer.hpp>
#include <networkit/edgescores/EdgeScoreBlender.hpp>
#include <networkit/edgescores/GeometricMeanScore.hpp>
#include <networkit/edgescores/EdgeScoreAsWeight.hpp>
#include <networkit/sparsification/SimmelianOverlapScore.hpp>
#include <networkit/edgescores/PrefixJaccardScore.hpp>
#include <networkit/sparsification/MultiscaleScore.hpp>
#include <networkit/sparsification/RandomEdgeScore.hpp>
#include <networkit/sparsification/LocalSimilarityScore.hpp>
#include <networkit/sparsification/ForestFireScore.hpp>
#include <networkit/sparsification/LocalDegreeScore.hpp>
#include <networkit/sparsification/RandomNodeEdgeScore.hpp>
#include <networkit/sparsification/LocalFilterScore.hpp>
#include <networkit/sparsification/ChanceCorrectedTriangleScore.hpp>
#include <networkit/sparsification/SCANStructuralSimilarityScore.hpp>
#include <networkit/sparsification/GlobalThresholdFilter.hpp>
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
{
    const wchar_t *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#endif
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
#include <string.h>
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#include <string.h>
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "networkit/sparsification.pyx",
  "<stringsource>",
  "networkit/base.pxd",
  "networkit/structures.pxd",
  "networkit/graph.pxd",
};
/* #### Code section: utility_code_proto_before_types ### */
/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* #### Code section: numeric_typedefs ### */

/* "structures.pxd":8
 * from libcpp.string cimport string
 * 
 * ctypedef uint64_t count             # <<<<<<<<<<<<<<
 * ctypedef uint64_t index
 * ctypedef uint64_t edgeid
 */
typedef uint64_t __pyx_t_9networkit_10structures_count;

/* "structures.pxd":9
 * 
 * ctypedef uint64_t count
 * ctypedef uint64_t index             # <<<<<<<<<<<<<<
 * ctypedef uint64_t edgeid
 * ctypedef index node
 */
typedef uint64_t __pyx_t_9networkit_10structures_index;

/* "structures.pxd":10
 * ctypedef uint64_t count
 * ctypedef uint64_t index
 * ctypedef uint64_t edgeid             # <<<<<<<<<<<<<<
 * ctypedef index node
 * ctypedef double coordinate
 */
typedef uint64_t __pyx_t_9networkit_10structures_edgeid;

/* "structures.pxd":11
 * ctypedef uint64_t index
 * ctypedef uint64_t edgeid
 * ctypedef index node             # <<<<<<<<<<<<<<
 * ctypedef double coordinate
 * ctypedef double edgeweight
 */
typedef __pyx_t_9networkit_10structures_index __pyx_t_9networkit_10structures_node;

/* "structures.pxd":12
 * ctypedef uint64_t edgeid
 * ctypedef index node
 * ctypedef double coordinate             # <<<<<<<<<<<<<<
 * ctypedef double edgeweight
 * 
 */
typedef double __pyx_t_9networkit_10structures_coordinate;

/* "structures.pxd":13
 * ctypedef index node
 * ctypedef double coordinate
 * ctypedef double edgeweight             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cython_helper.h":
 */
typedef double __pyx_t_9networkit_10structures_edgeweight;
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_9networkit_4base__CythonParentClass;
struct __pyx_obj_9networkit_4base_Algorithm;
struct __pyx_obj_9networkit_10structures_Cover;
struct __pyx_obj_9networkit_10structures_Partition;
struct __pyx_obj_9networkit_5graph_Graph;
struct __pyx_obj_9networkit_5graph_NodeIntAttribute;
struct __pyx_obj_9networkit_5graph_NodeDoubleAttribute;
struct __pyx_obj_9networkit_5graph_NodeStringAttribute;
struct __pyx_obj_9networkit_5graph_EdgeIntAttribute;
struct __pyx_obj_9networkit_5graph_EdgeDoubleAttribute;
struct __pyx_obj_9networkit_5graph_EdgeStringAttribute;
struct __pyx_obj_9networkit_5graph_RandomMaximumSpanningForest;
struct __pyx_obj_9networkit_5graph_UnionMaximumSpanningForest;
struct __pyx_obj_9networkit_14sparsification_EdgeScore;
struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;
struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;
struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore;
struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer;
struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer;
struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender;
struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore;
struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight;
struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore;
struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore;
struct __pyx_obj_9networkit_14sparsification_MultiscaleScore;
struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore;
struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore;
struct __pyx_obj_9networkit_14sparsification_ForestFireScore;
struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore;
struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore;
struct __pyx_obj_9networkit_14sparsification_LocalFilterScore;
struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore;
struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore;
struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter;
struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores;

/* "base.pxd":9
 * 		bool_t hasFinished() except +
 * 
 * cdef class _CythonParentClass:             # <<<<<<<<<<<<<<
 * 	cdef _Algorithm *_this
 * 
 */
struct __pyx_obj_9networkit_4base__CythonParentClass {
  PyObject_HEAD
  NetworKit::Algorithm *_this;
};


/* "base.pxd":12
 * 	cdef _Algorithm *_this
 * 
 * cdef class Algorithm(_CythonParentClass):             # <<<<<<<<<<<<<<
 * 	pass
 */
struct __pyx_obj_9networkit_4base_Algorithm {
  struct __pyx_obj_9networkit_4base__CythonParentClass __pyx_base;
};


/* "structures.pxd":50
 * 		set[index] getSubsetIds() except +
 * 
 * cdef class Cover:             # <<<<<<<<<<<<<<
 * 	cdef _Cover _this
 * 	cdef setThis(self, _Cover& other)
 */
struct __pyx_obj_9networkit_10structures_Cover {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_10structures_Cover *__pyx_vtab;
  NetworKit::Cover _this;
};


/* "structures.pxd":86
 * 		index operator[](index) except +
 * 
 * cdef class Partition:             # <<<<<<<<<<<<<<
 * 	cdef _Partition _this
 * 	cdef setThis(self, _Partition& other)
 */
struct __pyx_obj_9networkit_10structures_Partition {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_10structures_Partition *__pyx_vtab;
  NetworKit::Partition _this;
};


/* "graph.pxd":283
 * 		void swap(_EdgeStringAttribute& other)
 * 
 * cdef class Graph:             # <<<<<<<<<<<<<<
 * 	cdef _Graph _this
 * 	cdef setThis(self, _Graph& other)
 */
struct __pyx_obj_9networkit_5graph_Graph {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_Graph *__pyx_vtab;
  NetworKit::Graph _this;
};


/* "graph.pxd":287
 * 	cdef setThis(self, _Graph& other)
 * 
 * cdef class NodeIntAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _NodeIntAttribute _this
 * 	cdef _NodeIntAttribute._AttributeIterator _iter
 */
struct __pyx_obj_9networkit_5graph_NodeIntAttribute {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_NodeIntAttribute *__pyx_vtab;
  NetworKit::Graph::NodeIntAttribute _this;
  NetworKit::Graph::NodeIntAttribute::Iterator _iter;
  NetworKit::Graph::NodeIntAttribute::Iterator _stopiter;
  NetworKit::Graph *_G;
};


/* "graph.pxd":294
 * 	cdef setThis(self, _NodeIntAttribute& other, _Graph* graph)
 * 
 * cdef class NodeDoubleAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _NodeDoubleAttribute _this
 * 	cdef _NodeDoubleAttribute._AttributeIterator _iter
 */
struct __pyx_obj_9networkit_5graph_NodeDoubleAttribute {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_NodeDoubleAttribute *__pyx_vtab;
  NetworKit::Graph::NodeDoubleAttribute _this;
  NetworKit::Graph::NodeDoubleAttribute::Iterator _iter;
  NetworKit::Graph::NodeDoubleAttribute::Iterator _stopiter;
  NetworKit::Graph *_G;
};


/* "graph.pxd":301
 * 	cdef setThis(self, _NodeDoubleAttribute& other, _Graph* graph)
 * 
 * cdef class NodeStringAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _NodeStringAttribute _this
 * 	cdef _NodeStringAttribute._AttributeIterator _iter
 */
struct __pyx_obj_9networkit_5graph_NodeStringAttribute {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_NodeStringAttribute *__pyx_vtab;
  NetworKit::Graph::NodeStringAttribute _this;
  NetworKit::Graph::NodeStringAttribute::Iterator _iter;
  NetworKit::Graph::NodeStringAttribute::Iterator _stopiter;
  NetworKit::Graph *_G;
};


/* "graph.pxd":308
 * 	cdef setThis(self, _NodeStringAttribute& other, _Graph* graph)
 * 
 * cdef class EdgeIntAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _EdgeIntAttribute _this
 * 	cdef _EdgeIntAttribute._AttributeIterator _iter
 */
struct __pyx_obj_9networkit_5graph_EdgeIntAttribute {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_EdgeIntAttribute *__pyx_vtab;
  NetworKit::Graph::EdgeIntAttribute _this;
  NetworKit::Graph::EdgeIntAttribute::Iterator _iter;
  NetworKit::Graph::EdgeIntAttribute::Iterator _stopiter;
  NetworKit::Graph *_G;
};


/* "graph.pxd":315
 * 	cdef setThis(self, _EdgeIntAttribute& other, _Graph* graph)
 * 
 * cdef class EdgeDoubleAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _EdgeDoubleAttribute _this
 * 	cdef _EdgeDoubleAttribute._AttributeIterator _iter
 */
struct __pyx_obj_9networkit_5graph_EdgeDoubleAttribute {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_EdgeDoubleAttribute *__pyx_vtab;
  NetworKit::Graph::EdgeDoubleAttribute _this;
  NetworKit::Graph::EdgeDoubleAttribute::Iterator _iter;
  NetworKit::Graph::EdgeDoubleAttribute::Iterator _stopiter;
  NetworKit::Graph *_G;
};


/* "graph.pxd":322
 * 	cdef setThis(self, _EdgeDoubleAttribute& other, _Graph* graph)
 * 
 * cdef class EdgeStringAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _EdgeStringAttribute _this
 * 	cdef _EdgeStringAttribute._AttributeIterator _iter
 */
struct __pyx_obj_9networkit_5graph_EdgeStringAttribute {
  PyObject_HEAD
  struct __pyx_vtabstruct_9networkit_5graph_EdgeStringAttribute *__pyx_vtab;
  NetworKit::Graph::EdgeStringAttribute _this;
  NetworKit::Graph::EdgeStringAttribute::Iterator _iter;
  NetworKit::Graph::EdgeStringAttribute::Iterator _stopiter;
  NetworKit::Graph *_G;
};


/* "graph.pxd":347
 * 		bool_t inMSF(node u, node v) except +
 * 
 * cdef class RandomMaximumSpanningForest(Algorithm):             # <<<<<<<<<<<<<<
 * 	cdef vector[double] _attribute
 * 	cdef Graph _G
 */
struct __pyx_obj_9networkit_5graph_RandomMaximumSpanningForest {
  struct __pyx_obj_9networkit_4base_Algorithm __pyx_base;
  std::vector<double>  _attribute;
  struct __pyx_obj_9networkit_5graph_Graph *_G;
};


/* "graph.pxd":362
 * 		bool_t inUMSF(node u, node v) except +
 * 
 * cdef class UnionMaximumSpanningForest(Algorithm):             # <<<<<<<<<<<<<<
 * 	cdef Graph _G
 */
struct __pyx_obj_9networkit_5graph_UnionMaximumSpanningForest {
  struct __pyx_obj_9networkit_4base_Algorithm __pyx_base;
  struct __pyx_obj_9networkit_5graph_Graph *_G;
};


/* "networkit/sparsification.pyx":26
 * 		T score(node u, node v) except +
 * 
 * cdef class EdgeScore(Algorithm):             # <<<<<<<<<<<<<<
 * 	"""
 * 	Abstract base class for an edge score.
 */
struct __pyx_obj_9networkit_14sparsification_EdgeScore {
  struct __pyx_obj_9networkit_4base_Algorithm __pyx_base;
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore *__pyx_vtab;
  struct __pyx_obj_9networkit_5graph_Graph *_G;
};


/* "networkit/sparsification.pyx":93
 * 		_ChibaNishizekiTriangleEdgeScore(const _Graph& G) except +
 * 
 * cdef class ChibaNishizekiTriangleEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ChibaNishizekiTriangleEdgeScore(G)
 */
struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":117
 * 		_ChibaNishizekiQuadrangleEdgeScore(const _Graph& G) except +
 * 
 * cdef class ChibaNishizekiQuadrangleEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ChibaNishizekiQuadrangleEdgeScore(G)
 */
struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":141
 * 		_TriangleEdgeScore(const _Graph& G) except +
 * 
 * cdef class TriangleEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	TriangleEdgeScore(G)
 */
struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":165
 * 		_EdgeScoreLinearizer(const _Graph& G, const vector[double]& attribute, bool_t inverse) except +
 * 
 * cdef class EdgeScoreLinearizer(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreLinearizer(G, a, inverse=False)
 */
struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _score;
};


/* "networkit/sparsification.pyx":196
 * 		_EdgeScoreNormalizer(const _Graph&, vector[T]&, bool_t inverse, double lower, double upper) except +
 * 
 * cdef class EdgeScoreNormalizer(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreNormalizer(G, score, inverse=False, lower=0.0, uppper=1.0)
 */
struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _inScoreDouble;
  std::vector<__pyx_t_9networkit_10structures_count>  _inScoreCount;
};


/* "networkit/sparsification.pyx":238
 * 		_EdgeScoreBlender(const _Graph&, const vector[double]&, const vector[double]&, const vector[bool_t]&) except +
 * 
 * cdef class EdgeScoreBlender(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreBlender(G, attribute0, attribute1, selection)
 */
struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _attribute0;
  std::vector<double>  _attribute1;
  std::vector<bool>  _selection;
};


/* "networkit/sparsification.pyx":275
 * 		_GeometricMeanScore(const _Graph& G, const vector[double]& a) except +
 * 
 * cdef class GeometricMeanScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	GeometricMeanScore(G, a)
 */
struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _attribute;
};


/* "networkit/sparsification.pyx":304
 * 		_Graph calculate() except +
 * 
 * cdef class EdgeScoreAsWeight:             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreAsWeight(G, score, square, offset, factor)
 */
struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight {
  PyObject_HEAD
  NetworKit::EdgeScoreAsWeight *_this;
  struct __pyx_obj_9networkit_5graph_Graph *_G;
  std::vector<double>  _score;
};


/* "networkit/sparsification.pyx":354
 * 		_SimmelianOverlapScore(const _Graph& G, const vector[count]& triangles, count maxRank) except +
 * 
 * cdef class SimmelianOverlapScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianOverlapScore(G, triangles, maxRank)
 */
struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<__pyx_t_9networkit_10structures_count>  _triangles;
};


/* "networkit/sparsification.pyx":386
 * 		_PrefixJaccardScore(const _Graph& G, const vector[double]& a) except +
 * 
 * cdef class PrefixJaccardScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	cdef vector[double] _attribute
 * 
 */
struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _attribute;
};


/* "networkit/sparsification.pyx":402
 * 		_MultiscaleScore(const _Graph& G, const vector[double]& a) except +
 * 
 * cdef class MultiscaleScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	MultiscaleScore(G, attribute)
 */
struct __pyx_obj_9networkit_14sparsification_MultiscaleScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _attribute;
};


/* "networkit/sparsification.pyx":432
 * 		_RandomEdgeScore(const _Graph& G) except +
 * 
 * cdef class RandomEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomEdgeScore(G)
 */
struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":456
 * 		_LocalSimilarityScore(const _Graph& G, const vector[count]& triangles) except +
 * 
 * cdef class LocalSimilarityScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalSimilarityScore(G, triangles)
 */
struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<__pyx_t_9networkit_10structures_count>  _triangles;
};


/* "networkit/sparsification.pyx":486
 * 		_ForestFireScore(const _Graph& G, double pf, double tebr) except +
 * 
 * cdef class ForestFireScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ForestFireScore(G, pf, tebr)
 */
struct __pyx_obj_9networkit_14sparsification_ForestFireScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":516
 * 		_LocalDegreeScore(const _Graph& G) except +
 * 
 * cdef class LocalDegreeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalDegreeScore(G)
 */
struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":542
 * 		_RandomNodeEdgeScore(const _Graph& G) except +
 * 
 * cdef class RandomNodeEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomNodeEdgeScore(G)
 */
struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
};


/* "networkit/sparsification.pyx":573
 * 		_LocalFilterScoreInt(const _Graph& G, const vector[double]& a, bool_t logarithmic) except +
 * 
 * cdef class LocalFilterScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalFilterScore(G, a, logarithmic=True)
 */
struct __pyx_obj_9networkit_14sparsification_LocalFilterScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<double>  _a;
};


/* "networkit/sparsification.pyx":607
 * 		_ChanceCorrectedTriangleScore(const _Graph& G, const vector[count]& triangles) except +
 * 
 * cdef class ChanceCorrectedTriangleScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ChanceCorrectedTriangleScore(G, triangles)
 */
struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<__pyx_t_9networkit_10structures_count>  _triangles;
};


/* "networkit/sparsification.pyx":635
 * 		_SCANStructuralSimilarityScore(_Graph G, const vector[count]& triangles) except +
 * 
 * cdef class SCANStructuralSimilarityScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SCANStructuralSimilarityScore(G, triangles)
 */
struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore __pyx_base;
  std::vector<__pyx_t_9networkit_10structures_count>  _triangles;
};


/* "networkit/sparsification.pyx":664
 * 		_Graph calculate() except +
 * 
 * cdef class GlobalThresholdFilter:             # <<<<<<<<<<<<<<
 * 	"""
 * 	GlobalThresholdFilter(G, attribute, e, above)
 */
struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter {
  PyObject_HEAD
  NetworKit::GlobalThresholdFilter *_this;
  struct __pyx_obj_9networkit_5graph_Graph *_G;
  std::vector<double>  _attribute;
};


/* "networkit/sparsification.pyx":1573
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores {
  PyObject_HEAD
  PyObject *__pyx_v_edgeScores;
  PyObject *__pyx_v_partition;
  PyObject *__pyx_v_together;
};



/* "structures.pxd":50
 * 		set[index] getSubsetIds() except +
 * 
 * cdef class Cover:             # <<<<<<<<<<<<<<
 * 	cdef _Cover _this
 * 	cdef setThis(self, _Cover& other)
 */

struct __pyx_vtabstruct_9networkit_10structures_Cover {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_10structures_Cover *, NetworKit::Cover &);
};
static struct __pyx_vtabstruct_9networkit_10structures_Cover *__pyx_vtabptr_9networkit_10structures_Cover;


/* "structures.pxd":86
 * 		index operator[](index) except +
 * 
 * cdef class Partition:             # <<<<<<<<<<<<<<
 * 	cdef _Partition _this
 * 	cdef setThis(self, _Partition& other)
 */

struct __pyx_vtabstruct_9networkit_10structures_Partition {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_10structures_Partition *, NetworKit::Partition &);
};
static struct __pyx_vtabstruct_9networkit_10structures_Partition *__pyx_vtabptr_9networkit_10structures_Partition;


/* "graph.pxd":283
 * 		void swap(_EdgeStringAttribute& other)
 * 
 * cdef class Graph:             # <<<<<<<<<<<<<<
 * 	cdef _Graph _this
 * 	cdef setThis(self, _Graph& other)
 */

struct __pyx_vtabstruct_9networkit_5graph_Graph {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_Graph *, NetworKit::Graph &);
};
static struct __pyx_vtabstruct_9networkit_5graph_Graph *__pyx_vtabptr_9networkit_5graph_Graph;


/* "graph.pxd":287
 * 	cdef setThis(self, _Graph& other)
 * 
 * cdef class NodeIntAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _NodeIntAttribute _this
 * 	cdef _NodeIntAttribute._AttributeIterator _iter
 */

struct __pyx_vtabstruct_9networkit_5graph_NodeIntAttribute {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_NodeIntAttribute *, NetworKit::Graph::NodeIntAttribute &, NetworKit::Graph *);
};
static struct __pyx_vtabstruct_9networkit_5graph_NodeIntAttribute *__pyx_vtabptr_9networkit_5graph_NodeIntAttribute;


/* "graph.pxd":294
 * 	cdef setThis(self, _NodeIntAttribute& other, _Graph* graph)
 * 
 * cdef class NodeDoubleAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _NodeDoubleAttribute _this
 * 	cdef _NodeDoubleAttribute._AttributeIterator _iter
 */

struct __pyx_vtabstruct_9networkit_5graph_NodeDoubleAttribute {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_NodeDoubleAttribute *, NetworKit::Graph::NodeDoubleAttribute &, NetworKit::Graph *);
};
static struct __pyx_vtabstruct_9networkit_5graph_NodeDoubleAttribute *__pyx_vtabptr_9networkit_5graph_NodeDoubleAttribute;


/* "graph.pxd":301
 * 	cdef setThis(self, _NodeDoubleAttribute& other, _Graph* graph)
 * 
 * cdef class NodeStringAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _NodeStringAttribute _this
 * 	cdef _NodeStringAttribute._AttributeIterator _iter
 */

struct __pyx_vtabstruct_9networkit_5graph_NodeStringAttribute {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_NodeStringAttribute *, NetworKit::Graph::NodeStringAttribute &, NetworKit::Graph *);
};
static struct __pyx_vtabstruct_9networkit_5graph_NodeStringAttribute *__pyx_vtabptr_9networkit_5graph_NodeStringAttribute;


/* "graph.pxd":308
 * 	cdef setThis(self, _NodeStringAttribute& other, _Graph* graph)
 * 
 * cdef class EdgeIntAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _EdgeIntAttribute _this
 * 	cdef _EdgeIntAttribute._AttributeIterator _iter
 */

struct __pyx_vtabstruct_9networkit_5graph_EdgeIntAttribute {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_EdgeIntAttribute *, NetworKit::Graph::EdgeIntAttribute &, NetworKit::Graph *);
};
static struct __pyx_vtabstruct_9networkit_5graph_EdgeIntAttribute *__pyx_vtabptr_9networkit_5graph_EdgeIntAttribute;


/* "graph.pxd":315
 * 	cdef setThis(self, _EdgeIntAttribute& other, _Graph* graph)
 * 
 * cdef class EdgeDoubleAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _EdgeDoubleAttribute _this
 * 	cdef _EdgeDoubleAttribute._AttributeIterator _iter
 */

struct __pyx_vtabstruct_9networkit_5graph_EdgeDoubleAttribute {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_EdgeDoubleAttribute *, NetworKit::Graph::EdgeDoubleAttribute &, NetworKit::Graph *);
};
static struct __pyx_vtabstruct_9networkit_5graph_EdgeDoubleAttribute *__pyx_vtabptr_9networkit_5graph_EdgeDoubleAttribute;


/* "graph.pxd":322
 * 	cdef setThis(self, _EdgeDoubleAttribute& other, _Graph* graph)
 * 
 * cdef class EdgeStringAttribute:             # <<<<<<<<<<<<<<
 * 	cdef _EdgeStringAttribute _this
 * 	cdef _EdgeStringAttribute._AttributeIterator _iter
 */

struct __pyx_vtabstruct_9networkit_5graph_EdgeStringAttribute {
  PyObject *(*setThis)(struct __pyx_obj_9networkit_5graph_EdgeStringAttribute *, NetworKit::Graph::EdgeStringAttribute &, NetworKit::Graph *);
};
static struct __pyx_vtabstruct_9networkit_5graph_EdgeStringAttribute *__pyx_vtabptr_9networkit_5graph_EdgeStringAttribute;


/* "networkit/sparsification.pyx":26
 * 		T score(node u, node v) except +
 * 
 * cdef class EdgeScore(Algorithm):             # <<<<<<<<<<<<<<
 * 	"""
 * 	Abstract base class for an edge score.
 */

struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore {
  bool (*isDoubleValue)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *);
};
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;


/* "networkit/sparsification.pyx":93
 * 		_ChibaNishizekiTriangleEdgeScore(const _Graph& G) except +
 * 
 * cdef class ChibaNishizekiTriangleEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ChibaNishizekiTriangleEdgeScore(G)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;


/* "networkit/sparsification.pyx":117
 * 		_ChibaNishizekiQuadrangleEdgeScore(const _Graph& G) except +
 * 
 * cdef class ChibaNishizekiQuadrangleEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ChibaNishizekiQuadrangleEdgeScore(G)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;


/* "networkit/sparsification.pyx":141
 * 		_TriangleEdgeScore(const _Graph& G) except +
 * 
 * cdef class TriangleEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	TriangleEdgeScore(G)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_TriangleEdgeScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_TriangleEdgeScore *__pyx_vtabptr_9networkit_14sparsification_TriangleEdgeScore;


/* "networkit/sparsification.pyx":165
 * 		_EdgeScoreLinearizer(const _Graph& G, const vector[double]& attribute, bool_t inverse) except +
 * 
 * cdef class EdgeScoreLinearizer(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreLinearizer(G, a, inverse=False)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreLinearizer {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_vtabptr_9networkit_14sparsification_EdgeScoreLinearizer;


/* "networkit/sparsification.pyx":196
 * 		_EdgeScoreNormalizer(const _Graph&, vector[T]&, bool_t inverse, double lower, double upper) except +
 * 
 * cdef class EdgeScoreNormalizer(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreNormalizer(G, score, inverse=False, lower=0.0, uppper=1.0)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreNormalizer {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_vtabptr_9networkit_14sparsification_EdgeScoreNormalizer;


/* "networkit/sparsification.pyx":238
 * 		_EdgeScoreBlender(const _Graph&, const vector[double]&, const vector[double]&, const vector[bool_t]&) except +
 * 
 * cdef class EdgeScoreBlender(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	EdgeScoreBlender(G, attribute0, attribute1, selection)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreBlender {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreBlender *__pyx_vtabptr_9networkit_14sparsification_EdgeScoreBlender;


/* "networkit/sparsification.pyx":275
 * 		_GeometricMeanScore(const _Graph& G, const vector[double]& a) except +
 * 
 * cdef class GeometricMeanScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	GeometricMeanScore(G, a)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_GeometricMeanScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_GeometricMeanScore *__pyx_vtabptr_9networkit_14sparsification_GeometricMeanScore;


/* "networkit/sparsification.pyx":354
 * 		_SimmelianOverlapScore(const _Graph& G, const vector[count]& triangles, count maxRank) except +
 * 
 * cdef class SimmelianOverlapScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianOverlapScore(G, triangles, maxRank)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_SimmelianOverlapScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_SimmelianOverlapScore *__pyx_vtabptr_9networkit_14sparsification_SimmelianOverlapScore;


/* "networkit/sparsification.pyx":386
 * 		_PrefixJaccardScore(const _Graph& G, const vector[double]& a) except +
 * 
 * cdef class PrefixJaccardScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	cdef vector[double] _attribute
 * 
 */

struct __pyx_vtabstruct_9networkit_14sparsification_PrefixJaccardScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_PrefixJaccardScore *__pyx_vtabptr_9networkit_14sparsification_PrefixJaccardScore;


/* "networkit/sparsification.pyx":402
 * 		_MultiscaleScore(const _Graph& G, const vector[double]& a) except +
 * 
 * cdef class MultiscaleScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	MultiscaleScore(G, attribute)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_MultiscaleScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_MultiscaleScore *__pyx_vtabptr_9networkit_14sparsification_MultiscaleScore;


/* "networkit/sparsification.pyx":432
 * 		_RandomEdgeScore(const _Graph& G) except +
 * 
 * cdef class RandomEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomEdgeScore(G)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_RandomEdgeScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_RandomEdgeScore *__pyx_vtabptr_9networkit_14sparsification_RandomEdgeScore;


/* "networkit/sparsification.pyx":456
 * 		_LocalSimilarityScore(const _Graph& G, const vector[count]& triangles) except +
 * 
 * cdef class LocalSimilarityScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalSimilarityScore(G, triangles)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_LocalSimilarityScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_LocalSimilarityScore *__pyx_vtabptr_9networkit_14sparsification_LocalSimilarityScore;


/* "networkit/sparsification.pyx":486
 * 		_ForestFireScore(const _Graph& G, double pf, double tebr) except +
 * 
 * cdef class ForestFireScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ForestFireScore(G, pf, tebr)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_ForestFireScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_ForestFireScore *__pyx_vtabptr_9networkit_14sparsification_ForestFireScore;


/* "networkit/sparsification.pyx":516
 * 		_LocalDegreeScore(const _Graph& G) except +
 * 
 * cdef class LocalDegreeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalDegreeScore(G)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_LocalDegreeScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_LocalDegreeScore *__pyx_vtabptr_9networkit_14sparsification_LocalDegreeScore;


/* "networkit/sparsification.pyx":542
 * 		_RandomNodeEdgeScore(const _Graph& G) except +
 * 
 * cdef class RandomNodeEdgeScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomNodeEdgeScore(G)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_RandomNodeEdgeScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_vtabptr_9networkit_14sparsification_RandomNodeEdgeScore;


/* "networkit/sparsification.pyx":573
 * 		_LocalFilterScoreInt(const _Graph& G, const vector[double]& a, bool_t logarithmic) except +
 * 
 * cdef class LocalFilterScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalFilterScore(G, a, logarithmic=True)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_LocalFilterScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_LocalFilterScore *__pyx_vtabptr_9networkit_14sparsification_LocalFilterScore;


/* "networkit/sparsification.pyx":607
 * 		_ChanceCorrectedTriangleScore(const _Graph& G, const vector[count]& triangles) except +
 * 
 * cdef class ChanceCorrectedTriangleScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ChanceCorrectedTriangleScore(G, triangles)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_ChanceCorrectedTriangleScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_vtabptr_9networkit_14sparsification_ChanceCorrectedTriangleScore;


/* "networkit/sparsification.pyx":635
 * 		_SCANStructuralSimilarityScore(_Graph G, const vector[count]& triangles) except +
 * 
 * cdef class SCANStructuralSimilarityScore(EdgeScore):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SCANStructuralSimilarityScore(G, triangles)
 */

struct __pyx_vtabstruct_9networkit_14sparsification_SCANStructuralSimilarityScore {
  struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_base;
};
static struct __pyx_vtabstruct_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_vtabptr_9networkit_14sparsification_SCANStructuralSimilarityScore;
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_VARARGS(args, i) PySequence_GetItem(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#else
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GetItem(args, i)
#endif
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_NewRef_VARARGS(arg) __Pyx_NewRef(arg)
    #define __Pyx_Arg_XDECREF_VARARGS(arg) Py_XDECREF(arg)
#else
    #define __Pyx_Arg_NewRef_VARARGS(arg) arg
    #define __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg  /* no-op, __Pyx_Arg_FASTCALL is direct and this needs
                                                   to have the same reference counting */
    #define __Pyx_Arg_XDECREF_FASTCALL(arg)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
    #define __Pyx_Arg_NewRef_FASTCALL(arg) __Pyx_Arg_NewRef_VARARGS(arg)
    #define __Pyx_Arg_XDECREF_FASTCALL(arg) __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kw, const char* function_name, int kw_allowed);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* MoveIfSupported.proto */
#if CYTHON_USE_CPP_STD_MOVE
  #include <utility>
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) std::move(x)
#else
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) x
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_TrueDivideObjC(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceTrueDivide(op1, op2) : PyNumber_TrueDivide(op1, op2))
#endif

/* py_abs.proto */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *num);
#define __Pyx_PyNumber_Absolute(x)\
    ((likely(PyLong_CheckExact(x))) ?\
         (likely(__Pyx_PyLong_IsNonNeg(x)) ? (Py_INCREF(x), (x)) : __Pyx_PyLong_AbsNeg(x)) :\
         PyNumber_Absolute(x))
#else
#define __Pyx_PyNumber_Absolute(x)  PyNumber_Absolute(x)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *typesModule=NULL, *methodType=NULL, *result=NULL;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    typesModule = PyImport_ImportModule("types");
    if (!typesModule) return NULL;
    methodType = PyObject_GetAttrString(typesModule, "MethodType");
    Py_DECREF(typesModule);
    if (!methodType) return NULL;
    result = PyObject_CallFunctionObjArgs(methodType, func, self, NULL);
    Py_DECREF(methodType);
    return result;
}
#elif PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc);
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractCObj(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_SubtractCObj(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* RaiseClosureNameError.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* CallNextTpDealloc.proto */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_3_0_8
#define __PYX_HAVE_RT_ImportType_proto_3_0_8
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_8(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_8(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_0_8 {
   __Pyx_ImportType_CheckSize_Error_3_0_8 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_0_8 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_0_8 = 2
};
static PyTypeObject *__Pyx_ImportType_3_0_8(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_8 check_size);
#endif

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyTypeObject* typeptr , void* vtable);

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyTypeObject *type);

/* MergeVTables.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type);
#endif

/* SetupReduce.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce(PyObject* type_obj);
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* Py3UpdateBases.proto */
static PyObject* __Pyx_PEP560_update_bases(PyObject *bases);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)
#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);
#else
#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE uint64_t __Pyx_PyInt_As_uint64_t(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint64_t(uint64_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */
static bool __pyx_f_9networkit_14sparsification_9EdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_17TriangleEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_19EdgeScoreLinearizer_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_19EdgeScoreNormalizer_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_16EdgeScoreBlender_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_18GeometricMeanScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_21SimmelianOverlapScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_18PrefixJaccardScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_15MultiscaleScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_15RandomEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_20LocalSimilarityScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_15ForestFireScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_16LocalDegreeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_19RandomNodeEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_16LocalFilterScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_28ChanceCorrectedTriangleScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self); /* proto*/
static bool __pyx_f_9networkit_14sparsification_29SCANStructuralSimilarityScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self); /* proto*/

/* Module declarations from "libcpp" */

/* Module declarations from "libcpp.vector" */

/* Module declarations from "networkit.base" */

/* Module declarations from "libcpp.utility" */

/* Module declarations from "libc.string" */

/* Module declarations from "libcpp.string" */

/* Module declarations from "libcpp.unordered_set" */

/* Module declarations from "libc.stdint" */

/* Module declarations from "libcpp.map" */

/* Module declarations from "libcpp.set" */

/* Module declarations from "networkit.structures" */

/* Module declarations from "networkit.graph" */

/* Module declarations from "networkit.sparsification" */
static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *); /*proto*/
static std::vector<bool>  __pyx_convert_vector_from_py_bool(PyObject *); /*proto*/
static std::vector<__pyx_t_9networkit_10structures_count>  __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(std::vector<double>  const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(std::vector<__pyx_t_9networkit_10structures_count>  const &); /*proto*/
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "networkit.sparsification"
extern int __pyx_module_is_main_networkit__sparsification;
int __pyx_module_is_main_networkit__sparsification = 0;

/* Implementation of "networkit.sparsification" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_zip;
static PyObject *__pyx_builtin_sorted;
static PyObject *__pyx_builtin_MemoryError;
/* #### Code section: string_decls ### */
static const char __pyx_k_G[] = "G";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_u[] = "u";
static const char __pyx_k_v[] = "v";
static const char __pyx_k_w[] = "w";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k__9[] = ".";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_gf[] = "gf";
static const char __pyx_k_ms[] = "ms";
static const char __pyx_k_pf[] = "pf";
static const char __pyx_k_PLM[] = "PLM";
static const char __pyx_k__10[] = "";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_eid[] = "eid";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_par[] = "par";
static const char __pyx_k_run[] = "run";
static const char __pyx_k_zip[] = "zip";
static const char __pyx_k__171[] = "?";
static const char __pyx_k_a_ms[] = "a_ms";
static const char __pyx_k_a_sj[] = "a_sj";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_norm[] = "norm";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_tebr[] = "tebr";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_above[] = "above";
static const char __pyx_k_index[] = "_index";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_omega[] = "omega";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_score[] = "score";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_turbo[] = "turbo";
static const char __pyx_k_upper[] = "upper";
static const char __pyx_k_cdAlgo[] = "cdAlgo";
static const char __pyx_k_degree[] = "degree";
static const char __pyx_k_edgeId[] = "edgeId";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_factor[] = "factor";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_object[] = "object";
static const char __pyx_k_offset[] = "offset";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_refine[] = "refine";
static const char __pyx_k_result[] = "result";
static const char __pyx_k_scorer[] = "scorer";
static const char __pyx_k_scores[] = "scores";
static const char __pyx_k_sorted[] = "sorted";
static const char __pyx_k_algDist[] = "algDist";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_ffScore[] = "ffScore";
static const char __pyx_k_inverse[] = "inverse";
static const char __pyx_k_maxRank[] = "maxRank";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_reScore[] = "reScore";
static const char __pyx_k_reverse[] = "reverse";
static const char __pyx_k_setitem[] = "__setitem__";
static const char __pyx_k_squared[] = "squared";
static const char __pyx_k_ABS_ZERO[] = "_ABS_ZERO";
static const char __pyx_k_distance[] = "distance";
static const char __pyx_k_forEdges[] = "forEdges";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_increase[] = "increase";
static const char __pyx_k_maxSteps[] = "maxSteps";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_rneScore[] = "rneScore";
static const char __pyx_k_set_name[] = "__set_name__";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_together[] = "together";
static const char __pyx_k_EdgeScore[] = "EdgeScore";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_algorithm[] = "algorithm";
static const char __pyx_k_attribute[] = "attribute";
static const char __pyx_k_bestRatio[] = "bestRatio";
static const char __pyx_k_calculate[] = "calculate";
static const char __pyx_k_community[] = "community";
static const char __pyx_k_edgeRatio[] = "edgeRatio";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_iterEdges[] = "iterEdges";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_parameter[] = "parameter";
static const char __pyx_k_partition[] = "partition";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_scanScore[] = "scanScore";
static const char __pyx_k_selection[] = "selection";
static const char __pyx_k_triangles[] = "triangles";
static const char __pyx_k_Sparsifier[] = "Sparsifier";
static const char __pyx_k_attribute0[] = "attribute0";
static const char __pyx_k_attribute1[] = "attribute1";
static const char __pyx_k_constValue[] = "constValue";
static const char __pyx_k_edgeScores[] = "edgeScores";
static const char __pyx_k_estimation[] = "estimation";
static const char __pyx_k_lowerBound[] = "lowerBound";
static const char __pyx_k_preprocess[] = "preprocess";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_sparsified[] = "sparsified";
static const char __pyx_k_sparsifier[] = "sparsifier";
static const char __pyx_k_upperBound[] = "upperBound";
static const char __pyx_k_MemoryError[] = "MemoryError";
static const char __pyx_k_a_triangles[] = "a_triangles";
static const char __pyx_k_attribute_2[] = "_attribute";
static const char __pyx_k_localDegree[] = "localDegree";
static const char __pyx_k_logarithmic[] = "logarithmic";
static const char __pyx_k_minDistance[] = "minDistance";
static const char __pyx_k_mro_entries[] = "__mro_entries__";
static const char __pyx_k_quadrangles[] = "quadrangles";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_getAttribute[] = "getAttribute";
static const char __pyx_k_getParameter[] = "getParameter";
static const char __pyx_k_getPartition[] = "getPartition";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_parameterize[] = "parameterize";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_ConstantScore[] = "ConstantScore";
static const char __pyx_k_bestParameter[] = "bestParameter";
static const char __pyx_k_class_getitem[] = "__class_getitem__";
static const char __pyx_k_getEdgeScores[] = "getEdgeScores";
static const char __pyx_k_init_subclass[] = "__init_subclass__";
static const char __pyx_k_localSimScore[] = "localSimScore";
static const char __pyx_k_numberOfEdges[] = "numberOfEdges";
static const char __pyx_k_numberSystems[] = "numberSystems";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_triangleScore[] = "triangleScore";
static const char __pyx_k_SCANSparsifier[] = "SCANSparsifier";
static const char __pyx_k_inputAttribute[] = "inputAttribute";
static const char __pyx_k_originalScores[] = "originalScores";
static const char __pyx_k_paramAlgorithm[] = "paramAlgorithm";
static const char __pyx_k_withEdgeScores[] = "withEdgeScores";
static const char __pyx_k_EdgeScore_score[] = "EdgeScore.score";
static const char __pyx_k_ForestFireScore[] = "ForestFireScore";
static const char __pyx_k_LocalSparsifier[] = "LocalSparsifier";
static const char __pyx_k_MultiscaleScore[] = "MultiscaleScore";
static const char __pyx_k_RandomEdgeScore[] = "RandomEdgeScore";
static const char __pyx_k_burnProbability[] = "burnProbability";
static const char __pyx_k_degsToAttrValue[] = "degsToAttrValue";
static const char __pyx_k_meanQuadrangles[] = "meanQuadrangles";
static const char __pyx_k_none_randomized[] = "none randomized";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_EdgeScoreBlender[] = "EdgeScoreBlender";
static const char __pyx_k_EdgeScore_scores[] = "EdgeScore.scores";
static const char __pyx_k_LocalDegreeScore[] = "LocalDegreeScore";
static const char __pyx_k_LocalFilterScore[] = "LocalFilterScore";
static const char __pyx_k_currentEdgeRatio[] = "currentEdgeRatio";
static const char __pyx_k_getRankAttribute[] = "getRankAttribute";
static const char __pyx_k_getWeightedGraph[] = "getWeightedGraph";
static const char __pyx_k_iterEdgesWeights[] = "iterEdgesWeights";
static const char __pyx_k_localDegreeScore[] = "localDegreeScore";
static const char __pyx_k_localFilterScore[] = "localFilterScore";
static const char __pyx_k_numberIterations[] = "numberIterations";
static const char __pyx_k_simmelianOverlap[] = "simmelianOverlap";
static const char __pyx_k_targetBurntRatio[] = "targetBurntRatio";
static const char __pyx_k_upperEdgeIdBound[] = "upperEdgeIdBound";
static const char __pyx_k_AlgebraicDistance[] = "AlgebraicDistance";
static const char __pyx_k_EdgeScoreAsWeight[] = "EdgeScoreAsWeight";
static const char __pyx_k_Sparsifier_scores[] = "Sparsifier.scores";
static const char __pyx_k_TriangleEdgeScore[] = "TriangleEdgeScore";
static const char __pyx_k_AdamicAdarDistance[] = "AdamicAdarDistance";
static const char __pyx_k_GeometricMeanScore[] = "GeometricMeanScore";
static const char __pyx_k_PrefixJaccardScore[] = "PrefixJaccardScore";
static const char __pyx_k_TriangleSparsifier[] = "TriangleSparsifier";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_getSparsifiedGraph[] = "_getSparsifiedGraph";
static const char __pyx_k_EdgeScoreLinearizer[] = "EdgeScoreLinearizer";
static const char __pyx_k_EdgeScoreNormalizer[] = "EdgeScoreNormalizer";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_RandomNodeEdgeScore[] = "RandomNodeEdgeScore";
static const char __pyx_k_lowerParameterBound[] = "lowerParameterBound";
static const char __pyx_k_upperParameterBound[] = "upperParameterBound";
static const char __pyx_k_ConstantScore___init[] = "ConstantScore.__init__";
static const char __pyx_k_ConstantScore_scores[] = "ConstantScore.scores";
static const char __pyx_k_ForestFireSparsifier[] = "ForestFireSparsifier";
static const char __pyx_k_LocalSimilarityScore[] = "LocalSimilarityScore";
static const char __pyx_k_MultiscaleSparsifier[] = "MultiscaleSparsifier";
static const char __pyx_k_RandomEdgeSparsifier[] = "RandomEdgeSparsifier";
static const char __pyx_k_getSparsifiedGraph_2[] = "getSparsifiedGraph";
static const char __pyx_k_GlobalThresholdFilter[] = "GlobalThresholdFilter";
static const char __pyx_k_Implement_in_subclass[] = "Implement in subclass";
static const char __pyx_k_LocalDegreeSparsifier[] = "LocalDegreeSparsifier";
static const char __pyx_k_SCANSparsifier_scores[] = "SCANSparsifier.scores";
static const char __pyx_k_SimmelianOverlapScore[] = "SimmelianOverlapScore";
static const char __pyx_k_LocalSparsifier___init[] = "LocalSparsifier.__init__";
static const char __pyx_k_LocalSparsifier_scores[] = "LocalSparsifier.scores";
static const char __pyx_k_SimpleParameterization[] = "SimpleParameterization";
static const char __pyx_k_Sparsifier_getParameter[] = "Sparsifier.getParameter";
static const char __pyx_k_quadranglePrefixJaccard[] = "quadranglePrefixJaccard";
static const char __pyx_k_ModularityPartitionScore[] = "ModularityPartitionScore";
static const char __pyx_k_RandomNodeEdgeSparsifier[] = "RandomNodeEdgeSparsifier";
static const char __pyx_k_getSparsifiedGraphOfSize[] = "getSparsifiedGraphOfSize";
static const char __pyx_k_networkit_sparsification[] = "networkit.sparsification";
static const char __pyx_k_EdgeScore___reduce_cython[] = "EdgeScore.__reduce_cython__";
static const char __pyx_k_LocalSimilaritySparsifier[] = "LocalSimilaritySparsifier";
static const char __pyx_k_TriangleSparsifier_scores[] = "TriangleSparsifier.scores";
static const char __pyx_k_DegreeMultiscaleSparsifier[] = "DegreeMultiscaleSparsifier";
static const char __pyx_k_sizeIncreasesWithParameter[] = "sizeIncreasesWithParameter";
static const char __pyx_k_AlgebraicDistanceSparsifier[] = "AlgebraicDistanceSparsifier";
static const char __pyx_k_EdgeScore___setstate_cython[] = "EdgeScore.__setstate_cython__";
static const char __pyx_k_ForestFireSparsifier___init[] = "ForestFireSparsifier.__init__";
static const char __pyx_k_ForestFireSparsifier_scores[] = "ForestFireSparsifier.scores";
static const char __pyx_k_JaccardSimilaritySparsifier[] = "JaccardSimilaritySparsifier";
static const char __pyx_k_MultiscaleSparsifier_scores[] = "MultiscaleSparsifier.scores";
static const char __pyx_k_RandomEdgeSparsifier_scores[] = "RandomEdgeSparsifier.scores";
static const char __pyx_k_BinarySearchParameterization[] = "BinarySearchParameterization";
static const char __pyx_k_ChanceCorrectedTriangleScore[] = "ChanceCorrectedTriangleScore";
static const char __pyx_k_LocalDegreeSparsifier_scores[] = "LocalDegreeSparsifier.scores";
static const char __pyx_k_getParameterizationAlgorithm[] = "_getParameterizationAlgorithm";
static const char __pyx_k_networkit_sparsification_pyx[] = "networkit/sparsification.pyx";
static const char __pyx_k_JaccardSimilarityAttributizer[] = "JaccardSimilarityAttributizer";
static const char __pyx_k_SCANStructuralSimilarityScore[] = "SCANStructuralSimilarityScore";
static const char __pyx_k_SimmelianMultiscaleSparsifier[] = "SimmelianMultiscaleSparsifier";
static const char __pyx_k_SimmelianSparsifierParametric[] = "SimmelianSparsifierParametric";
static const char __pyx_k_Sparsifier_getSparsifiedGraph[] = "Sparsifier.getSparsifiedGraph";
static const char __pyx_k_CompleteSearchParameterization[] = "CompleteSearchParameterization";
static const char __pyx_k_JaccardSimilaritySparsifier_An[] = " \n\tJaccardSimilaritySparsifier()\n\n\tAn implementation of the Jaccard Similarity sparsification approach introduced by Satuluri et al.\n\t";
static const char __pyx_k_Sparsifier__getSparsifiedGraph[] = "Sparsifier._getSparsifiedGraph";
static const char __pyx_k_getRankAttribute_locals_lambda[] = "getRankAttribute.<locals>.<lambda>";
static const char __pyx_k_Abstract_base_class_representin[] = " Abstract base class representing a graph sparsification algorithm that\n\tuses only one parameter to determine the degree of filtering. ";
static const char __pyx_k_AlgebraicDistanceSparsifier_num[] = " \n\tAlgebraicDistanceSparsifier(numberSystems=10, numberIterations=30, omega=0.5, norm=0)\n\t\n\tAllows for global filtering with respect to (inverted) algebraic distances.\n\t\n\tParameters\n\t----------\n\tnumberSystems : int, optional\n\t \tNumber of vectors/systems used for algebraic iteration. Default: 10\n\tnumberIterations : int, optional\n\t \tNumber of iterations in each system. Default: 30\n\tomega : float, optional\n\t \tAttenuation factor in [0,1] influencing convergence speed. Default: 0.5\n\tnorm : int, optional\n\t\tThe norm factor of the extended algebraic distance. Default: 0\n\t";
static const char __pyx_k_BinarySearchParameterization_si[] = " \n\tBinarySearchParameterization(sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps)\n\t\n\tParameterizes a sparsification algorithm using binary search.\n\n\tParameters\n\t----------\n\tsizeIncreasesWithParameter : bool\n\t\tSet to True if the size of the sparsified graph increases with increasing parameter value.\n\tlowerParameterBound : float\n\t\tLower bound of the parameter domain (inclusive).\n\tupperParameterBound : float\n\t\tUpper bound of the parameter domain (inclusive).\n\tmaxSteps : int\n\t\tThe maximum number of steps to perform during binary search.\n\t";
static const char __pyx_k_ChibaNishizekiTriangleEdgeScore[] = "ChibaNishizekiTriangleEdgeScore";
static const char __pyx_k_ConstantScore_constValue_1_0_As[] = " \n\tConstantScore(constValue=1.0)\n\n\tAssigns as an attribute the same value to each edge (for sanity checks).\n\n\tParameters\n\t----------\n\tconstValue : float, optional\n\t\tValue to assign to each edge. Default: 1.0\n\t";
static const char __pyx_k_DegreeMultiscaleSparsifier_degs[] = " \n\tDegreeMultiscaleSparsifier(degsToAttrValue)\n\n\tMultiscale Sparsifier that uses node degrees (mapped to edges) as input edge weight.\n\n\tParameters\n\t----------\n\tdegsToAttrValue : function\n\t\tFunction that maps two node degrees to an edge score.\n\t";
static const char __pyx_k_Error_you_may_not_use_EdgeScore[] = "Error, you may not use EdgeScore directly, use a sub-class instead";
static const char __pyx_k_ForestFireScore___reduce_cython[] = "ForestFireScore.__reduce_cython__";
static const char __pyx_k_ForestFireSparsifier_burnProbab[] = "\n\tForestFireSparsifier(burnProbability, targetBurntRatio)\n\t\n\tA variant of the Forest Fire sparsification approach proposed by Leskovec et al.\n\t\n\tParameters\n\t----------\n\tburnProbability : float\n\t\tThe probability that the neighbor of a burnt node gets burnt as well.\n\tedgeRatio : float\n\t\tThe fires will stop when a edgeRatio * edgeCount edges have been burnt.\n\t";
static const char __pyx_k_GlobalThresholdFilter_calculate[] = "GlobalThresholdFilter.calculate";
static const char __pyx_k_LocalDegreeSparsifier_An_implem[] = " \n\tLocalDegreeSparsifier()\n\t\n\tAn implementation of the Local Degree sparsification algorithm.\n\t";
static const char __pyx_k_LocalSimilarityScore___setstate[] = "LocalSimilarityScore.__setstate_cython__";
static const char __pyx_k_LocalSimilaritySparsifier_An_im[] = "\n\tLocalSimilaritySparsifier()\n\n\tAn implementation of the Local Similarity sparsification approach introduced by Satuluri et al.\n\t";
static const char __pyx_k_LocalSparsifier_sparsifier_Spar[] = "\n\tLocalSparsifier(sparsifier)\n\n\tSparsification algorithm using an input sparsifier and passing the result of\n\tthis algorithm to networkit.sparsification.LocalFilterScore for choosing\n\tedges, which should be present in the sparsified graph.\n\t";
static const char __pyx_k_ModularityPartitionScore_Sparsi[] = "\n\tModularityPartitionScore()\n\n\tSparsification algorithm using networkit.community.PLM algorithm to detect\n\tcommunities and select only edges, where both ends are member of the same\n\tcommunity.\n\t";
static const char __pyx_k_ModularityPartitionScore_scores[] = "ModularityPartitionScore.scores.<locals>.together";
static const char __pyx_k_MultiscaleScore___reduce_cython[] = "MultiscaleScore.__reduce_cython__";
static const char __pyx_k_MultiscaleSparsifier_An_impleme[] = " \n\tMultiscaleSparsifier()\n\n\tAn implementation of the Multiscale backbone approach introduced by Serrano et al.\n\t";
static const char __pyx_k_QuadrilateralSimmelianSparsifie[] = " \n\tQuadrilateralSimmelianSparsifier()\t\n\n\tAn implementation of the Simmelian Sparsifiers based on quadrangles.\n\t";
static const char __pyx_k_RandomEdgeScore___reduce_cython[] = "RandomEdgeScore.__reduce_cython__";
static const char __pyx_k_RandomEdgeSparsifier_Random_Edg[] = "\n\tRandomEdgeSparsifier()\n\n\tRandom Edge sampling. Edges to keep in the sparsified graph are selected uniformly at random.\n\t";
static const char __pyx_k_RandomNodeEdgeSparsifier_Random[] = "\n\tRandomNodeEdgeSparsifier()\n\n\tRandom Edge sampling. Edges and nodes to keep in the sparsified graph are selected uniformly at random.\n\n\tParameters\n\t----------\n\tabove : bool, optional\n\t\tIf set to True (False), all nodes and edges with an attribute value equal to or above (below)\n\t\twill be kept in the sparsified graph. Default: True\n\t";
static const char __pyx_k_RandomNodeEdgeSparsifier___init[] = "RandomNodeEdgeSparsifier.__init__";
static const char __pyx_k_RandomNodeEdgeSparsifier_scores[] = "RandomNodeEdgeSparsifier.scores";
static const char __pyx_k_SCANSparsifier_A_sparsifiier_de[] = " \n\tSCANSparsifier()\n\t\n\tA sparsifiier dervived from 'SCAN: a structural clustering algorithm for networks'\n\t";
static const char __pyx_k_SCANStructuralSimilarityScore_2[] = "SCANStructuralSimilarityScore.__reduce_cython__";
static const char __pyx_k_SCANStructuralSimilarityScore_3[] = "SCANStructuralSimilarityScore.__setstate_cython__";
static const char __pyx_k_SimmelianMultiscaleSparsifier_M[] = "\n\tSimmelianMultiscaleSparsifier()\t\n\n\tMultiscale Sparsifier that uses triangle counts as input edge weight.\n\t";
static const char __pyx_k_SimmelianSparsifierNonParametri[] = "\n\tSimmelianSparsifierNonParametric()\n\t\n\tAn implementation of the Non-parametric variant of the Simmelian Sparsifiers\n\tintroduced by Nick et al. \n\t";
static const char __pyx_k_SimmelianSparsifierParametric_2[] = "SimmelianSparsifierParametric.__init__";
static const char __pyx_k_SimmelianSparsifierParametric_A[] = " \n\tSimmelianSparsifierParametric()\n\n\tAn implementation of the Parametric variant of the Simmelian Sparsifiers\n\tintroduced by Nick et al.\n\t";
static const char __pyx_k_SimpleParameterization_A_parame[] = " \n\tSimpleParameterization()\n\t\n\tA parameterization algorithm representds an algorithm that, given a graph\n\tand a sparsifier, calculates a parameter value such that a desired edge ratio is met.\n\tThe SimpleParameterization strategy simply returns the input edgeRatio as parameterization\n\tresult. \n\t";
static const char __pyx_k_TriangleSparsifier_Allows_for_g[] = " \n\tTriangleSparsifier()\n\n\tAllows for global filtering with respect to triangle counts.\n\t";
static const char __pyx_k_parameterization_method_not_yet[] = "parameterization method not yet implemented.";
static const char __pyx_k_AlgebraicDistanceSparsifier___in[] = "AlgebraicDistanceSparsifier.__init__";
static const char __pyx_k_AlgebraicDistanceSparsifier__get[] = "AlgebraicDistanceSparsifier._getSparsifiedGraph";
static const char __pyx_k_AlgebraicDistanceSparsifier_scor[] = "AlgebraicDistanceSparsifier.scores";
static const char __pyx_k_BinarySearchParameterization___i[] = "BinarySearchParameterization.__init__";
static const char __pyx_k_BinarySearchParameterization_par[] = "BinarySearchParameterization.parameterize";
static const char __pyx_k_ChanceCorrectedTriangleScore___r[] = "ChanceCorrectedTriangleScore.__reduce_cython__";
static const char __pyx_k_ChanceCorrectedTriangleScore___s[] = "ChanceCorrectedTriangleScore.__setstate_cython__";
static const char __pyx_k_ChibaNishizekiQuadrangleEdgeScor[] = "ChibaNishizekiQuadrangleEdgeScore";
static const char __pyx_k_CompleteSearchParameterization_2[] = " \n\tCompleteSearchParameterization(lowerParameterBound, upperParameterBound)\n\t\n\tParameterizes a sparsification algorithm using complete search\n\t(applicable only to algorithms which take as input a parameter from a small\n\tset of possible values).\n\t\n\tParameters\n\t----------\n\tlowerParameterBound : int\n\t\tLower bound of the parameter domain (inclusive).\n\tupperParameterBound : int\n\t\tUpper bound of the parameter domain (inclusive).\n\t";
static const char __pyx_k_CompleteSearchParameterization_3[] = "CompleteSearchParameterization.__init__";
static const char __pyx_k_CompleteSearchParameterization_p[] = "CompleteSearchParameterization.parameterize";
static const char __pyx_k_DegreeMultiscaleSparsifier___ini[] = "DegreeMultiscaleSparsifier.__init__";
static const char __pyx_k_DegreeMultiscaleSparsifier__getP[] = "DegreeMultiscaleSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_DegreeMultiscaleSparsifier__getS[] = "DegreeMultiscaleSparsifier._getSparsifiedGraph";
static const char __pyx_k_DegreeMultiscaleSparsifier_score[] = "DegreeMultiscaleSparsifier.scores";
static const char __pyx_k_EdgeScoreAsWeight___reduce_cytho[] = "EdgeScoreAsWeight.__reduce_cython__";
static const char __pyx_k_EdgeScoreAsWeight___setstate_cyt[] = "EdgeScoreAsWeight.__setstate_cython__";
static const char __pyx_k_EdgeScoreAsWeight_getWeightedGra[] = "EdgeScoreAsWeight.getWeightedGraph";
static const char __pyx_k_EdgeScoreBlender___reduce_cython[] = "EdgeScoreBlender.__reduce_cython__";
static const char __pyx_k_EdgeScoreBlender___setstate_cyth[] = "EdgeScoreBlender.__setstate_cython__";
static const char __pyx_k_EdgeScoreLinearizer___reduce_cyt[] = "EdgeScoreLinearizer.__reduce_cython__";
static const char __pyx_k_EdgeScoreLinearizer___setstate_c[] = "EdgeScoreLinearizer.__setstate_cython__";
static const char __pyx_k_EdgeScoreNormalizer___reduce_cyt[] = "EdgeScoreNormalizer.__reduce_cython__";
static const char __pyx_k_EdgeScoreNormalizer___setstate_c[] = "EdgeScoreNormalizer.__setstate_cython__";
static const char __pyx_k_ForestFireScore___setstate_cytho[] = "ForestFireScore.__setstate_cython__";
static const char __pyx_k_ForestFireSparsifier__getParamet[] = "ForestFireSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_ForestFireSparsifier__getSparsif[] = "ForestFireSparsifier._getSparsifiedGraph";
static const char __pyx_k_GeometricMeanScore___reduce_cyth[] = "GeometricMeanScore.__reduce_cython__";
static const char __pyx_k_GeometricMeanScore___setstate_cy[] = "GeometricMeanScore.__setstate_cython__";
static const char __pyx_k_GlobalThresholdFilter___reduce_c[] = "GlobalThresholdFilter.__reduce_cython__";
static const char __pyx_k_GlobalThresholdFilter___setstate[] = "GlobalThresholdFilter.__setstate_cython__";
static const char __pyx_k_JaccardSimilaritySparsifier__get[] = "JaccardSimilaritySparsifier._getSparsifiedGraph";
static const char __pyx_k_JaccardSimilaritySparsifier_scor[] = "JaccardSimilaritySparsifier.scores";
static const char __pyx_k_LocalDegreeScore___reduce_cython[] = "LocalDegreeScore.__reduce_cython__";
static const char __pyx_k_LocalDegreeScore___setstate_cyth[] = "LocalDegreeScore.__setstate_cython__";
static const char __pyx_k_LocalDegreeSparsifier__getParame[] = "LocalDegreeSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_LocalDegreeSparsifier__getSparsi[] = "LocalDegreeSparsifier._getSparsifiedGraph";
static const char __pyx_k_LocalFilterScore___reduce_cython[] = "LocalFilterScore.__reduce_cython__";
static const char __pyx_k_LocalFilterScore___setstate_cyth[] = "LocalFilterScore.__setstate_cython__";
static const char __pyx_k_LocalSimilarityScore___reduce_cy[] = "LocalSimilarityScore.__reduce_cython__";
static const char __pyx_k_LocalSimilaritySparsifier__getPa[] = "LocalSimilaritySparsifier._getParameterizationAlgorithm";
static const char __pyx_k_LocalSimilaritySparsifier__getSp[] = "LocalSimilaritySparsifier._getSparsifiedGraph";
static const char __pyx_k_LocalSimilaritySparsifier_scores[] = "LocalSimilaritySparsifier.scores";
static const char __pyx_k_LocalSparsifier__getParameteriza[] = "LocalSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_LocalSparsifier__getSparsifiedGr[] = "LocalSparsifier._getSparsifiedGraph";
static const char __pyx_k_MultiscaleScore___setstate_cytho[] = "MultiscaleScore.__setstate_cython__";
static const char __pyx_k_MultiscaleSparsifier__getParamet[] = "MultiscaleSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_MultiscaleSparsifier__getSparsif[] = "MultiscaleSparsifier._getSparsifiedGraph";
static const char __pyx_k_PrefixJaccardScore___reduce_cyth[] = "PrefixJaccardScore.__reduce_cython__";
static const char __pyx_k_PrefixJaccardScore___setstate_cy[] = "PrefixJaccardScore.__setstate_cython__";
static const char __pyx_k_QuadrilateralSimmelianSparsifier[] = "QuadrilateralSimmelianSparsifier";
static const char __pyx_k_RandomEdgeScore___setstate_cytho[] = "RandomEdgeScore.__setstate_cython__";
static const char __pyx_k_RandomEdgeSparsifier__getParamet[] = "RandomEdgeSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_RandomEdgeSparsifier__getSparsif[] = "RandomEdgeSparsifier._getSparsifiedGraph";
static const char __pyx_k_RandomNodeEdgeScore___reduce_cyt[] = "RandomNodeEdgeScore.__reduce_cython__";
static const char __pyx_k_RandomNodeEdgeScore___setstate_c[] = "RandomNodeEdgeScore.__setstate_cython__";
static const char __pyx_k_RandomNodeEdgeSparsifier__getPar[] = "RandomNodeEdgeSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_RandomNodeEdgeSparsifier__getSpa[] = "RandomNodeEdgeSparsifier._getSparsifiedGraph";
static const char __pyx_k_SCANSparsifier__getParameterizat[] = "SCANSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_SCANSparsifier__getSparsifiedGra[] = "SCANSparsifier._getSparsifiedGraph";
static const char __pyx_k_SimmelianMultiscaleSparsifier__g[] = "SimmelianMultiscaleSparsifier._getSparsifiedGraph";
static const char __pyx_k_SimmelianMultiscaleSparsifier_sc[] = "SimmelianMultiscaleSparsifier.scores";
static const char __pyx_k_SimmelianOverlapScore___reduce_c[] = "SimmelianOverlapScore.__reduce_cython__";
static const char __pyx_k_SimmelianOverlapScore___setstate[] = "SimmelianOverlapScore.__setstate_cython__";
static const char __pyx_k_SimmelianSparsifierNonParametric[] = "SimmelianSparsifierNonParametric";
static const char __pyx_k_SimmelianSparsifierParametric__g[] = "SimmelianSparsifierParametric._getSparsifiedGraph";
static const char __pyx_k_SimmelianSparsifierParametric_sc[] = "SimmelianSparsifierParametric.scores";
static const char __pyx_k_SimpleParameterization_parameter[] = "SimpleParameterization.parameterize";
static const char __pyx_k_Sparsifier__getParameterizationA[] = "Sparsifier._getParameterizationAlgorithm";
static const char __pyx_k_Sparsifier_getSparsifiedGraphOfS[] = "Sparsifier.getSparsifiedGraphOfSize";
static const char __pyx_k_TriangleEdgeScore___reduce_cytho[] = "TriangleEdgeScore.__reduce_cython__";
static const char __pyx_k_TriangleEdgeScore___setstate_cyt[] = "TriangleEdgeScore.__setstate_cython__";
static const char __pyx_k_TriangleSparsifier__getParameter[] = "TriangleSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_TriangleSparsifier__getSparsifie[] = "TriangleSparsifier._getSparsifiedGraph";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_score_must_be_either_a_vector_of[] = "score must be either a vector of integer or float";
static const char __pyx_k_self__this_cannot_be_converted_t[] = "self._this cannot be converted to a Python object for pickling";
static const char __pyx_k_ChibaNishizekiTriangleEdgeScore_2[] = "ChibaNishizekiTriangleEdgeScore.__reduce_cython__";
static const char __pyx_k_ChibaNishizekiTriangleEdgeScore_3[] = "ChibaNishizekiTriangleEdgeScore.__setstate_cython__";
static const char __pyx_k_ModularityPartitionScore_scores_2[] = "ModularityPartitionScore.scores.<locals>.<lambda>";
static const char __pyx_k_ModularityPartitionScore_scores_3[] = "ModularityPartitionScore.scores";
static const char __pyx_k_AlgebraicDistanceSparsifier__get_2[] = "AlgebraicDistanceSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_ChibaNishizekiQuadrangleEdgeScor_2[] = "ChibaNishizekiQuadrangleEdgeScore.__reduce_cython__";
static const char __pyx_k_ChibaNishizekiQuadrangleEdgeScor_3[] = "ChibaNishizekiQuadrangleEdgeScore.__setstate_cython__";
static const char __pyx_k_JaccardSimilaritySparsifier__get_2[] = "JaccardSimilaritySparsifier._getParameterizationAlgorithm";
static const char __pyx_k_QuadrilateralSimmelianSparsifier_2[] = "QuadrilateralSimmelianSparsifier.scores";
static const char __pyx_k_QuadrilateralSimmelianSparsifier_3[] = "QuadrilateralSimmelianSparsifier._getSparsifiedGraph";
static const char __pyx_k_QuadrilateralSimmelianSparsifier_4[] = "QuadrilateralSimmelianSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_SimmelianMultiscaleSparsifier__g_2[] = "SimmelianMultiscaleSparsifier._getParameterizationAlgorithm";
static const char __pyx_k_SimmelianSparsifierNonParametric_2[] = "SimmelianSparsifierNonParametric.scores";
static const char __pyx_k_SimmelianSparsifierNonParametric_3[] = "SimmelianSparsifierNonParametric._getSparsifiedGraph";
static const char __pyx_k_SimmelianSparsifierNonParametric_4[] = "SimmelianSparsifierNonParametric._getParameterizationAlgorithm";
static const char __pyx_k_SimmelianSparsifierParametric__g_2[] = "SimmelianSparsifierParametric._getParameterizationAlgorithm";
/* #### Code section: decls ### */
static int __pyx_pf_9networkit_14sparsification_9EdgeScore___init__(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_namedargs); /* proto */
static void __pyx_pf_9networkit_14sparsification_9EdgeScore_2__dealloc__(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_4score(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self, PyObject *__pyx_v_u, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_6scores(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_17TriangleEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_17TriangleEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_17TriangleEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_score, PyObject *__pyx_v_inverse); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, PyObject *__pyx_v_score, bool __pyx_v_inverse, double __pyx_v_lower, double __pyx_v_upper); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_16EdgeScoreBlender___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute0, std::vector<double>  __pyx_v_attribute1, std::vector<bool>  __pyx_v_selection); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_16EdgeScoreBlender_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_16EdgeScoreBlender_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_18GeometricMeanScore___cinit__(struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18GeometricMeanScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18GeometricMeanScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_score, bool __pyx_v_squared, __pyx_t_9networkit_10structures_edgeweight __pyx_v_offset, __pyx_t_9networkit_10structures_edgeweight __pyx_v_factor); /* proto */
static void __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_2__dealloc__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_4getWeightedGraph(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore___cinit__(struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles, __pyx_t_9networkit_10structures_count __pyx_v_maxRank); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_18PrefixJaccardScore___cinit__(struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18PrefixJaccardScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18PrefixJaccardScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_15MultiscaleScore___cinit__(struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15MultiscaleScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15MultiscaleScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_15RandomEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15RandomEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15RandomEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_20LocalSimilarityScore___cinit__(struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20LocalSimilarityScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20LocalSimilarityScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_15ForestFireScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, double __pyx_v_pf, double __pyx_v_tebr); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15ForestFireScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15ForestFireScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_16LocalDegreeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_16LocalDegreeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_16LocalDegreeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_16LocalFilterScore___cinit__(struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_a, bool __pyx_v_logarithmic); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_16LocalFilterScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_16LocalFilterScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore___cinit__(struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter___cinit__(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute, double __pyx_v_e, bool __pyx_v_above); /* proto */
static void __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_2__dealloc__(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_4calculate(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_G, CYTHON_UNUSED PyObject *__pyx_v_parameter, CYTHON_UNUSED PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_6getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_8getSparsifiedGraphOfSize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_edgeRatio, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_10getParameter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_edgeRatio, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_22SimpleParameterization_parameterize(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_algorithm, CYTHON_UNUSED PyObject *__pyx_v_G, CYTHON_UNUSED PyObject *__pyx_v_attribute, PyObject *__pyx_v_edgeRatio); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_28BinarySearchParameterization___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_sizeIncreasesWithParameter, PyObject *__pyx_v_lowerParameterBound, PyObject *__pyx_v_upperParameterBound, PyObject *__pyx_v_maxSteps); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_28BinarySearchParameterization_2parameterize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_algorithm, PyObject *__pyx_v_G, PyObject *__pyx_v_attribute, PyObject *__pyx_v_edgeRatio); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_30CompleteSearchParameterization___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_lowerParameterBound, PyObject *__pyx_v_upperParameterBound); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_30CompleteSearchParameterization_2parameterize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_algorithm, PyObject *__pyx_v_G, PyObject *__pyx_v_attribute, PyObject *__pyx_v_edgeRatio); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_getRankAttribute(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_attribute, PyObject *__pyx_v_reverse); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_maxRank); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_degsToAttrValue); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_above); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_burnProbability, PyObject *__pyx_v_targetBurntRatio); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_14SCANSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_14SCANSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_14SCANSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18TriangleSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18TriangleSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_18TriangleSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_numberSystems, PyObject *__pyx_v_numberIterations, PyObject *__pyx_v_omega, PyObject *__pyx_v_norm); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_sparsifier); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_6scores_together(PyObject *__pyx_self, PyObject *__pyx_v_u, PyObject *__pyx_v_v); /* proto */
static PyObject *__pyx_lambda_funcdef_lambda1(PyObject *__pyx_self, PyObject *__pyx_v_u, PyObject *__pyx_v_v, CYTHON_UNUSED PyObject *__pyx_v_w, PyObject *__pyx_v_eid); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_13ConstantScore___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_constValue); /* proto */
static PyObject *__pyx_pf_9networkit_14sparsification_13ConstantScore_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_G); /* proto */
static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_TriangleEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreLinearizer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreNormalizer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreBlender(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_GeometricMeanScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreAsWeight(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_SimmelianOverlapScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_PrefixJaccardScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_MultiscaleScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_RandomEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_LocalSimilarityScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_ForestFireScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_LocalDegreeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_RandomNodeEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_LocalFilterScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_ChanceCorrectedTriangleScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_SCANStructuralSimilarityScore(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification_GlobalThresholdFilter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9networkit_14sparsification___pyx_scope_struct__scores(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyList_Type___setitem = {0, 0, 0, 0, 0};
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_9networkit_4base__CythonParentClass;
  PyTypeObject *__pyx_ptype_9networkit_4base_Algorithm;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_9networkit_10structures_Cover;
  PyTypeObject *__pyx_ptype_9networkit_10structures_Partition;
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_9networkit_5graph_Graph;
  PyTypeObject *__pyx_ptype_9networkit_5graph_NodeIntAttribute;
  PyTypeObject *__pyx_ptype_9networkit_5graph_NodeDoubleAttribute;
  PyTypeObject *__pyx_ptype_9networkit_5graph_NodeStringAttribute;
  PyTypeObject *__pyx_ptype_9networkit_5graph_EdgeIntAttribute;
  PyTypeObject *__pyx_ptype_9networkit_5graph_EdgeDoubleAttribute;
  PyTypeObject *__pyx_ptype_9networkit_5graph_EdgeStringAttribute;
  PyTypeObject *__pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest;
  PyTypeObject *__pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest;
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_9networkit_14sparsification_EdgeScore;
  PyObject *__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;
  PyObject *__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;
  PyObject *__pyx_type_9networkit_14sparsification_TriangleEdgeScore;
  PyObject *__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer;
  PyObject *__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer;
  PyObject *__pyx_type_9networkit_14sparsification_EdgeScoreBlender;
  PyObject *__pyx_type_9networkit_14sparsification_GeometricMeanScore;
  PyObject *__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight;
  PyObject *__pyx_type_9networkit_14sparsification_SimmelianOverlapScore;
  PyObject *__pyx_type_9networkit_14sparsification_PrefixJaccardScore;
  PyObject *__pyx_type_9networkit_14sparsification_MultiscaleScore;
  PyObject *__pyx_type_9networkit_14sparsification_RandomEdgeScore;
  PyObject *__pyx_type_9networkit_14sparsification_LocalSimilarityScore;
  PyObject *__pyx_type_9networkit_14sparsification_ForestFireScore;
  PyObject *__pyx_type_9networkit_14sparsification_LocalDegreeScore;
  PyObject *__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore;
  PyObject *__pyx_type_9networkit_14sparsification_LocalFilterScore;
  PyObject *__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore;
  PyObject *__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore;
  PyObject *__pyx_type_9networkit_14sparsification_GlobalThresholdFilter;
  PyObject *__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores;
  #endif
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_EdgeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_GeometricMeanScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_MultiscaleScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_RandomEdgeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_ForestFireScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_LocalDegreeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_LocalFilterScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter;
  PyTypeObject *__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores;
  PyObject *__pyx_n_s_ABS_ZERO;
  PyObject *__pyx_kp_s_Abstract_base_class_representin;
  PyObject *__pyx_n_s_AdamicAdarDistance;
  PyObject *__pyx_n_s_AlgebraicDistance;
  PyObject *__pyx_n_s_AlgebraicDistanceSparsifier;
  PyObject *__pyx_n_s_AlgebraicDistanceSparsifier___in;
  PyObject *__pyx_n_s_AlgebraicDistanceSparsifier__get;
  PyObject *__pyx_n_s_AlgebraicDistanceSparsifier__get_2;
  PyObject *__pyx_kp_s_AlgebraicDistanceSparsifier_num;
  PyObject *__pyx_n_s_AlgebraicDistanceSparsifier_scor;
  PyObject *__pyx_n_s_BinarySearchParameterization;
  PyObject *__pyx_n_s_BinarySearchParameterization___i;
  PyObject *__pyx_n_s_BinarySearchParameterization_par;
  PyObject *__pyx_kp_s_BinarySearchParameterization_si;
  PyObject *__pyx_n_s_ChanceCorrectedTriangleScore;
  PyObject *__pyx_n_s_ChanceCorrectedTriangleScore___r;
  PyObject *__pyx_n_s_ChanceCorrectedTriangleScore___s;
  PyObject *__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor;
  PyObject *__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2;
  PyObject *__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3;
  PyObject *__pyx_n_s_ChibaNishizekiTriangleEdgeScore;
  PyObject *__pyx_n_s_ChibaNishizekiTriangleEdgeScore_2;
  PyObject *__pyx_n_s_ChibaNishizekiTriangleEdgeScore_3;
  PyObject *__pyx_n_s_CompleteSearchParameterization;
  PyObject *__pyx_kp_s_CompleteSearchParameterization_2;
  PyObject *__pyx_n_s_CompleteSearchParameterization_3;
  PyObject *__pyx_n_s_CompleteSearchParameterization_p;
  PyObject *__pyx_n_s_ConstantScore;
  PyObject *__pyx_n_s_ConstantScore___init;
  PyObject *__pyx_kp_s_ConstantScore_constValue_1_0_As;
  PyObject *__pyx_n_s_ConstantScore_scores;
  PyObject *__pyx_n_s_DegreeMultiscaleSparsifier;
  PyObject *__pyx_n_s_DegreeMultiscaleSparsifier___ini;
  PyObject *__pyx_n_s_DegreeMultiscaleSparsifier__getP;
  PyObject *__pyx_n_s_DegreeMultiscaleSparsifier__getS;
  PyObject *__pyx_kp_s_DegreeMultiscaleSparsifier_degs;
  PyObject *__pyx_n_s_DegreeMultiscaleSparsifier_score;
  PyObject *__pyx_n_s_EdgeScore;
  PyObject *__pyx_n_s_EdgeScoreAsWeight;
  PyObject *__pyx_n_s_EdgeScoreAsWeight___reduce_cytho;
  PyObject *__pyx_n_s_EdgeScoreAsWeight___setstate_cyt;
  PyObject *__pyx_n_s_EdgeScoreAsWeight_getWeightedGra;
  PyObject *__pyx_n_s_EdgeScoreBlender;
  PyObject *__pyx_n_s_EdgeScoreBlender___reduce_cython;
  PyObject *__pyx_n_s_EdgeScoreBlender___setstate_cyth;
  PyObject *__pyx_n_s_EdgeScoreLinearizer;
  PyObject *__pyx_n_s_EdgeScoreLinearizer___reduce_cyt;
  PyObject *__pyx_n_s_EdgeScoreLinearizer___setstate_c;
  PyObject *__pyx_n_s_EdgeScoreNormalizer;
  PyObject *__pyx_n_s_EdgeScoreNormalizer___reduce_cyt;
  PyObject *__pyx_n_s_EdgeScoreNormalizer___setstate_c;
  PyObject *__pyx_n_s_EdgeScore___reduce_cython;
  PyObject *__pyx_n_s_EdgeScore___setstate_cython;
  PyObject *__pyx_n_s_EdgeScore_score;
  PyObject *__pyx_n_s_EdgeScore_scores;
  PyObject *__pyx_kp_u_Error_you_may_not_use_EdgeScore;
  PyObject *__pyx_n_s_ForestFireScore;
  PyObject *__pyx_n_s_ForestFireScore___reduce_cython;
  PyObject *__pyx_n_s_ForestFireScore___setstate_cytho;
  PyObject *__pyx_n_s_ForestFireSparsifier;
  PyObject *__pyx_n_s_ForestFireSparsifier___init;
  PyObject *__pyx_n_s_ForestFireSparsifier__getParamet;
  PyObject *__pyx_n_s_ForestFireSparsifier__getSparsif;
  PyObject *__pyx_kp_s_ForestFireSparsifier_burnProbab;
  PyObject *__pyx_n_s_ForestFireSparsifier_scores;
  PyObject *__pyx_n_s_G;
  PyObject *__pyx_n_s_GeometricMeanScore;
  PyObject *__pyx_n_s_GeometricMeanScore___reduce_cyth;
  PyObject *__pyx_n_s_GeometricMeanScore___setstate_cy;
  PyObject *__pyx_n_s_GlobalThresholdFilter;
  PyObject *__pyx_n_s_GlobalThresholdFilter___reduce_c;
  PyObject *__pyx_n_s_GlobalThresholdFilter___setstate;
  PyObject *__pyx_n_s_GlobalThresholdFilter_calculate;
  PyObject *__pyx_kp_u_Implement_in_subclass;
  PyObject *__pyx_n_s_JaccardSimilarityAttributizer;
  PyObject *__pyx_n_s_JaccardSimilaritySparsifier;
  PyObject *__pyx_kp_s_JaccardSimilaritySparsifier_An;
  PyObject *__pyx_n_s_JaccardSimilaritySparsifier__get;
  PyObject *__pyx_n_s_JaccardSimilaritySparsifier__get_2;
  PyObject *__pyx_n_s_JaccardSimilaritySparsifier_scor;
  PyObject *__pyx_n_s_LocalDegreeScore;
  PyObject *__pyx_n_s_LocalDegreeScore___reduce_cython;
  PyObject *__pyx_n_s_LocalDegreeScore___setstate_cyth;
  PyObject *__pyx_n_s_LocalDegreeSparsifier;
  PyObject *__pyx_kp_s_LocalDegreeSparsifier_An_implem;
  PyObject *__pyx_n_s_LocalDegreeSparsifier__getParame;
  PyObject *__pyx_n_s_LocalDegreeSparsifier__getSparsi;
  PyObject *__pyx_n_s_LocalDegreeSparsifier_scores;
  PyObject *__pyx_n_s_LocalFilterScore;
  PyObject *__pyx_n_s_LocalFilterScore___reduce_cython;
  PyObject *__pyx_n_s_LocalFilterScore___setstate_cyth;
  PyObject *__pyx_n_s_LocalSimilarityScore;
  PyObject *__pyx_n_s_LocalSimilarityScore___reduce_cy;
  PyObject *__pyx_n_s_LocalSimilarityScore___setstate;
  PyObject *__pyx_n_s_LocalSimilaritySparsifier;
  PyObject *__pyx_kp_s_LocalSimilaritySparsifier_An_im;
  PyObject *__pyx_n_s_LocalSimilaritySparsifier__getPa;
  PyObject *__pyx_n_s_LocalSimilaritySparsifier__getSp;
  PyObject *__pyx_n_s_LocalSimilaritySparsifier_scores;
  PyObject *__pyx_n_s_LocalSparsifier;
  PyObject *__pyx_n_s_LocalSparsifier___init;
  PyObject *__pyx_n_s_LocalSparsifier__getParameteriza;
  PyObject *__pyx_n_s_LocalSparsifier__getSparsifiedGr;
  PyObject *__pyx_n_s_LocalSparsifier_scores;
  PyObject *__pyx_kp_s_LocalSparsifier_sparsifier_Spar;
  PyObject *__pyx_n_s_MemoryError;
  PyObject *__pyx_n_s_ModularityPartitionScore;
  PyObject *__pyx_kp_s_ModularityPartitionScore_Sparsi;
  PyObject *__pyx_n_s_ModularityPartitionScore_scores;
  PyObject *__pyx_n_s_ModularityPartitionScore_scores_2;
  PyObject *__pyx_n_s_ModularityPartitionScore_scores_3;
  PyObject *__pyx_n_s_MultiscaleScore;
  PyObject *__pyx_n_s_MultiscaleScore___reduce_cython;
  PyObject *__pyx_n_s_MultiscaleScore___setstate_cytho;
  PyObject *__pyx_n_s_MultiscaleSparsifier;
  PyObject *__pyx_kp_s_MultiscaleSparsifier_An_impleme;
  PyObject *__pyx_n_s_MultiscaleSparsifier__getParamet;
  PyObject *__pyx_n_s_MultiscaleSparsifier__getSparsif;
  PyObject *__pyx_n_s_MultiscaleSparsifier_scores;
  PyObject *__pyx_n_s_NotImplementedError;
  PyObject *__pyx_n_s_PLM;
  PyObject *__pyx_n_s_PrefixJaccardScore;
  PyObject *__pyx_n_s_PrefixJaccardScore___reduce_cyth;
  PyObject *__pyx_n_s_PrefixJaccardScore___setstate_cy;
  PyObject *__pyx_kp_s_QuadrilateralSimmelianSparsifie;
  PyObject *__pyx_n_s_QuadrilateralSimmelianSparsifier;
  PyObject *__pyx_n_s_QuadrilateralSimmelianSparsifier_2;
  PyObject *__pyx_n_s_QuadrilateralSimmelianSparsifier_3;
  PyObject *__pyx_n_s_QuadrilateralSimmelianSparsifier_4;
  PyObject *__pyx_n_s_RandomEdgeScore;
  PyObject *__pyx_n_s_RandomEdgeScore___reduce_cython;
  PyObject *__pyx_n_s_RandomEdgeScore___setstate_cytho;
  PyObject *__pyx_n_s_RandomEdgeSparsifier;
  PyObject *__pyx_kp_s_RandomEdgeSparsifier_Random_Edg;
  PyObject *__pyx_n_s_RandomEdgeSparsifier__getParamet;
  PyObject *__pyx_n_s_RandomEdgeSparsifier__getSparsif;
  PyObject *__pyx_n_s_RandomEdgeSparsifier_scores;
  PyObject *__pyx_n_s_RandomNodeEdgeScore;
  PyObject *__pyx_n_s_RandomNodeEdgeScore___reduce_cyt;
  PyObject *__pyx_n_s_RandomNodeEdgeScore___setstate_c;
  PyObject *__pyx_n_s_RandomNodeEdgeSparsifier;
  PyObject *__pyx_kp_s_RandomNodeEdgeSparsifier_Random;
  PyObject *__pyx_n_s_RandomNodeEdgeSparsifier___init;
  PyObject *__pyx_n_s_RandomNodeEdgeSparsifier__getPar;
  PyObject *__pyx_n_s_RandomNodeEdgeSparsifier__getSpa;
  PyObject *__pyx_n_s_RandomNodeEdgeSparsifier_scores;
  PyObject *__pyx_n_s_RuntimeError;
  PyObject *__pyx_n_s_SCANSparsifier;
  PyObject *__pyx_kp_s_SCANSparsifier_A_sparsifiier_de;
  PyObject *__pyx_n_s_SCANSparsifier__getParameterizat;
  PyObject *__pyx_n_s_SCANSparsifier__getSparsifiedGra;
  PyObject *__pyx_n_s_SCANSparsifier_scores;
  PyObject *__pyx_n_s_SCANStructuralSimilarityScore;
  PyObject *__pyx_n_s_SCANStructuralSimilarityScore_2;
  PyObject *__pyx_n_s_SCANStructuralSimilarityScore_3;
  PyObject *__pyx_n_s_SimmelianMultiscaleSparsifier;
  PyObject *__pyx_kp_s_SimmelianMultiscaleSparsifier_M;
  PyObject *__pyx_n_s_SimmelianMultiscaleSparsifier__g;
  PyObject *__pyx_n_s_SimmelianMultiscaleSparsifier__g_2;
  PyObject *__pyx_n_s_SimmelianMultiscaleSparsifier_sc;
  PyObject *__pyx_n_s_SimmelianOverlapScore;
  PyObject *__pyx_n_s_SimmelianOverlapScore___reduce_c;
  PyObject *__pyx_n_s_SimmelianOverlapScore___setstate;
  PyObject *__pyx_kp_s_SimmelianSparsifierNonParametri;
  PyObject *__pyx_n_s_SimmelianSparsifierNonParametric;
  PyObject *__pyx_n_s_SimmelianSparsifierNonParametric_2;
  PyObject *__pyx_n_s_SimmelianSparsifierNonParametric_3;
  PyObject *__pyx_n_s_SimmelianSparsifierNonParametric_4;
  PyObject *__pyx_n_s_SimmelianSparsifierParametric;
  PyObject *__pyx_n_s_SimmelianSparsifierParametric_2;
  PyObject *__pyx_kp_s_SimmelianSparsifierParametric_A;
  PyObject *__pyx_n_s_SimmelianSparsifierParametric__g;
  PyObject *__pyx_n_s_SimmelianSparsifierParametric__g_2;
  PyObject *__pyx_n_s_SimmelianSparsifierParametric_sc;
  PyObject *__pyx_n_s_SimpleParameterization;
  PyObject *__pyx_kp_s_SimpleParameterization_A_parame;
  PyObject *__pyx_n_s_SimpleParameterization_parameter;
  PyObject *__pyx_n_s_Sparsifier;
  PyObject *__pyx_n_s_Sparsifier__getParameterizationA;
  PyObject *__pyx_n_s_Sparsifier__getSparsifiedGraph;
  PyObject *__pyx_n_s_Sparsifier_getParameter;
  PyObject *__pyx_n_s_Sparsifier_getSparsifiedGraph;
  PyObject *__pyx_n_s_Sparsifier_getSparsifiedGraphOfS;
  PyObject *__pyx_n_s_Sparsifier_scores;
  PyObject *__pyx_n_s_TriangleEdgeScore;
  PyObject *__pyx_n_s_TriangleEdgeScore___reduce_cytho;
  PyObject *__pyx_n_s_TriangleEdgeScore___setstate_cyt;
  PyObject *__pyx_n_s_TriangleSparsifier;
  PyObject *__pyx_kp_s_TriangleSparsifier_Allows_for_g;
  PyObject *__pyx_n_s_TriangleSparsifier__getParameter;
  PyObject *__pyx_n_s_TriangleSparsifier__getSparsifie;
  PyObject *__pyx_n_s_TriangleSparsifier_scores;
  PyObject *__pyx_n_s_TypeError;
  PyObject *__pyx_n_s__10;
  PyObject *__pyx_n_s__171;
  PyObject *__pyx_kp_u__9;
  PyObject *__pyx_n_s_a;
  PyObject *__pyx_n_s_a_ms;
  PyObject *__pyx_n_s_a_sj;
  PyObject *__pyx_n_s_a_triangles;
  PyObject *__pyx_n_s_above;
  PyObject *__pyx_n_s_algDist;
  PyObject *__pyx_n_s_algorithm;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_attribute;
  PyObject *__pyx_n_s_attribute0;
  PyObject *__pyx_n_s_attribute1;
  PyObject *__pyx_n_s_attribute_2;
  PyObject *__pyx_n_s_bestParameter;
  PyObject *__pyx_n_s_bestRatio;
  PyObject *__pyx_n_s_burnProbability;
  PyObject *__pyx_n_s_calculate;
  PyObject *__pyx_n_s_cdAlgo;
  PyObject *__pyx_n_s_class_getitem;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_community;
  PyObject *__pyx_n_s_constValue;
  PyObject *__pyx_n_s_currentEdgeRatio;
  PyObject *__pyx_n_s_d;
  PyObject *__pyx_n_s_degree;
  PyObject *__pyx_n_s_degsToAttrValue;
  PyObject *__pyx_n_s_dict;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_distance;
  PyObject *__pyx_n_s_doc;
  PyObject *__pyx_n_s_e;
  PyObject *__pyx_n_s_edgeId;
  PyObject *__pyx_n_s_edgeRatio;
  PyObject *__pyx_n_s_edgeScores;
  PyObject *__pyx_n_s_eid;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_estimation;
  PyObject *__pyx_n_s_factor;
  PyObject *__pyx_n_s_ffScore;
  PyObject *__pyx_n_s_forEdges;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_getAttribute;
  PyObject *__pyx_n_s_getEdgeScores;
  PyObject *__pyx_n_s_getParameter;
  PyObject *__pyx_n_s_getParameterizationAlgorithm;
  PyObject *__pyx_n_s_getPartition;
  PyObject *__pyx_n_s_getRankAttribute;
  PyObject *__pyx_n_s_getRankAttribute_locals_lambda;
  PyObject *__pyx_n_s_getSparsifiedGraph;
  PyObject *__pyx_n_s_getSparsifiedGraphOfSize;
  PyObject *__pyx_n_s_getSparsifiedGraph_2;
  PyObject *__pyx_n_s_getWeightedGraph;
  PyObject *__pyx_n_s_getstate;
  PyObject *__pyx_n_s_gf;
  PyObject *__pyx_n_s_i;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_increase;
  PyObject *__pyx_n_s_index;
  PyObject *__pyx_n_s_init;
  PyObject *__pyx_n_s_init_subclass;
  PyObject *__pyx_n_s_inputAttribute;
  PyObject *__pyx_n_s_inverse;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_iterEdges;
  PyObject *__pyx_n_s_iterEdgesWeights;
  PyObject *__pyx_n_s_key;
  PyObject *__pyx_n_s_localDegree;
  PyObject *__pyx_n_s_localDegreeScore;
  PyObject *__pyx_n_s_localFilterScore;
  PyObject *__pyx_n_s_localSimScore;
  PyObject *__pyx_n_s_logarithmic;
  PyObject *__pyx_n_s_lower;
  PyObject *__pyx_n_s_lowerBound;
  PyObject *__pyx_n_s_lowerParameterBound;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_maxRank;
  PyObject *__pyx_n_s_maxSteps;
  PyObject *__pyx_n_s_meanQuadrangles;
  PyObject *__pyx_n_s_metaclass;
  PyObject *__pyx_n_s_minDistance;
  PyObject *__pyx_n_s_module;
  PyObject *__pyx_n_s_mro_entries;
  PyObject *__pyx_n_s_ms;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_networkit_sparsification;
  PyObject *__pyx_kp_s_networkit_sparsification_pyx;
  PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
  PyObject *__pyx_kp_u_none_randomized;
  PyObject *__pyx_n_s_norm;
  PyObject *__pyx_n_s_numberIterations;
  PyObject *__pyx_n_s_numberOfEdges;
  PyObject *__pyx_n_s_numberSystems;
  PyObject *__pyx_n_s_object;
  PyObject *__pyx_n_s_offset;
  PyObject *__pyx_n_s_omega;
  PyObject *__pyx_n_s_originalScores;
  PyObject *__pyx_n_s_par;
  PyObject *__pyx_n_s_paramAlgorithm;
  PyObject *__pyx_n_s_parameter;
  PyObject *__pyx_kp_u_parameterization_method_not_yet;
  PyObject *__pyx_n_s_parameterize;
  PyObject *__pyx_n_s_partition;
  PyObject *__pyx_n_s_pf;
  PyObject *__pyx_n_s_prepare;
  PyObject *__pyx_n_s_preprocess;
  PyObject *__pyx_n_s_pyx_state;
  PyObject *__pyx_n_s_pyx_vtable;
  PyObject *__pyx_n_s_quadranglePrefixJaccard;
  PyObject *__pyx_n_s_quadrangles;
  PyObject *__pyx_n_s_qualname;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_reScore;
  PyObject *__pyx_n_s_reduce;
  PyObject *__pyx_n_s_reduce_cython;
  PyObject *__pyx_n_s_reduce_ex;
  PyObject *__pyx_n_s_refine;
  PyObject *__pyx_n_s_result;
  PyObject *__pyx_n_s_reverse;
  PyObject *__pyx_n_s_rneScore;
  PyObject *__pyx_n_s_run;
  PyObject *__pyx_n_s_scanScore;
  PyObject *__pyx_n_s_score;
  PyObject *__pyx_kp_u_score_must_be_either_a_vector_of;
  PyObject *__pyx_n_s_scorer;
  PyObject *__pyx_n_s_scores;
  PyObject *__pyx_n_s_selection;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_kp_s_self__this_cannot_be_converted_t;
  PyObject *__pyx_n_s_set_name;
  PyObject *__pyx_n_s_setitem;
  PyObject *__pyx_n_s_setstate;
  PyObject *__pyx_n_s_setstate_cython;
  PyObject *__pyx_n_s_simmelianOverlap;
  PyObject *__pyx_n_s_sizeIncreasesWithParameter;
  PyObject *__pyx_n_s_sorted;
  PyObject *__pyx_n_s_sparsified;
  PyObject *__pyx_n_s_sparsifier;
  PyObject *__pyx_n_s_squared;
  PyObject *__pyx_kp_s_stringsource;
  PyObject *__pyx_n_s_super;
  PyObject *__pyx_n_s_targetBurntRatio;
  PyObject *__pyx_n_s_tebr;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_together;
  PyObject *__pyx_n_s_triangleScore;
  PyObject *__pyx_n_s_triangles;
  PyObject *__pyx_n_s_turbo;
  PyObject *__pyx_n_s_u;
  PyObject *__pyx_n_s_upper;
  PyObject *__pyx_n_s_upperBound;
  PyObject *__pyx_n_s_upperEdgeIdBound;
  PyObject *__pyx_n_s_upperParameterBound;
  PyObject *__pyx_n_s_v;
  PyObject *__pyx_n_s_w;
  PyObject *__pyx_n_s_withEdgeScores;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_zip;
  PyObject *__pyx_float_0_0;
  PyObject *__pyx_float_0_5;
  PyObject *__pyx_float_1_0;
  PyObject *__pyx_float_2_0;
  PyObject *__pyx_float_1eneg_7;
  PyObject *__pyx_float_100_0;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_10;
  PyObject *__pyx_int_20;
  PyObject *__pyx_int_30;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__3;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__61;
  PyObject *__pyx_tuple__62;
  PyObject *__pyx_tuple__63;
  PyObject *__pyx_tuple__65;
  PyObject *__pyx_tuple__69;
  PyObject *__pyx_tuple__71;
  PyObject *__pyx_tuple__73;
  PyObject *__pyx_tuple__75;
  PyObject *__pyx_tuple__77;
  PyObject *__pyx_tuple__79;
  PyObject *__pyx_tuple__81;
  PyObject *__pyx_tuple__83;
  PyObject *__pyx_tuple__85;
  PyObject *__pyx_tuple__86;
  PyObject *__pyx_tuple__88;
  PyObject *__pyx_tuple__90;
  PyObject *__pyx_tuple__93;
  PyObject *__pyx_tuple__97;
  PyObject *__pyx_codeobj__8;
  PyObject *__pyx_tuple__101;
  PyObject *__pyx_tuple__105;
  PyObject *__pyx_tuple__107;
  PyObject *__pyx_tuple__111;
  PyObject *__pyx_tuple__115;
  PyObject *__pyx_tuple__119;
  PyObject *__pyx_tuple__123;
  PyObject *__pyx_tuple__127;
  PyObject *__pyx_tuple__129;
  PyObject *__pyx_tuple__130;
  PyObject *__pyx_tuple__134;
  PyObject *__pyx_tuple__136;
  PyObject *__pyx_tuple__140;
  PyObject *__pyx_tuple__144;
  PyObject *__pyx_tuple__148;
  PyObject *__pyx_tuple__152;
  PyObject *__pyx_tuple__154;
  PyObject *__pyx_tuple__155;
  PyObject *__pyx_tuple__159;
  PyObject *__pyx_tuple__161;
  PyObject *__pyx_tuple__165;
  PyObject *__pyx_tuple__167;
  PyObject *__pyx_tuple__169;
  PyObject *__pyx_codeobj__12;
  PyObject *__pyx_codeobj__15;
  PyObject *__pyx_codeobj__16;
  PyObject *__pyx_codeobj__18;
  PyObject *__pyx_codeobj__19;
  PyObject *__pyx_codeobj__20;
  PyObject *__pyx_codeobj__21;
  PyObject *__pyx_codeobj__22;
  PyObject *__pyx_codeobj__23;
  PyObject *__pyx_codeobj__24;
  PyObject *__pyx_codeobj__25;
  PyObject *__pyx_codeobj__26;
  PyObject *__pyx_codeobj__27;
  PyObject *__pyx_codeobj__28;
  PyObject *__pyx_codeobj__29;
  PyObject *__pyx_codeobj__30;
  PyObject *__pyx_codeobj__31;
  PyObject *__pyx_codeobj__32;
  PyObject *__pyx_codeobj__33;
  PyObject *__pyx_codeobj__34;
  PyObject *__pyx_codeobj__35;
  PyObject *__pyx_codeobj__36;
  PyObject *__pyx_codeobj__37;
  PyObject *__pyx_codeobj__38;
  PyObject *__pyx_codeobj__39;
  PyObject *__pyx_codeobj__40;
  PyObject *__pyx_codeobj__41;
  PyObject *__pyx_codeobj__42;
  PyObject *__pyx_codeobj__43;
  PyObject *__pyx_codeobj__44;
  PyObject *__pyx_codeobj__45;
  PyObject *__pyx_codeobj__46;
  PyObject *__pyx_codeobj__47;
  PyObject *__pyx_codeobj__48;
  PyObject *__pyx_codeobj__49;
  PyObject *__pyx_codeobj__50;
  PyObject *__pyx_codeobj__51;
  PyObject *__pyx_codeobj__52;
  PyObject *__pyx_codeobj__53;
  PyObject *__pyx_codeobj__54;
  PyObject *__pyx_codeobj__55;
  PyObject *__pyx_codeobj__56;
  PyObject *__pyx_codeobj__57;
  PyObject *__pyx_codeobj__58;
  PyObject *__pyx_codeobj__59;
  PyObject *__pyx_codeobj__60;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__67;
  PyObject *__pyx_codeobj__68;
  PyObject *__pyx_codeobj__70;
  PyObject *__pyx_codeobj__72;
  PyObject *__pyx_codeobj__74;
  PyObject *__pyx_codeobj__76;
  PyObject *__pyx_codeobj__78;
  PyObject *__pyx_codeobj__80;
  PyObject *__pyx_codeobj__82;
  PyObject *__pyx_codeobj__84;
  PyObject *__pyx_codeobj__87;
  PyObject *__pyx_codeobj__89;
  PyObject *__pyx_codeobj__91;
  PyObject *__pyx_codeobj__92;
  PyObject *__pyx_codeobj__94;
  PyObject *__pyx_codeobj__95;
  PyObject *__pyx_codeobj__96;
  PyObject *__pyx_codeobj__98;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__100;
  PyObject *__pyx_codeobj__102;
  PyObject *__pyx_codeobj__103;
  PyObject *__pyx_codeobj__104;
  PyObject *__pyx_codeobj__106;
  PyObject *__pyx_codeobj__108;
  PyObject *__pyx_codeobj__109;
  PyObject *__pyx_codeobj__110;
  PyObject *__pyx_codeobj__112;
  PyObject *__pyx_codeobj__113;
  PyObject *__pyx_codeobj__114;
  PyObject *__pyx_codeobj__116;
  PyObject *__pyx_codeobj__117;
  PyObject *__pyx_codeobj__118;
  PyObject *__pyx_codeobj__120;
  PyObject *__pyx_codeobj__121;
  PyObject *__pyx_codeobj__122;
  PyObject *__pyx_codeobj__124;
  PyObject *__pyx_codeobj__125;
  PyObject *__pyx_codeobj__126;
  PyObject *__pyx_codeobj__128;
  PyObject *__pyx_codeobj__131;
  PyObject *__pyx_codeobj__132;
  PyObject *__pyx_codeobj__133;
  PyObject *__pyx_codeobj__135;
  PyObject *__pyx_codeobj__137;
  PyObject *__pyx_codeobj__138;
  PyObject *__pyx_codeobj__139;
  PyObject *__pyx_codeobj__141;
  PyObject *__pyx_codeobj__142;
  PyObject *__pyx_codeobj__143;
  PyObject *__pyx_codeobj__145;
  PyObject *__pyx_codeobj__146;
  PyObject *__pyx_codeobj__147;
  PyObject *__pyx_codeobj__149;
  PyObject *__pyx_codeobj__150;
  PyObject *__pyx_codeobj__151;
  PyObject *__pyx_codeobj__153;
  PyObject *__pyx_codeobj__156;
  PyObject *__pyx_codeobj__157;
  PyObject *__pyx_codeobj__158;
  PyObject *__pyx_codeobj__160;
  PyObject *__pyx_codeobj__162;
  PyObject *__pyx_codeobj__163;
  PyObject *__pyx_codeobj__164;
  PyObject *__pyx_codeobj__166;
  PyObject *__pyx_codeobj__168;
  PyObject *__pyx_codeobj__170;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_4base__CythonParentClass);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_4base_Algorithm);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_10structures_Cover);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_10structures_Partition);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_Graph);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_NodeIntAttribute);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_NodeDoubleAttribute);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_NodeStringAttribute);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_EdgeIntAttribute);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_EdgeDoubleAttribute);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_EdgeStringAttribute);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_EdgeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_TriangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreBlender);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_GeometricMeanScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_GeometricMeanScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_SimmelianOverlapScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_PrefixJaccardScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_MultiscaleScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_MultiscaleScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_RandomEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_RandomEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_LocalSimilarityScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_ForestFireScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_ForestFireScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_LocalDegreeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_LocalDegreeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_LocalFilterScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_LocalFilterScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification_GlobalThresholdFilter);
  Py_CLEAR(clear_module_state->__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores);
  Py_CLEAR(clear_module_state->__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_ABS_ZERO);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Abstract_base_class_representin);
  Py_CLEAR(clear_module_state->__pyx_n_s_AdamicAdarDistance);
  Py_CLEAR(clear_module_state->__pyx_n_s_AlgebraicDistance);
  Py_CLEAR(clear_module_state->__pyx_n_s_AlgebraicDistanceSparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_AlgebraicDistanceSparsifier___in);
  Py_CLEAR(clear_module_state->__pyx_n_s_AlgebraicDistanceSparsifier__get);
  Py_CLEAR(clear_module_state->__pyx_n_s_AlgebraicDistanceSparsifier__get_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_AlgebraicDistanceSparsifier_num);
  Py_CLEAR(clear_module_state->__pyx_n_s_AlgebraicDistanceSparsifier_scor);
  Py_CLEAR(clear_module_state->__pyx_n_s_BinarySearchParameterization);
  Py_CLEAR(clear_module_state->__pyx_n_s_BinarySearchParameterization___i);
  Py_CLEAR(clear_module_state->__pyx_n_s_BinarySearchParameterization_par);
  Py_CLEAR(clear_module_state->__pyx_kp_s_BinarySearchParameterization_si);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChanceCorrectedTriangleScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChanceCorrectedTriangleScore___r);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChanceCorrectedTriangleScore___s);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChibaNishizekiTriangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChibaNishizekiTriangleEdgeScore_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChibaNishizekiTriangleEdgeScore_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_CompleteSearchParameterization);
  Py_CLEAR(clear_module_state->__pyx_kp_s_CompleteSearchParameterization_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_CompleteSearchParameterization_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_CompleteSearchParameterization_p);
  Py_CLEAR(clear_module_state->__pyx_n_s_ConstantScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_ConstantScore___init);
  Py_CLEAR(clear_module_state->__pyx_kp_s_ConstantScore_constValue_1_0_As);
  Py_CLEAR(clear_module_state->__pyx_n_s_ConstantScore_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_DegreeMultiscaleSparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_DegreeMultiscaleSparsifier___ini);
  Py_CLEAR(clear_module_state->__pyx_n_s_DegreeMultiscaleSparsifier__getP);
  Py_CLEAR(clear_module_state->__pyx_n_s_DegreeMultiscaleSparsifier__getS);
  Py_CLEAR(clear_module_state->__pyx_kp_s_DegreeMultiscaleSparsifier_degs);
  Py_CLEAR(clear_module_state->__pyx_n_s_DegreeMultiscaleSparsifier_score);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreAsWeight);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreAsWeight___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreAsWeight___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreAsWeight_getWeightedGra);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreBlender);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreBlender___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreBlender___setstate_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreLinearizer);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreLinearizer___reduce_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreLinearizer___setstate_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreNormalizer);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreNormalizer___reduce_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScoreNormalizer___setstate_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScore___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScore___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScore_score);
  Py_CLEAR(clear_module_state->__pyx_n_s_EdgeScore_scores);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Error_you_may_not_use_EdgeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireScore___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireScore___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireSparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireSparsifier___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireSparsifier__getParamet);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireSparsifier__getSparsif);
  Py_CLEAR(clear_module_state->__pyx_kp_s_ForestFireSparsifier_burnProbab);
  Py_CLEAR(clear_module_state->__pyx_n_s_ForestFireSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_G);
  Py_CLEAR(clear_module_state->__pyx_n_s_GeometricMeanScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_GeometricMeanScore___reduce_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_GeometricMeanScore___setstate_cy);
  Py_CLEAR(clear_module_state->__pyx_n_s_GlobalThresholdFilter);
  Py_CLEAR(clear_module_state->__pyx_n_s_GlobalThresholdFilter___reduce_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_GlobalThresholdFilter___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_GlobalThresholdFilter_calculate);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Implement_in_subclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_JaccardSimilarityAttributizer);
  Py_CLEAR(clear_module_state->__pyx_n_s_JaccardSimilaritySparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_JaccardSimilaritySparsifier_An);
  Py_CLEAR(clear_module_state->__pyx_n_s_JaccardSimilaritySparsifier__get);
  Py_CLEAR(clear_module_state->__pyx_n_s_JaccardSimilaritySparsifier__get_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_JaccardSimilaritySparsifier_scor);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeScore___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeScore___setstate_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_LocalDegreeSparsifier_An_implem);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeSparsifier__getParame);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeSparsifier__getSparsi);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalDegreeSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalFilterScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalFilterScore___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalFilterScore___setstate_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilarityScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilarityScore___reduce_cy);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilarityScore___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilaritySparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_LocalSimilaritySparsifier_An_im);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilaritySparsifier__getPa);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilaritySparsifier__getSp);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSimilaritySparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSparsifier___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSparsifier__getParameteriza);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSparsifier__getSparsifiedGr);
  Py_CLEAR(clear_module_state->__pyx_n_s_LocalSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_kp_s_LocalSparsifier_sparsifier_Spar);
  Py_CLEAR(clear_module_state->__pyx_n_s_MemoryError);
  Py_CLEAR(clear_module_state->__pyx_n_s_ModularityPartitionScore);
  Py_CLEAR(clear_module_state->__pyx_kp_s_ModularityPartitionScore_Sparsi);
  Py_CLEAR(clear_module_state->__pyx_n_s_ModularityPartitionScore_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_ModularityPartitionScore_scores_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_ModularityPartitionScore_scores_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleScore___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleScore___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MultiscaleSparsifier_An_impleme);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleSparsifier__getParamet);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleSparsifier__getSparsif);
  Py_CLEAR(clear_module_state->__pyx_n_s_MultiscaleSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_NotImplementedError);
  Py_CLEAR(clear_module_state->__pyx_n_s_PLM);
  Py_CLEAR(clear_module_state->__pyx_n_s_PrefixJaccardScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_PrefixJaccardScore___reduce_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_PrefixJaccardScore___setstate_cy);
  Py_CLEAR(clear_module_state->__pyx_kp_s_QuadrilateralSimmelianSparsifie);
  Py_CLEAR(clear_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeScore___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeScore___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_RandomEdgeSparsifier_Random_Edg);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeSparsifier__getParamet);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeSparsifier__getSparsif);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomEdgeSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeScore___reduce_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeScore___setstate_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_RandomNodeEdgeSparsifier_Random);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeSparsifier___init);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeSparsifier__getPar);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeSparsifier__getSpa);
  Py_CLEAR(clear_module_state->__pyx_n_s_RandomNodeEdgeSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_RuntimeError);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SCANSparsifier_A_sparsifiier_de);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANSparsifier__getParameterizat);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANSparsifier__getSparsifiedGra);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANStructuralSimilarityScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANStructuralSimilarityScore_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCANStructuralSimilarityScore_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SimmelianMultiscaleSparsifier_M);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier__g);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier__g_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier_sc);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianOverlapScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianOverlapScore___reduce_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianOverlapScore___setstate);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SimmelianSparsifierNonParametri);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierNonParametric);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierNonParametric_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierNonParametric_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierNonParametric_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierParametric);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierParametric_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SimmelianSparsifierParametric_A);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierParametric__g);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierParametric__g_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimmelianSparsifierParametric_sc);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimpleParameterization);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SimpleParameterization_A_parame);
  Py_CLEAR(clear_module_state->__pyx_n_s_SimpleParameterization_parameter);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier__getParameterizationA);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier__getSparsifiedGraph);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier_getParameter);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier_getSparsifiedGraph);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier_getSparsifiedGraphOfS);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleEdgeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleEdgeScore___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleEdgeScore___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleSparsifier);
  Py_CLEAR(clear_module_state->__pyx_kp_s_TriangleSparsifier_Allows_for_g);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleSparsifier__getParameter);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleSparsifier__getSparsifie);
  Py_CLEAR(clear_module_state->__pyx_n_s_TriangleSparsifier_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_TypeError);
  Py_CLEAR(clear_module_state->__pyx_n_s__10);
  Py_CLEAR(clear_module_state->__pyx_n_s__171);
  Py_CLEAR(clear_module_state->__pyx_kp_u__9);
  Py_CLEAR(clear_module_state->__pyx_n_s_a);
  Py_CLEAR(clear_module_state->__pyx_n_s_a_ms);
  Py_CLEAR(clear_module_state->__pyx_n_s_a_sj);
  Py_CLEAR(clear_module_state->__pyx_n_s_a_triangles);
  Py_CLEAR(clear_module_state->__pyx_n_s_above);
  Py_CLEAR(clear_module_state->__pyx_n_s_algDist);
  Py_CLEAR(clear_module_state->__pyx_n_s_algorithm);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_attribute);
  Py_CLEAR(clear_module_state->__pyx_n_s_attribute0);
  Py_CLEAR(clear_module_state->__pyx_n_s_attribute1);
  Py_CLEAR(clear_module_state->__pyx_n_s_attribute_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_bestParameter);
  Py_CLEAR(clear_module_state->__pyx_n_s_bestRatio);
  Py_CLEAR(clear_module_state->__pyx_n_s_burnProbability);
  Py_CLEAR(clear_module_state->__pyx_n_s_calculate);
  Py_CLEAR(clear_module_state->__pyx_n_s_cdAlgo);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_getitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_community);
  Py_CLEAR(clear_module_state->__pyx_n_s_constValue);
  Py_CLEAR(clear_module_state->__pyx_n_s_currentEdgeRatio);
  Py_CLEAR(clear_module_state->__pyx_n_s_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_degree);
  Py_CLEAR(clear_module_state->__pyx_n_s_degsToAttrValue);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_distance);
  Py_CLEAR(clear_module_state->__pyx_n_s_doc);
  Py_CLEAR(clear_module_state->__pyx_n_s_e);
  Py_CLEAR(clear_module_state->__pyx_n_s_edgeId);
  Py_CLEAR(clear_module_state->__pyx_n_s_edgeRatio);
  Py_CLEAR(clear_module_state->__pyx_n_s_edgeScores);
  Py_CLEAR(clear_module_state->__pyx_n_s_eid);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_estimation);
  Py_CLEAR(clear_module_state->__pyx_n_s_factor);
  Py_CLEAR(clear_module_state->__pyx_n_s_ffScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_forEdges);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_getAttribute);
  Py_CLEAR(clear_module_state->__pyx_n_s_getEdgeScores);
  Py_CLEAR(clear_module_state->__pyx_n_s_getParameter);
  Py_CLEAR(clear_module_state->__pyx_n_s_getParameterizationAlgorithm);
  Py_CLEAR(clear_module_state->__pyx_n_s_getPartition);
  Py_CLEAR(clear_module_state->__pyx_n_s_getRankAttribute);
  Py_CLEAR(clear_module_state->__pyx_n_s_getRankAttribute_locals_lambda);
  Py_CLEAR(clear_module_state->__pyx_n_s_getSparsifiedGraph);
  Py_CLEAR(clear_module_state->__pyx_n_s_getSparsifiedGraphOfSize);
  Py_CLEAR(clear_module_state->__pyx_n_s_getSparsifiedGraph_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_getWeightedGraph);
  Py_CLEAR(clear_module_state->__pyx_n_s_getstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_gf);
  Py_CLEAR(clear_module_state->__pyx_n_s_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_increase);
  Py_CLEAR(clear_module_state->__pyx_n_s_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_init);
  Py_CLEAR(clear_module_state->__pyx_n_s_init_subclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_inputAttribute);
  Py_CLEAR(clear_module_state->__pyx_n_s_inverse);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_iterEdges);
  Py_CLEAR(clear_module_state->__pyx_n_s_iterEdgesWeights);
  Py_CLEAR(clear_module_state->__pyx_n_s_key);
  Py_CLEAR(clear_module_state->__pyx_n_s_localDegree);
  Py_CLEAR(clear_module_state->__pyx_n_s_localDegreeScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_localFilterScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_localSimScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_logarithmic);
  Py_CLEAR(clear_module_state->__pyx_n_s_lower);
  Py_CLEAR(clear_module_state->__pyx_n_s_lowerBound);
  Py_CLEAR(clear_module_state->__pyx_n_s_lowerParameterBound);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_maxRank);
  Py_CLEAR(clear_module_state->__pyx_n_s_maxSteps);
  Py_CLEAR(clear_module_state->__pyx_n_s_meanQuadrangles);
  Py_CLEAR(clear_module_state->__pyx_n_s_metaclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_minDistance);
  Py_CLEAR(clear_module_state->__pyx_n_s_module);
  Py_CLEAR(clear_module_state->__pyx_n_s_mro_entries);
  Py_CLEAR(clear_module_state->__pyx_n_s_ms);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_networkit_sparsification);
  Py_CLEAR(clear_module_state->__pyx_kp_s_networkit_sparsification_pyx);
  Py_CLEAR(clear_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_CLEAR(clear_module_state->__pyx_kp_u_none_randomized);
  Py_CLEAR(clear_module_state->__pyx_n_s_norm);
  Py_CLEAR(clear_module_state->__pyx_n_s_numberIterations);
  Py_CLEAR(clear_module_state->__pyx_n_s_numberOfEdges);
  Py_CLEAR(clear_module_state->__pyx_n_s_numberSystems);
  Py_CLEAR(clear_module_state->__pyx_n_s_object);
  Py_CLEAR(clear_module_state->__pyx_n_s_offset);
  Py_CLEAR(clear_module_state->__pyx_n_s_omega);
  Py_CLEAR(clear_module_state->__pyx_n_s_originalScores);
  Py_CLEAR(clear_module_state->__pyx_n_s_par);
  Py_CLEAR(clear_module_state->__pyx_n_s_paramAlgorithm);
  Py_CLEAR(clear_module_state->__pyx_n_s_parameter);
  Py_CLEAR(clear_module_state->__pyx_kp_u_parameterization_method_not_yet);
  Py_CLEAR(clear_module_state->__pyx_n_s_parameterize);
  Py_CLEAR(clear_module_state->__pyx_n_s_partition);
  Py_CLEAR(clear_module_state->__pyx_n_s_pf);
  Py_CLEAR(clear_module_state->__pyx_n_s_prepare);
  Py_CLEAR(clear_module_state->__pyx_n_s_preprocess);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_vtable);
  Py_CLEAR(clear_module_state->__pyx_n_s_quadranglePrefixJaccard);
  Py_CLEAR(clear_module_state->__pyx_n_s_quadrangles);
  Py_CLEAR(clear_module_state->__pyx_n_s_qualname);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_reScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_refine);
  Py_CLEAR(clear_module_state->__pyx_n_s_result);
  Py_CLEAR(clear_module_state->__pyx_n_s_reverse);
  Py_CLEAR(clear_module_state->__pyx_n_s_rneScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_run);
  Py_CLEAR(clear_module_state->__pyx_n_s_scanScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_score);
  Py_CLEAR(clear_module_state->__pyx_kp_u_score_must_be_either_a_vector_of);
  Py_CLEAR(clear_module_state->__pyx_n_s_scorer);
  Py_CLEAR(clear_module_state->__pyx_n_s_scores);
  Py_CLEAR(clear_module_state->__pyx_n_s_selection);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_kp_s_self__this_cannot_be_converted_t);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_setitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_simmelianOverlap);
  Py_CLEAR(clear_module_state->__pyx_n_s_sizeIncreasesWithParameter);
  Py_CLEAR(clear_module_state->__pyx_n_s_sorted);
  Py_CLEAR(clear_module_state->__pyx_n_s_sparsified);
  Py_CLEAR(clear_module_state->__pyx_n_s_sparsifier);
  Py_CLEAR(clear_module_state->__pyx_n_s_squared);
  Py_CLEAR(clear_module_state->__pyx_kp_s_stringsource);
  Py_CLEAR(clear_module_state->__pyx_n_s_super);
  Py_CLEAR(clear_module_state->__pyx_n_s_targetBurntRatio);
  Py_CLEAR(clear_module_state->__pyx_n_s_tebr);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_together);
  Py_CLEAR(clear_module_state->__pyx_n_s_triangleScore);
  Py_CLEAR(clear_module_state->__pyx_n_s_triangles);
  Py_CLEAR(clear_module_state->__pyx_n_s_turbo);
  Py_CLEAR(clear_module_state->__pyx_n_s_u);
  Py_CLEAR(clear_module_state->__pyx_n_s_upper);
  Py_CLEAR(clear_module_state->__pyx_n_s_upperBound);
  Py_CLEAR(clear_module_state->__pyx_n_s_upperEdgeIdBound);
  Py_CLEAR(clear_module_state->__pyx_n_s_upperParameterBound);
  Py_CLEAR(clear_module_state->__pyx_n_s_v);
  Py_CLEAR(clear_module_state->__pyx_n_s_w);
  Py_CLEAR(clear_module_state->__pyx_n_s_withEdgeScores);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_zip);
  Py_CLEAR(clear_module_state->__pyx_float_0_0);
  Py_CLEAR(clear_module_state->__pyx_float_0_5);
  Py_CLEAR(clear_module_state->__pyx_float_1_0);
  Py_CLEAR(clear_module_state->__pyx_float_2_0);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_7);
  Py_CLEAR(clear_module_state->__pyx_float_100_0);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_10);
  Py_CLEAR(clear_module_state->__pyx_int_20);
  Py_CLEAR(clear_module_state->__pyx_int_30);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__3);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__61);
  Py_CLEAR(clear_module_state->__pyx_tuple__62);
  Py_CLEAR(clear_module_state->__pyx_tuple__63);
  Py_CLEAR(clear_module_state->__pyx_tuple__65);
  Py_CLEAR(clear_module_state->__pyx_tuple__69);
  Py_CLEAR(clear_module_state->__pyx_tuple__71);
  Py_CLEAR(clear_module_state->__pyx_tuple__73);
  Py_CLEAR(clear_module_state->__pyx_tuple__75);
  Py_CLEAR(clear_module_state->__pyx_tuple__77);
  Py_CLEAR(clear_module_state->__pyx_tuple__79);
  Py_CLEAR(clear_module_state->__pyx_tuple__81);
  Py_CLEAR(clear_module_state->__pyx_tuple__83);
  Py_CLEAR(clear_module_state->__pyx_tuple__85);
  Py_CLEAR(clear_module_state->__pyx_tuple__86);
  Py_CLEAR(clear_module_state->__pyx_tuple__88);
  Py_CLEAR(clear_module_state->__pyx_tuple__90);
  Py_CLEAR(clear_module_state->__pyx_tuple__93);
  Py_CLEAR(clear_module_state->__pyx_tuple__97);
  Py_CLEAR(clear_module_state->__pyx_codeobj__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__101);
  Py_CLEAR(clear_module_state->__pyx_tuple__105);
  Py_CLEAR(clear_module_state->__pyx_tuple__107);
  Py_CLEAR(clear_module_state->__pyx_tuple__111);
  Py_CLEAR(clear_module_state->__pyx_tuple__115);
  Py_CLEAR(clear_module_state->__pyx_tuple__119);
  Py_CLEAR(clear_module_state->__pyx_tuple__123);
  Py_CLEAR(clear_module_state->__pyx_tuple__127);
  Py_CLEAR(clear_module_state->__pyx_tuple__129);
  Py_CLEAR(clear_module_state->__pyx_tuple__130);
  Py_CLEAR(clear_module_state->__pyx_tuple__134);
  Py_CLEAR(clear_module_state->__pyx_tuple__136);
  Py_CLEAR(clear_module_state->__pyx_tuple__140);
  Py_CLEAR(clear_module_state->__pyx_tuple__144);
  Py_CLEAR(clear_module_state->__pyx_tuple__148);
  Py_CLEAR(clear_module_state->__pyx_tuple__152);
  Py_CLEAR(clear_module_state->__pyx_tuple__154);
  Py_CLEAR(clear_module_state->__pyx_tuple__155);
  Py_CLEAR(clear_module_state->__pyx_tuple__159);
  Py_CLEAR(clear_module_state->__pyx_tuple__161);
  Py_CLEAR(clear_module_state->__pyx_tuple__165);
  Py_CLEAR(clear_module_state->__pyx_tuple__167);
  Py_CLEAR(clear_module_state->__pyx_tuple__169);
  Py_CLEAR(clear_module_state->__pyx_codeobj__12);
  Py_CLEAR(clear_module_state->__pyx_codeobj__15);
  Py_CLEAR(clear_module_state->__pyx_codeobj__16);
  Py_CLEAR(clear_module_state->__pyx_codeobj__18);
  Py_CLEAR(clear_module_state->__pyx_codeobj__19);
  Py_CLEAR(clear_module_state->__pyx_codeobj__20);
  Py_CLEAR(clear_module_state->__pyx_codeobj__21);
  Py_CLEAR(clear_module_state->__pyx_codeobj__22);
  Py_CLEAR(clear_module_state->__pyx_codeobj__23);
  Py_CLEAR(clear_module_state->__pyx_codeobj__24);
  Py_CLEAR(clear_module_state->__pyx_codeobj__25);
  Py_CLEAR(clear_module_state->__pyx_codeobj__26);
  Py_CLEAR(clear_module_state->__pyx_codeobj__27);
  Py_CLEAR(clear_module_state->__pyx_codeobj__28);
  Py_CLEAR(clear_module_state->__pyx_codeobj__29);
  Py_CLEAR(clear_module_state->__pyx_codeobj__30);
  Py_CLEAR(clear_module_state->__pyx_codeobj__31);
  Py_CLEAR(clear_module_state->__pyx_codeobj__32);
  Py_CLEAR(clear_module_state->__pyx_codeobj__33);
  Py_CLEAR(clear_module_state->__pyx_codeobj__34);
  Py_CLEAR(clear_module_state->__pyx_codeobj__35);
  Py_CLEAR(clear_module_state->__pyx_codeobj__36);
  Py_CLEAR(clear_module_state->__pyx_codeobj__37);
  Py_CLEAR(clear_module_state->__pyx_codeobj__38);
  Py_CLEAR(clear_module_state->__pyx_codeobj__39);
  Py_CLEAR(clear_module_state->__pyx_codeobj__40);
  Py_CLEAR(clear_module_state->__pyx_codeobj__41);
  Py_CLEAR(clear_module_state->__pyx_codeobj__42);
  Py_CLEAR(clear_module_state->__pyx_codeobj__43);
  Py_CLEAR(clear_module_state->__pyx_codeobj__44);
  Py_CLEAR(clear_module_state->__pyx_codeobj__45);
  Py_CLEAR(clear_module_state->__pyx_codeobj__46);
  Py_CLEAR(clear_module_state->__pyx_codeobj__47);
  Py_CLEAR(clear_module_state->__pyx_codeobj__48);
  Py_CLEAR(clear_module_state->__pyx_codeobj__49);
  Py_CLEAR(clear_module_state->__pyx_codeobj__50);
  Py_CLEAR(clear_module_state->__pyx_codeobj__51);
  Py_CLEAR(clear_module_state->__pyx_codeobj__52);
  Py_CLEAR(clear_module_state->__pyx_codeobj__53);
  Py_CLEAR(clear_module_state->__pyx_codeobj__54);
  Py_CLEAR(clear_module_state->__pyx_codeobj__55);
  Py_CLEAR(clear_module_state->__pyx_codeobj__56);
  Py_CLEAR(clear_module_state->__pyx_codeobj__57);
  Py_CLEAR(clear_module_state->__pyx_codeobj__58);
  Py_CLEAR(clear_module_state->__pyx_codeobj__59);
  Py_CLEAR(clear_module_state->__pyx_codeobj__60);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__67);
  Py_CLEAR(clear_module_state->__pyx_codeobj__68);
  Py_CLEAR(clear_module_state->__pyx_codeobj__70);
  Py_CLEAR(clear_module_state->__pyx_codeobj__72);
  Py_CLEAR(clear_module_state->__pyx_codeobj__74);
  Py_CLEAR(clear_module_state->__pyx_codeobj__76);
  Py_CLEAR(clear_module_state->__pyx_codeobj__78);
  Py_CLEAR(clear_module_state->__pyx_codeobj__80);
  Py_CLEAR(clear_module_state->__pyx_codeobj__82);
  Py_CLEAR(clear_module_state->__pyx_codeobj__84);
  Py_CLEAR(clear_module_state->__pyx_codeobj__87);
  Py_CLEAR(clear_module_state->__pyx_codeobj__89);
  Py_CLEAR(clear_module_state->__pyx_codeobj__91);
  Py_CLEAR(clear_module_state->__pyx_codeobj__92);
  Py_CLEAR(clear_module_state->__pyx_codeobj__94);
  Py_CLEAR(clear_module_state->__pyx_codeobj__95);
  Py_CLEAR(clear_module_state->__pyx_codeobj__96);
  Py_CLEAR(clear_module_state->__pyx_codeobj__98);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__100);
  Py_CLEAR(clear_module_state->__pyx_codeobj__102);
  Py_CLEAR(clear_module_state->__pyx_codeobj__103);
  Py_CLEAR(clear_module_state->__pyx_codeobj__104);
  Py_CLEAR(clear_module_state->__pyx_codeobj__106);
  Py_CLEAR(clear_module_state->__pyx_codeobj__108);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  Py_CLEAR(clear_module_state->__pyx_codeobj__110);
  Py_CLEAR(clear_module_state->__pyx_codeobj__112);
  Py_CLEAR(clear_module_state->__pyx_codeobj__113);
  Py_CLEAR(clear_module_state->__pyx_codeobj__114);
  Py_CLEAR(clear_module_state->__pyx_codeobj__116);
  Py_CLEAR(clear_module_state->__pyx_codeobj__117);
  Py_CLEAR(clear_module_state->__pyx_codeobj__118);
  Py_CLEAR(clear_module_state->__pyx_codeobj__120);
  Py_CLEAR(clear_module_state->__pyx_codeobj__121);
  Py_CLEAR(clear_module_state->__pyx_codeobj__122);
  Py_CLEAR(clear_module_state->__pyx_codeobj__124);
  Py_CLEAR(clear_module_state->__pyx_codeobj__125);
  Py_CLEAR(clear_module_state->__pyx_codeobj__126);
  Py_CLEAR(clear_module_state->__pyx_codeobj__128);
  Py_CLEAR(clear_module_state->__pyx_codeobj__131);
  Py_CLEAR(clear_module_state->__pyx_codeobj__132);
  Py_CLEAR(clear_module_state->__pyx_codeobj__133);
  Py_CLEAR(clear_module_state->__pyx_codeobj__135);
  Py_CLEAR(clear_module_state->__pyx_codeobj__137);
  Py_CLEAR(clear_module_state->__pyx_codeobj__138);
  Py_CLEAR(clear_module_state->__pyx_codeobj__139);
  Py_CLEAR(clear_module_state->__pyx_codeobj__141);
  Py_CLEAR(clear_module_state->__pyx_codeobj__142);
  Py_CLEAR(clear_module_state->__pyx_codeobj__143);
  Py_CLEAR(clear_module_state->__pyx_codeobj__145);
  Py_CLEAR(clear_module_state->__pyx_codeobj__146);
  Py_CLEAR(clear_module_state->__pyx_codeobj__147);
  Py_CLEAR(clear_module_state->__pyx_codeobj__149);
  Py_CLEAR(clear_module_state->__pyx_codeobj__150);
  Py_CLEAR(clear_module_state->__pyx_codeobj__151);
  Py_CLEAR(clear_module_state->__pyx_codeobj__153);
  Py_CLEAR(clear_module_state->__pyx_codeobj__156);
  Py_CLEAR(clear_module_state->__pyx_codeobj__157);
  Py_CLEAR(clear_module_state->__pyx_codeobj__158);
  Py_CLEAR(clear_module_state->__pyx_codeobj__160);
  Py_CLEAR(clear_module_state->__pyx_codeobj__162);
  Py_CLEAR(clear_module_state->__pyx_codeobj__163);
  Py_CLEAR(clear_module_state->__pyx_codeobj__164);
  Py_CLEAR(clear_module_state->__pyx_codeobj__166);
  Py_CLEAR(clear_module_state->__pyx_codeobj__168);
  Py_CLEAR(clear_module_state->__pyx_codeobj__170);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_4base__CythonParentClass);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_4base_Algorithm);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_10structures_Cover);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_10structures_Partition);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_Graph);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_NodeIntAttribute);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_NodeDoubleAttribute);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_NodeStringAttribute);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_EdgeIntAttribute);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_EdgeDoubleAttribute);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_EdgeStringAttribute);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_EdgeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_TriangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreBlender);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_GeometricMeanScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_GeometricMeanScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_SimmelianOverlapScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_PrefixJaccardScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_MultiscaleScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_MultiscaleScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_RandomEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_RandomEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_LocalSimilarityScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_ForestFireScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_ForestFireScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_LocalDegreeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_LocalDegreeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_LocalFilterScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_LocalFilterScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification_GlobalThresholdFilter);
  Py_VISIT(traverse_module_state->__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores);
  Py_VISIT(traverse_module_state->__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_ABS_ZERO);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Abstract_base_class_representin);
  Py_VISIT(traverse_module_state->__pyx_n_s_AdamicAdarDistance);
  Py_VISIT(traverse_module_state->__pyx_n_s_AlgebraicDistance);
  Py_VISIT(traverse_module_state->__pyx_n_s_AlgebraicDistanceSparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_AlgebraicDistanceSparsifier___in);
  Py_VISIT(traverse_module_state->__pyx_n_s_AlgebraicDistanceSparsifier__get);
  Py_VISIT(traverse_module_state->__pyx_n_s_AlgebraicDistanceSparsifier__get_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_AlgebraicDistanceSparsifier_num);
  Py_VISIT(traverse_module_state->__pyx_n_s_AlgebraicDistanceSparsifier_scor);
  Py_VISIT(traverse_module_state->__pyx_n_s_BinarySearchParameterization);
  Py_VISIT(traverse_module_state->__pyx_n_s_BinarySearchParameterization___i);
  Py_VISIT(traverse_module_state->__pyx_n_s_BinarySearchParameterization_par);
  Py_VISIT(traverse_module_state->__pyx_kp_s_BinarySearchParameterization_si);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChanceCorrectedTriangleScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChanceCorrectedTriangleScore___r);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChanceCorrectedTriangleScore___s);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChibaNishizekiTriangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChibaNishizekiTriangleEdgeScore_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChibaNishizekiTriangleEdgeScore_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_CompleteSearchParameterization);
  Py_VISIT(traverse_module_state->__pyx_kp_s_CompleteSearchParameterization_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_CompleteSearchParameterization_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_CompleteSearchParameterization_p);
  Py_VISIT(traverse_module_state->__pyx_n_s_ConstantScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_ConstantScore___init);
  Py_VISIT(traverse_module_state->__pyx_kp_s_ConstantScore_constValue_1_0_As);
  Py_VISIT(traverse_module_state->__pyx_n_s_ConstantScore_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_DegreeMultiscaleSparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_DegreeMultiscaleSparsifier___ini);
  Py_VISIT(traverse_module_state->__pyx_n_s_DegreeMultiscaleSparsifier__getP);
  Py_VISIT(traverse_module_state->__pyx_n_s_DegreeMultiscaleSparsifier__getS);
  Py_VISIT(traverse_module_state->__pyx_kp_s_DegreeMultiscaleSparsifier_degs);
  Py_VISIT(traverse_module_state->__pyx_n_s_DegreeMultiscaleSparsifier_score);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreAsWeight);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreAsWeight___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreAsWeight___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreAsWeight_getWeightedGra);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreBlender);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreBlender___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreBlender___setstate_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreLinearizer);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreLinearizer___reduce_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreLinearizer___setstate_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreNormalizer);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreNormalizer___reduce_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScoreNormalizer___setstate_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScore___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScore___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScore_score);
  Py_VISIT(traverse_module_state->__pyx_n_s_EdgeScore_scores);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Error_you_may_not_use_EdgeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireScore___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireScore___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireSparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireSparsifier___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireSparsifier__getParamet);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireSparsifier__getSparsif);
  Py_VISIT(traverse_module_state->__pyx_kp_s_ForestFireSparsifier_burnProbab);
  Py_VISIT(traverse_module_state->__pyx_n_s_ForestFireSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_G);
  Py_VISIT(traverse_module_state->__pyx_n_s_GeometricMeanScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_GeometricMeanScore___reduce_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_GeometricMeanScore___setstate_cy);
  Py_VISIT(traverse_module_state->__pyx_n_s_GlobalThresholdFilter);
  Py_VISIT(traverse_module_state->__pyx_n_s_GlobalThresholdFilter___reduce_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_GlobalThresholdFilter___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_GlobalThresholdFilter_calculate);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Implement_in_subclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_JaccardSimilarityAttributizer);
  Py_VISIT(traverse_module_state->__pyx_n_s_JaccardSimilaritySparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_JaccardSimilaritySparsifier_An);
  Py_VISIT(traverse_module_state->__pyx_n_s_JaccardSimilaritySparsifier__get);
  Py_VISIT(traverse_module_state->__pyx_n_s_JaccardSimilaritySparsifier__get_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_JaccardSimilaritySparsifier_scor);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeScore___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeScore___setstate_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_LocalDegreeSparsifier_An_implem);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeSparsifier__getParame);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeSparsifier__getSparsi);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalDegreeSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalFilterScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalFilterScore___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalFilterScore___setstate_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilarityScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilarityScore___reduce_cy);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilarityScore___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilaritySparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_LocalSimilaritySparsifier_An_im);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilaritySparsifier__getPa);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilaritySparsifier__getSp);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSimilaritySparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSparsifier___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSparsifier__getParameteriza);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSparsifier__getSparsifiedGr);
  Py_VISIT(traverse_module_state->__pyx_n_s_LocalSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_kp_s_LocalSparsifier_sparsifier_Spar);
  Py_VISIT(traverse_module_state->__pyx_n_s_MemoryError);
  Py_VISIT(traverse_module_state->__pyx_n_s_ModularityPartitionScore);
  Py_VISIT(traverse_module_state->__pyx_kp_s_ModularityPartitionScore_Sparsi);
  Py_VISIT(traverse_module_state->__pyx_n_s_ModularityPartitionScore_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_ModularityPartitionScore_scores_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_ModularityPartitionScore_scores_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleScore___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleScore___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MultiscaleSparsifier_An_impleme);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleSparsifier__getParamet);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleSparsifier__getSparsif);
  Py_VISIT(traverse_module_state->__pyx_n_s_MultiscaleSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_NotImplementedError);
  Py_VISIT(traverse_module_state->__pyx_n_s_PLM);
  Py_VISIT(traverse_module_state->__pyx_n_s_PrefixJaccardScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_PrefixJaccardScore___reduce_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_PrefixJaccardScore___setstate_cy);
  Py_VISIT(traverse_module_state->__pyx_kp_s_QuadrilateralSimmelianSparsifie);
  Py_VISIT(traverse_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_QuadrilateralSimmelianSparsifier_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeScore___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeScore___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_RandomEdgeSparsifier_Random_Edg);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeSparsifier__getParamet);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeSparsifier__getSparsif);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomEdgeSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeScore___reduce_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeScore___setstate_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_RandomNodeEdgeSparsifier_Random);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeSparsifier___init);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeSparsifier__getPar);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeSparsifier__getSpa);
  Py_VISIT(traverse_module_state->__pyx_n_s_RandomNodeEdgeSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_RuntimeError);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SCANSparsifier_A_sparsifiier_de);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANSparsifier__getParameterizat);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANSparsifier__getSparsifiedGra);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANStructuralSimilarityScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANStructuralSimilarityScore_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCANStructuralSimilarityScore_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SimmelianMultiscaleSparsifier_M);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier__g);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier__g_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianMultiscaleSparsifier_sc);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianOverlapScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianOverlapScore___reduce_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianOverlapScore___setstate);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SimmelianSparsifierNonParametri);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierNonParametric);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierNonParametric_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierNonParametric_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierNonParametric_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierParametric);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierParametric_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SimmelianSparsifierParametric_A);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierParametric__g);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierParametric__g_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimmelianSparsifierParametric_sc);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimpleParameterization);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SimpleParameterization_A_parame);
  Py_VISIT(traverse_module_state->__pyx_n_s_SimpleParameterization_parameter);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier__getParameterizationA);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier__getSparsifiedGraph);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier_getParameter);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier_getSparsifiedGraph);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier_getSparsifiedGraphOfS);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleEdgeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleEdgeScore___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleEdgeScore___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleSparsifier);
  Py_VISIT(traverse_module_state->__pyx_kp_s_TriangleSparsifier_Allows_for_g);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleSparsifier__getParameter);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleSparsifier__getSparsifie);
  Py_VISIT(traverse_module_state->__pyx_n_s_TriangleSparsifier_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_TypeError);
  Py_VISIT(traverse_module_state->__pyx_n_s__10);
  Py_VISIT(traverse_module_state->__pyx_n_s__171);
  Py_VISIT(traverse_module_state->__pyx_kp_u__9);
  Py_VISIT(traverse_module_state->__pyx_n_s_a);
  Py_VISIT(traverse_module_state->__pyx_n_s_a_ms);
  Py_VISIT(traverse_module_state->__pyx_n_s_a_sj);
  Py_VISIT(traverse_module_state->__pyx_n_s_a_triangles);
  Py_VISIT(traverse_module_state->__pyx_n_s_above);
  Py_VISIT(traverse_module_state->__pyx_n_s_algDist);
  Py_VISIT(traverse_module_state->__pyx_n_s_algorithm);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_attribute);
  Py_VISIT(traverse_module_state->__pyx_n_s_attribute0);
  Py_VISIT(traverse_module_state->__pyx_n_s_attribute1);
  Py_VISIT(traverse_module_state->__pyx_n_s_attribute_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_bestParameter);
  Py_VISIT(traverse_module_state->__pyx_n_s_bestRatio);
  Py_VISIT(traverse_module_state->__pyx_n_s_burnProbability);
  Py_VISIT(traverse_module_state->__pyx_n_s_calculate);
  Py_VISIT(traverse_module_state->__pyx_n_s_cdAlgo);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_getitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_community);
  Py_VISIT(traverse_module_state->__pyx_n_s_constValue);
  Py_VISIT(traverse_module_state->__pyx_n_s_currentEdgeRatio);
  Py_VISIT(traverse_module_state->__pyx_n_s_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_degree);
  Py_VISIT(traverse_module_state->__pyx_n_s_degsToAttrValue);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_distance);
  Py_VISIT(traverse_module_state->__pyx_n_s_doc);
  Py_VISIT(traverse_module_state->__pyx_n_s_e);
  Py_VISIT(traverse_module_state->__pyx_n_s_edgeId);
  Py_VISIT(traverse_module_state->__pyx_n_s_edgeRatio);
  Py_VISIT(traverse_module_state->__pyx_n_s_edgeScores);
  Py_VISIT(traverse_module_state->__pyx_n_s_eid);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_estimation);
  Py_VISIT(traverse_module_state->__pyx_n_s_factor);
  Py_VISIT(traverse_module_state->__pyx_n_s_ffScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_forEdges);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_getAttribute);
  Py_VISIT(traverse_module_state->__pyx_n_s_getEdgeScores);
  Py_VISIT(traverse_module_state->__pyx_n_s_getParameter);
  Py_VISIT(traverse_module_state->__pyx_n_s_getParameterizationAlgorithm);
  Py_VISIT(traverse_module_state->__pyx_n_s_getPartition);
  Py_VISIT(traverse_module_state->__pyx_n_s_getRankAttribute);
  Py_VISIT(traverse_module_state->__pyx_n_s_getRankAttribute_locals_lambda);
  Py_VISIT(traverse_module_state->__pyx_n_s_getSparsifiedGraph);
  Py_VISIT(traverse_module_state->__pyx_n_s_getSparsifiedGraphOfSize);
  Py_VISIT(traverse_module_state->__pyx_n_s_getSparsifiedGraph_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_getWeightedGraph);
  Py_VISIT(traverse_module_state->__pyx_n_s_getstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_gf);
  Py_VISIT(traverse_module_state->__pyx_n_s_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_increase);
  Py_VISIT(traverse_module_state->__pyx_n_s_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_init);
  Py_VISIT(traverse_module_state->__pyx_n_s_init_subclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_inputAttribute);
  Py_VISIT(traverse_module_state->__pyx_n_s_inverse);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_iterEdges);
  Py_VISIT(traverse_module_state->__pyx_n_s_iterEdgesWeights);
  Py_VISIT(traverse_module_state->__pyx_n_s_key);
  Py_VISIT(traverse_module_state->__pyx_n_s_localDegree);
  Py_VISIT(traverse_module_state->__pyx_n_s_localDegreeScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_localFilterScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_localSimScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_logarithmic);
  Py_VISIT(traverse_module_state->__pyx_n_s_lower);
  Py_VISIT(traverse_module_state->__pyx_n_s_lowerBound);
  Py_VISIT(traverse_module_state->__pyx_n_s_lowerParameterBound);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_maxRank);
  Py_VISIT(traverse_module_state->__pyx_n_s_maxSteps);
  Py_VISIT(traverse_module_state->__pyx_n_s_meanQuadrangles);
  Py_VISIT(traverse_module_state->__pyx_n_s_metaclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_minDistance);
  Py_VISIT(traverse_module_state->__pyx_n_s_module);
  Py_VISIT(traverse_module_state->__pyx_n_s_mro_entries);
  Py_VISIT(traverse_module_state->__pyx_n_s_ms);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_networkit_sparsification);
  Py_VISIT(traverse_module_state->__pyx_kp_s_networkit_sparsification_pyx);
  Py_VISIT(traverse_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_VISIT(traverse_module_state->__pyx_kp_u_none_randomized);
  Py_VISIT(traverse_module_state->__pyx_n_s_norm);
  Py_VISIT(traverse_module_state->__pyx_n_s_numberIterations);
  Py_VISIT(traverse_module_state->__pyx_n_s_numberOfEdges);
  Py_VISIT(traverse_module_state->__pyx_n_s_numberSystems);
  Py_VISIT(traverse_module_state->__pyx_n_s_object);
  Py_VISIT(traverse_module_state->__pyx_n_s_offset);
  Py_VISIT(traverse_module_state->__pyx_n_s_omega);
  Py_VISIT(traverse_module_state->__pyx_n_s_originalScores);
  Py_VISIT(traverse_module_state->__pyx_n_s_par);
  Py_VISIT(traverse_module_state->__pyx_n_s_paramAlgorithm);
  Py_VISIT(traverse_module_state->__pyx_n_s_parameter);
  Py_VISIT(traverse_module_state->__pyx_kp_u_parameterization_method_not_yet);
  Py_VISIT(traverse_module_state->__pyx_n_s_parameterize);
  Py_VISIT(traverse_module_state->__pyx_n_s_partition);
  Py_VISIT(traverse_module_state->__pyx_n_s_pf);
  Py_VISIT(traverse_module_state->__pyx_n_s_prepare);
  Py_VISIT(traverse_module_state->__pyx_n_s_preprocess);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_vtable);
  Py_VISIT(traverse_module_state->__pyx_n_s_quadranglePrefixJaccard);
  Py_VISIT(traverse_module_state->__pyx_n_s_quadrangles);
  Py_VISIT(traverse_module_state->__pyx_n_s_qualname);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_reScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_refine);
  Py_VISIT(traverse_module_state->__pyx_n_s_result);
  Py_VISIT(traverse_module_state->__pyx_n_s_reverse);
  Py_VISIT(traverse_module_state->__pyx_n_s_rneScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_run);
  Py_VISIT(traverse_module_state->__pyx_n_s_scanScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_score);
  Py_VISIT(traverse_module_state->__pyx_kp_u_score_must_be_either_a_vector_of);
  Py_VISIT(traverse_module_state->__pyx_n_s_scorer);
  Py_VISIT(traverse_module_state->__pyx_n_s_scores);
  Py_VISIT(traverse_module_state->__pyx_n_s_selection);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_kp_s_self__this_cannot_be_converted_t);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_setitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_simmelianOverlap);
  Py_VISIT(traverse_module_state->__pyx_n_s_sizeIncreasesWithParameter);
  Py_VISIT(traverse_module_state->__pyx_n_s_sorted);
  Py_VISIT(traverse_module_state->__pyx_n_s_sparsified);
  Py_VISIT(traverse_module_state->__pyx_n_s_sparsifier);
  Py_VISIT(traverse_module_state->__pyx_n_s_squared);
  Py_VISIT(traverse_module_state->__pyx_kp_s_stringsource);
  Py_VISIT(traverse_module_state->__pyx_n_s_super);
  Py_VISIT(traverse_module_state->__pyx_n_s_targetBurntRatio);
  Py_VISIT(traverse_module_state->__pyx_n_s_tebr);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_together);
  Py_VISIT(traverse_module_state->__pyx_n_s_triangleScore);
  Py_VISIT(traverse_module_state->__pyx_n_s_triangles);
  Py_VISIT(traverse_module_state->__pyx_n_s_turbo);
  Py_VISIT(traverse_module_state->__pyx_n_s_u);
  Py_VISIT(traverse_module_state->__pyx_n_s_upper);
  Py_VISIT(traverse_module_state->__pyx_n_s_upperBound);
  Py_VISIT(traverse_module_state->__pyx_n_s_upperEdgeIdBound);
  Py_VISIT(traverse_module_state->__pyx_n_s_upperParameterBound);
  Py_VISIT(traverse_module_state->__pyx_n_s_v);
  Py_VISIT(traverse_module_state->__pyx_n_s_w);
  Py_VISIT(traverse_module_state->__pyx_n_s_withEdgeScores);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_zip);
  Py_VISIT(traverse_module_state->__pyx_float_0_0);
  Py_VISIT(traverse_module_state->__pyx_float_0_5);
  Py_VISIT(traverse_module_state->__pyx_float_1_0);
  Py_VISIT(traverse_module_state->__pyx_float_2_0);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_7);
  Py_VISIT(traverse_module_state->__pyx_float_100_0);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_10);
  Py_VISIT(traverse_module_state->__pyx_int_20);
  Py_VISIT(traverse_module_state->__pyx_int_30);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__3);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__61);
  Py_VISIT(traverse_module_state->__pyx_tuple__62);
  Py_VISIT(traverse_module_state->__pyx_tuple__63);
  Py_VISIT(traverse_module_state->__pyx_tuple__65);
  Py_VISIT(traverse_module_state->__pyx_tuple__69);
  Py_VISIT(traverse_module_state->__pyx_tuple__71);
  Py_VISIT(traverse_module_state->__pyx_tuple__73);
  Py_VISIT(traverse_module_state->__pyx_tuple__75);
  Py_VISIT(traverse_module_state->__pyx_tuple__77);
  Py_VISIT(traverse_module_state->__pyx_tuple__79);
  Py_VISIT(traverse_module_state->__pyx_tuple__81);
  Py_VISIT(traverse_module_state->__pyx_tuple__83);
  Py_VISIT(traverse_module_state->__pyx_tuple__85);
  Py_VISIT(traverse_module_state->__pyx_tuple__86);
  Py_VISIT(traverse_module_state->__pyx_tuple__88);
  Py_VISIT(traverse_module_state->__pyx_tuple__90);
  Py_VISIT(traverse_module_state->__pyx_tuple__93);
  Py_VISIT(traverse_module_state->__pyx_tuple__97);
  Py_VISIT(traverse_module_state->__pyx_codeobj__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__101);
  Py_VISIT(traverse_module_state->__pyx_tuple__105);
  Py_VISIT(traverse_module_state->__pyx_tuple__107);
  Py_VISIT(traverse_module_state->__pyx_tuple__111);
  Py_VISIT(traverse_module_state->__pyx_tuple__115);
  Py_VISIT(traverse_module_state->__pyx_tuple__119);
  Py_VISIT(traverse_module_state->__pyx_tuple__123);
  Py_VISIT(traverse_module_state->__pyx_tuple__127);
  Py_VISIT(traverse_module_state->__pyx_tuple__129);
  Py_VISIT(traverse_module_state->__pyx_tuple__130);
  Py_VISIT(traverse_module_state->__pyx_tuple__134);
  Py_VISIT(traverse_module_state->__pyx_tuple__136);
  Py_VISIT(traverse_module_state->__pyx_tuple__140);
  Py_VISIT(traverse_module_state->__pyx_tuple__144);
  Py_VISIT(traverse_module_state->__pyx_tuple__148);
  Py_VISIT(traverse_module_state->__pyx_tuple__152);
  Py_VISIT(traverse_module_state->__pyx_tuple__154);
  Py_VISIT(traverse_module_state->__pyx_tuple__155);
  Py_VISIT(traverse_module_state->__pyx_tuple__159);
  Py_VISIT(traverse_module_state->__pyx_tuple__161);
  Py_VISIT(traverse_module_state->__pyx_tuple__165);
  Py_VISIT(traverse_module_state->__pyx_tuple__167);
  Py_VISIT(traverse_module_state->__pyx_tuple__169);
  Py_VISIT(traverse_module_state->__pyx_codeobj__12);
  Py_VISIT(traverse_module_state->__pyx_codeobj__15);
  Py_VISIT(traverse_module_state->__pyx_codeobj__16);
  Py_VISIT(traverse_module_state->__pyx_codeobj__18);
  Py_VISIT(traverse_module_state->__pyx_codeobj__19);
  Py_VISIT(traverse_module_state->__pyx_codeobj__20);
  Py_VISIT(traverse_module_state->__pyx_codeobj__21);
  Py_VISIT(traverse_module_state->__pyx_codeobj__22);
  Py_VISIT(traverse_module_state->__pyx_codeobj__23);
  Py_VISIT(traverse_module_state->__pyx_codeobj__24);
  Py_VISIT(traverse_module_state->__pyx_codeobj__25);
  Py_VISIT(traverse_module_state->__pyx_codeobj__26);
  Py_VISIT(traverse_module_state->__pyx_codeobj__27);
  Py_VISIT(traverse_module_state->__pyx_codeobj__28);
  Py_VISIT(traverse_module_state->__pyx_codeobj__29);
  Py_VISIT(traverse_module_state->__pyx_codeobj__30);
  Py_VISIT(traverse_module_state->__pyx_codeobj__31);
  Py_VISIT(traverse_module_state->__pyx_codeobj__32);
  Py_VISIT(traverse_module_state->__pyx_codeobj__33);
  Py_VISIT(traverse_module_state->__pyx_codeobj__34);
  Py_VISIT(traverse_module_state->__pyx_codeobj__35);
  Py_VISIT(traverse_module_state->__pyx_codeobj__36);
  Py_VISIT(traverse_module_state->__pyx_codeobj__37);
  Py_VISIT(traverse_module_state->__pyx_codeobj__38);
  Py_VISIT(traverse_module_state->__pyx_codeobj__39);
  Py_VISIT(traverse_module_state->__pyx_codeobj__40);
  Py_VISIT(traverse_module_state->__pyx_codeobj__41);
  Py_VISIT(traverse_module_state->__pyx_codeobj__42);
  Py_VISIT(traverse_module_state->__pyx_codeobj__43);
  Py_VISIT(traverse_module_state->__pyx_codeobj__44);
  Py_VISIT(traverse_module_state->__pyx_codeobj__45);
  Py_VISIT(traverse_module_state->__pyx_codeobj__46);
  Py_VISIT(traverse_module_state->__pyx_codeobj__47);
  Py_VISIT(traverse_module_state->__pyx_codeobj__48);
  Py_VISIT(traverse_module_state->__pyx_codeobj__49);
  Py_VISIT(traverse_module_state->__pyx_codeobj__50);
  Py_VISIT(traverse_module_state->__pyx_codeobj__51);
  Py_VISIT(traverse_module_state->__pyx_codeobj__52);
  Py_VISIT(traverse_module_state->__pyx_codeobj__53);
  Py_VISIT(traverse_module_state->__pyx_codeobj__54);
  Py_VISIT(traverse_module_state->__pyx_codeobj__55);
  Py_VISIT(traverse_module_state->__pyx_codeobj__56);
  Py_VISIT(traverse_module_state->__pyx_codeobj__57);
  Py_VISIT(traverse_module_state->__pyx_codeobj__58);
  Py_VISIT(traverse_module_state->__pyx_codeobj__59);
  Py_VISIT(traverse_module_state->__pyx_codeobj__60);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__67);
  Py_VISIT(traverse_module_state->__pyx_codeobj__68);
  Py_VISIT(traverse_module_state->__pyx_codeobj__70);
  Py_VISIT(traverse_module_state->__pyx_codeobj__72);
  Py_VISIT(traverse_module_state->__pyx_codeobj__74);
  Py_VISIT(traverse_module_state->__pyx_codeobj__76);
  Py_VISIT(traverse_module_state->__pyx_codeobj__78);
  Py_VISIT(traverse_module_state->__pyx_codeobj__80);
  Py_VISIT(traverse_module_state->__pyx_codeobj__82);
  Py_VISIT(traverse_module_state->__pyx_codeobj__84);
  Py_VISIT(traverse_module_state->__pyx_codeobj__87);
  Py_VISIT(traverse_module_state->__pyx_codeobj__89);
  Py_VISIT(traverse_module_state->__pyx_codeobj__91);
  Py_VISIT(traverse_module_state->__pyx_codeobj__92);
  Py_VISIT(traverse_module_state->__pyx_codeobj__94);
  Py_VISIT(traverse_module_state->__pyx_codeobj__95);
  Py_VISIT(traverse_module_state->__pyx_codeobj__96);
  Py_VISIT(traverse_module_state->__pyx_codeobj__98);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__100);
  Py_VISIT(traverse_module_state->__pyx_codeobj__102);
  Py_VISIT(traverse_module_state->__pyx_codeobj__103);
  Py_VISIT(traverse_module_state->__pyx_codeobj__104);
  Py_VISIT(traverse_module_state->__pyx_codeobj__106);
  Py_VISIT(traverse_module_state->__pyx_codeobj__108);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  Py_VISIT(traverse_module_state->__pyx_codeobj__110);
  Py_VISIT(traverse_module_state->__pyx_codeobj__112);
  Py_VISIT(traverse_module_state->__pyx_codeobj__113);
  Py_VISIT(traverse_module_state->__pyx_codeobj__114);
  Py_VISIT(traverse_module_state->__pyx_codeobj__116);
  Py_VISIT(traverse_module_state->__pyx_codeobj__117);
  Py_VISIT(traverse_module_state->__pyx_codeobj__118);
  Py_VISIT(traverse_module_state->__pyx_codeobj__120);
  Py_VISIT(traverse_module_state->__pyx_codeobj__121);
  Py_VISIT(traverse_module_state->__pyx_codeobj__122);
  Py_VISIT(traverse_module_state->__pyx_codeobj__124);
  Py_VISIT(traverse_module_state->__pyx_codeobj__125);
  Py_VISIT(traverse_module_state->__pyx_codeobj__126);
  Py_VISIT(traverse_module_state->__pyx_codeobj__128);
  Py_VISIT(traverse_module_state->__pyx_codeobj__131);
  Py_VISIT(traverse_module_state->__pyx_codeobj__132);
  Py_VISIT(traverse_module_state->__pyx_codeobj__133);
  Py_VISIT(traverse_module_state->__pyx_codeobj__135);
  Py_VISIT(traverse_module_state->__pyx_codeobj__137);
  Py_VISIT(traverse_module_state->__pyx_codeobj__138);
  Py_VISIT(traverse_module_state->__pyx_codeobj__139);
  Py_VISIT(traverse_module_state->__pyx_codeobj__141);
  Py_VISIT(traverse_module_state->__pyx_codeobj__142);
  Py_VISIT(traverse_module_state->__pyx_codeobj__143);
  Py_VISIT(traverse_module_state->__pyx_codeobj__145);
  Py_VISIT(traverse_module_state->__pyx_codeobj__146);
  Py_VISIT(traverse_module_state->__pyx_codeobj__147);
  Py_VISIT(traverse_module_state->__pyx_codeobj__149);
  Py_VISIT(traverse_module_state->__pyx_codeobj__150);
  Py_VISIT(traverse_module_state->__pyx_codeobj__151);
  Py_VISIT(traverse_module_state->__pyx_codeobj__153);
  Py_VISIT(traverse_module_state->__pyx_codeobj__156);
  Py_VISIT(traverse_module_state->__pyx_codeobj__157);
  Py_VISIT(traverse_module_state->__pyx_codeobj__158);
  Py_VISIT(traverse_module_state->__pyx_codeobj__160);
  Py_VISIT(traverse_module_state->__pyx_codeobj__162);
  Py_VISIT(traverse_module_state->__pyx_codeobj__163);
  Py_VISIT(traverse_module_state->__pyx_codeobj__164);
  Py_VISIT(traverse_module_state->__pyx_codeobj__166);
  Py_VISIT(traverse_module_state->__pyx_codeobj__168);
  Py_VISIT(traverse_module_state->__pyx_codeobj__170);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_9networkit_4base__CythonParentClass __pyx_mstate_global->__pyx_ptype_9networkit_4base__CythonParentClass
#define __pyx_ptype_9networkit_4base_Algorithm __pyx_mstate_global->__pyx_ptype_9networkit_4base_Algorithm
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_9networkit_10structures_Cover __pyx_mstate_global->__pyx_ptype_9networkit_10structures_Cover
#define __pyx_ptype_9networkit_10structures_Partition __pyx_mstate_global->__pyx_ptype_9networkit_10structures_Partition
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_9networkit_5graph_Graph __pyx_mstate_global->__pyx_ptype_9networkit_5graph_Graph
#define __pyx_ptype_9networkit_5graph_NodeIntAttribute __pyx_mstate_global->__pyx_ptype_9networkit_5graph_NodeIntAttribute
#define __pyx_ptype_9networkit_5graph_NodeDoubleAttribute __pyx_mstate_global->__pyx_ptype_9networkit_5graph_NodeDoubleAttribute
#define __pyx_ptype_9networkit_5graph_NodeStringAttribute __pyx_mstate_global->__pyx_ptype_9networkit_5graph_NodeStringAttribute
#define __pyx_ptype_9networkit_5graph_EdgeIntAttribute __pyx_mstate_global->__pyx_ptype_9networkit_5graph_EdgeIntAttribute
#define __pyx_ptype_9networkit_5graph_EdgeDoubleAttribute __pyx_mstate_global->__pyx_ptype_9networkit_5graph_EdgeDoubleAttribute
#define __pyx_ptype_9networkit_5graph_EdgeStringAttribute __pyx_mstate_global->__pyx_ptype_9networkit_5graph_EdgeStringAttribute
#define __pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest __pyx_mstate_global->__pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest
#define __pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest __pyx_mstate_global->__pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_9networkit_14sparsification_EdgeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_EdgeScore
#define __pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore
#define __pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore
#define __pyx_type_9networkit_14sparsification_TriangleEdgeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_TriangleEdgeScore
#define __pyx_type_9networkit_14sparsification_EdgeScoreLinearizer __pyx_mstate_global->__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer
#define __pyx_type_9networkit_14sparsification_EdgeScoreNormalizer __pyx_mstate_global->__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer
#define __pyx_type_9networkit_14sparsification_EdgeScoreBlender __pyx_mstate_global->__pyx_type_9networkit_14sparsification_EdgeScoreBlender
#define __pyx_type_9networkit_14sparsification_GeometricMeanScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_GeometricMeanScore
#define __pyx_type_9networkit_14sparsification_EdgeScoreAsWeight __pyx_mstate_global->__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight
#define __pyx_type_9networkit_14sparsification_SimmelianOverlapScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_SimmelianOverlapScore
#define __pyx_type_9networkit_14sparsification_PrefixJaccardScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_PrefixJaccardScore
#define __pyx_type_9networkit_14sparsification_MultiscaleScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_MultiscaleScore
#define __pyx_type_9networkit_14sparsification_RandomEdgeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_RandomEdgeScore
#define __pyx_type_9networkit_14sparsification_LocalSimilarityScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_LocalSimilarityScore
#define __pyx_type_9networkit_14sparsification_ForestFireScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_ForestFireScore
#define __pyx_type_9networkit_14sparsification_LocalDegreeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_LocalDegreeScore
#define __pyx_type_9networkit_14sparsification_RandomNodeEdgeScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore
#define __pyx_type_9networkit_14sparsification_LocalFilterScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_LocalFilterScore
#define __pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore
#define __pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore __pyx_mstate_global->__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore
#define __pyx_type_9networkit_14sparsification_GlobalThresholdFilter __pyx_mstate_global->__pyx_type_9networkit_14sparsification_GlobalThresholdFilter
#define __pyx_type_9networkit_14sparsification___pyx_scope_struct__scores __pyx_mstate_global->__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores
#endif
#define __pyx_ptype_9networkit_14sparsification_EdgeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_EdgeScore
#define __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore
#define __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore
#define __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore
#define __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer
#define __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer
#define __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender
#define __pyx_ptype_9networkit_14sparsification_GeometricMeanScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_GeometricMeanScore
#define __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight
#define __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore
#define __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore
#define __pyx_ptype_9networkit_14sparsification_MultiscaleScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_MultiscaleScore
#define __pyx_ptype_9networkit_14sparsification_RandomEdgeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_RandomEdgeScore
#define __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore
#define __pyx_ptype_9networkit_14sparsification_ForestFireScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_ForestFireScore
#define __pyx_ptype_9networkit_14sparsification_LocalDegreeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_LocalDegreeScore
#define __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore
#define __pyx_ptype_9networkit_14sparsification_LocalFilterScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_LocalFilterScore
#define __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore
#define __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore
#define __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter
#define __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores __pyx_mstate_global->__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores
#define __pyx_n_s_ABS_ZERO __pyx_mstate_global->__pyx_n_s_ABS_ZERO
#define __pyx_kp_s_Abstract_base_class_representin __pyx_mstate_global->__pyx_kp_s_Abstract_base_class_representin
#define __pyx_n_s_AdamicAdarDistance __pyx_mstate_global->__pyx_n_s_AdamicAdarDistance
#define __pyx_n_s_AlgebraicDistance __pyx_mstate_global->__pyx_n_s_AlgebraicDistance
#define __pyx_n_s_AlgebraicDistanceSparsifier __pyx_mstate_global->__pyx_n_s_AlgebraicDistanceSparsifier
#define __pyx_n_s_AlgebraicDistanceSparsifier___in __pyx_mstate_global->__pyx_n_s_AlgebraicDistanceSparsifier___in
#define __pyx_n_s_AlgebraicDistanceSparsifier__get __pyx_mstate_global->__pyx_n_s_AlgebraicDistanceSparsifier__get
#define __pyx_n_s_AlgebraicDistanceSparsifier__get_2 __pyx_mstate_global->__pyx_n_s_AlgebraicDistanceSparsifier__get_2
#define __pyx_kp_s_AlgebraicDistanceSparsifier_num __pyx_mstate_global->__pyx_kp_s_AlgebraicDistanceSparsifier_num
#define __pyx_n_s_AlgebraicDistanceSparsifier_scor __pyx_mstate_global->__pyx_n_s_AlgebraicDistanceSparsifier_scor
#define __pyx_n_s_BinarySearchParameterization __pyx_mstate_global->__pyx_n_s_BinarySearchParameterization
#define __pyx_n_s_BinarySearchParameterization___i __pyx_mstate_global->__pyx_n_s_BinarySearchParameterization___i
#define __pyx_n_s_BinarySearchParameterization_par __pyx_mstate_global->__pyx_n_s_BinarySearchParameterization_par
#define __pyx_kp_s_BinarySearchParameterization_si __pyx_mstate_global->__pyx_kp_s_BinarySearchParameterization_si
#define __pyx_n_s_ChanceCorrectedTriangleScore __pyx_mstate_global->__pyx_n_s_ChanceCorrectedTriangleScore
#define __pyx_n_s_ChanceCorrectedTriangleScore___r __pyx_mstate_global->__pyx_n_s_ChanceCorrectedTriangleScore___r
#define __pyx_n_s_ChanceCorrectedTriangleScore___s __pyx_mstate_global->__pyx_n_s_ChanceCorrectedTriangleScore___s
#define __pyx_n_s_ChibaNishizekiQuadrangleEdgeScor __pyx_mstate_global->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor
#define __pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2 __pyx_mstate_global->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2
#define __pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3 __pyx_mstate_global->__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3
#define __pyx_n_s_ChibaNishizekiTriangleEdgeScore __pyx_mstate_global->__pyx_n_s_ChibaNishizekiTriangleEdgeScore
#define __pyx_n_s_ChibaNishizekiTriangleEdgeScore_2 __pyx_mstate_global->__pyx_n_s_ChibaNishizekiTriangleEdgeScore_2
#define __pyx_n_s_ChibaNishizekiTriangleEdgeScore_3 __pyx_mstate_global->__pyx_n_s_ChibaNishizekiTriangleEdgeScore_3
#define __pyx_n_s_CompleteSearchParameterization __pyx_mstate_global->__pyx_n_s_CompleteSearchParameterization
#define __pyx_kp_s_CompleteSearchParameterization_2 __pyx_mstate_global->__pyx_kp_s_CompleteSearchParameterization_2
#define __pyx_n_s_CompleteSearchParameterization_3 __pyx_mstate_global->__pyx_n_s_CompleteSearchParameterization_3
#define __pyx_n_s_CompleteSearchParameterization_p __pyx_mstate_global->__pyx_n_s_CompleteSearchParameterization_p
#define __pyx_n_s_ConstantScore __pyx_mstate_global->__pyx_n_s_ConstantScore
#define __pyx_n_s_ConstantScore___init __pyx_mstate_global->__pyx_n_s_ConstantScore___init
#define __pyx_kp_s_ConstantScore_constValue_1_0_As __pyx_mstate_global->__pyx_kp_s_ConstantScore_constValue_1_0_As
#define __pyx_n_s_ConstantScore_scores __pyx_mstate_global->__pyx_n_s_ConstantScore_scores
#define __pyx_n_s_DegreeMultiscaleSparsifier __pyx_mstate_global->__pyx_n_s_DegreeMultiscaleSparsifier
#define __pyx_n_s_DegreeMultiscaleSparsifier___ini __pyx_mstate_global->__pyx_n_s_DegreeMultiscaleSparsifier___ini
#define __pyx_n_s_DegreeMultiscaleSparsifier__getP __pyx_mstate_global->__pyx_n_s_DegreeMultiscaleSparsifier__getP
#define __pyx_n_s_DegreeMultiscaleSparsifier__getS __pyx_mstate_global->__pyx_n_s_DegreeMultiscaleSparsifier__getS
#define __pyx_kp_s_DegreeMultiscaleSparsifier_degs __pyx_mstate_global->__pyx_kp_s_DegreeMultiscaleSparsifier_degs
#define __pyx_n_s_DegreeMultiscaleSparsifier_score __pyx_mstate_global->__pyx_n_s_DegreeMultiscaleSparsifier_score
#define __pyx_n_s_EdgeScore __pyx_mstate_global->__pyx_n_s_EdgeScore
#define __pyx_n_s_EdgeScoreAsWeight __pyx_mstate_global->__pyx_n_s_EdgeScoreAsWeight
#define __pyx_n_s_EdgeScoreAsWeight___reduce_cytho __pyx_mstate_global->__pyx_n_s_EdgeScoreAsWeight___reduce_cytho
#define __pyx_n_s_EdgeScoreAsWeight___setstate_cyt __pyx_mstate_global->__pyx_n_s_EdgeScoreAsWeight___setstate_cyt
#define __pyx_n_s_EdgeScoreAsWeight_getWeightedGra __pyx_mstate_global->__pyx_n_s_EdgeScoreAsWeight_getWeightedGra
#define __pyx_n_s_EdgeScoreBlender __pyx_mstate_global->__pyx_n_s_EdgeScoreBlender
#define __pyx_n_s_EdgeScoreBlender___reduce_cython __pyx_mstate_global->__pyx_n_s_EdgeScoreBlender___reduce_cython
#define __pyx_n_s_EdgeScoreBlender___setstate_cyth __pyx_mstate_global->__pyx_n_s_EdgeScoreBlender___setstate_cyth
#define __pyx_n_s_EdgeScoreLinearizer __pyx_mstate_global->__pyx_n_s_EdgeScoreLinearizer
#define __pyx_n_s_EdgeScoreLinearizer___reduce_cyt __pyx_mstate_global->__pyx_n_s_EdgeScoreLinearizer___reduce_cyt
#define __pyx_n_s_EdgeScoreLinearizer___setstate_c __pyx_mstate_global->__pyx_n_s_EdgeScoreLinearizer___setstate_c
#define __pyx_n_s_EdgeScoreNormalizer __pyx_mstate_global->__pyx_n_s_EdgeScoreNormalizer
#define __pyx_n_s_EdgeScoreNormalizer___reduce_cyt __pyx_mstate_global->__pyx_n_s_EdgeScoreNormalizer___reduce_cyt
#define __pyx_n_s_EdgeScoreNormalizer___setstate_c __pyx_mstate_global->__pyx_n_s_EdgeScoreNormalizer___setstate_c
#define __pyx_n_s_EdgeScore___reduce_cython __pyx_mstate_global->__pyx_n_s_EdgeScore___reduce_cython
#define __pyx_n_s_EdgeScore___setstate_cython __pyx_mstate_global->__pyx_n_s_EdgeScore___setstate_cython
#define __pyx_n_s_EdgeScore_score __pyx_mstate_global->__pyx_n_s_EdgeScore_score
#define __pyx_n_s_EdgeScore_scores __pyx_mstate_global->__pyx_n_s_EdgeScore_scores
#define __pyx_kp_u_Error_you_may_not_use_EdgeScore __pyx_mstate_global->__pyx_kp_u_Error_you_may_not_use_EdgeScore
#define __pyx_n_s_ForestFireScore __pyx_mstate_global->__pyx_n_s_ForestFireScore
#define __pyx_n_s_ForestFireScore___reduce_cython __pyx_mstate_global->__pyx_n_s_ForestFireScore___reduce_cython
#define __pyx_n_s_ForestFireScore___setstate_cytho __pyx_mstate_global->__pyx_n_s_ForestFireScore___setstate_cytho
#define __pyx_n_s_ForestFireSparsifier __pyx_mstate_global->__pyx_n_s_ForestFireSparsifier
#define __pyx_n_s_ForestFireSparsifier___init __pyx_mstate_global->__pyx_n_s_ForestFireSparsifier___init
#define __pyx_n_s_ForestFireSparsifier__getParamet __pyx_mstate_global->__pyx_n_s_ForestFireSparsifier__getParamet
#define __pyx_n_s_ForestFireSparsifier__getSparsif __pyx_mstate_global->__pyx_n_s_ForestFireSparsifier__getSparsif
#define __pyx_kp_s_ForestFireSparsifier_burnProbab __pyx_mstate_global->__pyx_kp_s_ForestFireSparsifier_burnProbab
#define __pyx_n_s_ForestFireSparsifier_scores __pyx_mstate_global->__pyx_n_s_ForestFireSparsifier_scores
#define __pyx_n_s_G __pyx_mstate_global->__pyx_n_s_G
#define __pyx_n_s_GeometricMeanScore __pyx_mstate_global->__pyx_n_s_GeometricMeanScore
#define __pyx_n_s_GeometricMeanScore___reduce_cyth __pyx_mstate_global->__pyx_n_s_GeometricMeanScore___reduce_cyth
#define __pyx_n_s_GeometricMeanScore___setstate_cy __pyx_mstate_global->__pyx_n_s_GeometricMeanScore___setstate_cy
#define __pyx_n_s_GlobalThresholdFilter __pyx_mstate_global->__pyx_n_s_GlobalThresholdFilter
#define __pyx_n_s_GlobalThresholdFilter___reduce_c __pyx_mstate_global->__pyx_n_s_GlobalThresholdFilter___reduce_c
#define __pyx_n_s_GlobalThresholdFilter___setstate __pyx_mstate_global->__pyx_n_s_GlobalThresholdFilter___setstate
#define __pyx_n_s_GlobalThresholdFilter_calculate __pyx_mstate_global->__pyx_n_s_GlobalThresholdFilter_calculate
#define __pyx_kp_u_Implement_in_subclass __pyx_mstate_global->__pyx_kp_u_Implement_in_subclass
#define __pyx_n_s_JaccardSimilarityAttributizer __pyx_mstate_global->__pyx_n_s_JaccardSimilarityAttributizer
#define __pyx_n_s_JaccardSimilaritySparsifier __pyx_mstate_global->__pyx_n_s_JaccardSimilaritySparsifier
#define __pyx_kp_s_JaccardSimilaritySparsifier_An __pyx_mstate_global->__pyx_kp_s_JaccardSimilaritySparsifier_An
#define __pyx_n_s_JaccardSimilaritySparsifier__get __pyx_mstate_global->__pyx_n_s_JaccardSimilaritySparsifier__get
#define __pyx_n_s_JaccardSimilaritySparsifier__get_2 __pyx_mstate_global->__pyx_n_s_JaccardSimilaritySparsifier__get_2
#define __pyx_n_s_JaccardSimilaritySparsifier_scor __pyx_mstate_global->__pyx_n_s_JaccardSimilaritySparsifier_scor
#define __pyx_n_s_LocalDegreeScore __pyx_mstate_global->__pyx_n_s_LocalDegreeScore
#define __pyx_n_s_LocalDegreeScore___reduce_cython __pyx_mstate_global->__pyx_n_s_LocalDegreeScore___reduce_cython
#define __pyx_n_s_LocalDegreeScore___setstate_cyth __pyx_mstate_global->__pyx_n_s_LocalDegreeScore___setstate_cyth
#define __pyx_n_s_LocalDegreeSparsifier __pyx_mstate_global->__pyx_n_s_LocalDegreeSparsifier
#define __pyx_kp_s_LocalDegreeSparsifier_An_implem __pyx_mstate_global->__pyx_kp_s_LocalDegreeSparsifier_An_implem
#define __pyx_n_s_LocalDegreeSparsifier__getParame __pyx_mstate_global->__pyx_n_s_LocalDegreeSparsifier__getParame
#define __pyx_n_s_LocalDegreeSparsifier__getSparsi __pyx_mstate_global->__pyx_n_s_LocalDegreeSparsifier__getSparsi
#define __pyx_n_s_LocalDegreeSparsifier_scores __pyx_mstate_global->__pyx_n_s_LocalDegreeSparsifier_scores
#define __pyx_n_s_LocalFilterScore __pyx_mstate_global->__pyx_n_s_LocalFilterScore
#define __pyx_n_s_LocalFilterScore___reduce_cython __pyx_mstate_global->__pyx_n_s_LocalFilterScore___reduce_cython
#define __pyx_n_s_LocalFilterScore___setstate_cyth __pyx_mstate_global->__pyx_n_s_LocalFilterScore___setstate_cyth
#define __pyx_n_s_LocalSimilarityScore __pyx_mstate_global->__pyx_n_s_LocalSimilarityScore
#define __pyx_n_s_LocalSimilarityScore___reduce_cy __pyx_mstate_global->__pyx_n_s_LocalSimilarityScore___reduce_cy
#define __pyx_n_s_LocalSimilarityScore___setstate __pyx_mstate_global->__pyx_n_s_LocalSimilarityScore___setstate
#define __pyx_n_s_LocalSimilaritySparsifier __pyx_mstate_global->__pyx_n_s_LocalSimilaritySparsifier
#define __pyx_kp_s_LocalSimilaritySparsifier_An_im __pyx_mstate_global->__pyx_kp_s_LocalSimilaritySparsifier_An_im
#define __pyx_n_s_LocalSimilaritySparsifier__getPa __pyx_mstate_global->__pyx_n_s_LocalSimilaritySparsifier__getPa
#define __pyx_n_s_LocalSimilaritySparsifier__getSp __pyx_mstate_global->__pyx_n_s_LocalSimilaritySparsifier__getSp
#define __pyx_n_s_LocalSimilaritySparsifier_scores __pyx_mstate_global->__pyx_n_s_LocalSimilaritySparsifier_scores
#define __pyx_n_s_LocalSparsifier __pyx_mstate_global->__pyx_n_s_LocalSparsifier
#define __pyx_n_s_LocalSparsifier___init __pyx_mstate_global->__pyx_n_s_LocalSparsifier___init
#define __pyx_n_s_LocalSparsifier__getParameteriza __pyx_mstate_global->__pyx_n_s_LocalSparsifier__getParameteriza
#define __pyx_n_s_LocalSparsifier__getSparsifiedGr __pyx_mstate_global->__pyx_n_s_LocalSparsifier__getSparsifiedGr
#define __pyx_n_s_LocalSparsifier_scores __pyx_mstate_global->__pyx_n_s_LocalSparsifier_scores
#define __pyx_kp_s_LocalSparsifier_sparsifier_Spar __pyx_mstate_global->__pyx_kp_s_LocalSparsifier_sparsifier_Spar
#define __pyx_n_s_MemoryError __pyx_mstate_global->__pyx_n_s_MemoryError
#define __pyx_n_s_ModularityPartitionScore __pyx_mstate_global->__pyx_n_s_ModularityPartitionScore
#define __pyx_kp_s_ModularityPartitionScore_Sparsi __pyx_mstate_global->__pyx_kp_s_ModularityPartitionScore_Sparsi
#define __pyx_n_s_ModularityPartitionScore_scores __pyx_mstate_global->__pyx_n_s_ModularityPartitionScore_scores
#define __pyx_n_s_ModularityPartitionScore_scores_2 __pyx_mstate_global->__pyx_n_s_ModularityPartitionScore_scores_2
#define __pyx_n_s_ModularityPartitionScore_scores_3 __pyx_mstate_global->__pyx_n_s_ModularityPartitionScore_scores_3
#define __pyx_n_s_MultiscaleScore __pyx_mstate_global->__pyx_n_s_MultiscaleScore
#define __pyx_n_s_MultiscaleScore___reduce_cython __pyx_mstate_global->__pyx_n_s_MultiscaleScore___reduce_cython
#define __pyx_n_s_MultiscaleScore___setstate_cytho __pyx_mstate_global->__pyx_n_s_MultiscaleScore___setstate_cytho
#define __pyx_n_s_MultiscaleSparsifier __pyx_mstate_global->__pyx_n_s_MultiscaleSparsifier
#define __pyx_kp_s_MultiscaleSparsifier_An_impleme __pyx_mstate_global->__pyx_kp_s_MultiscaleSparsifier_An_impleme
#define __pyx_n_s_MultiscaleSparsifier__getParamet __pyx_mstate_global->__pyx_n_s_MultiscaleSparsifier__getParamet
#define __pyx_n_s_MultiscaleSparsifier__getSparsif __pyx_mstate_global->__pyx_n_s_MultiscaleSparsifier__getSparsif
#define __pyx_n_s_MultiscaleSparsifier_scores __pyx_mstate_global->__pyx_n_s_MultiscaleSparsifier_scores
#define __pyx_n_s_NotImplementedError __pyx_mstate_global->__pyx_n_s_NotImplementedError
#define __pyx_n_s_PLM __pyx_mstate_global->__pyx_n_s_PLM
#define __pyx_n_s_PrefixJaccardScore __pyx_mstate_global->__pyx_n_s_PrefixJaccardScore
#define __pyx_n_s_PrefixJaccardScore___reduce_cyth __pyx_mstate_global->__pyx_n_s_PrefixJaccardScore___reduce_cyth
#define __pyx_n_s_PrefixJaccardScore___setstate_cy __pyx_mstate_global->__pyx_n_s_PrefixJaccardScore___setstate_cy
#define __pyx_kp_s_QuadrilateralSimmelianSparsifie __pyx_mstate_global->__pyx_kp_s_QuadrilateralSimmelianSparsifie
#define __pyx_n_s_QuadrilateralSimmelianSparsifier __pyx_mstate_global->__pyx_n_s_QuadrilateralSimmelianSparsifier
#define __pyx_n_s_QuadrilateralSimmelianSparsifier_2 __pyx_mstate_global->__pyx_n_s_QuadrilateralSimmelianSparsifier_2
#define __pyx_n_s_QuadrilateralSimmelianSparsifier_3 __pyx_mstate_global->__pyx_n_s_QuadrilateralSimmelianSparsifier_3
#define __pyx_n_s_QuadrilateralSimmelianSparsifier_4 __pyx_mstate_global->__pyx_n_s_QuadrilateralSimmelianSparsifier_4
#define __pyx_n_s_RandomEdgeScore __pyx_mstate_global->__pyx_n_s_RandomEdgeScore
#define __pyx_n_s_RandomEdgeScore___reduce_cython __pyx_mstate_global->__pyx_n_s_RandomEdgeScore___reduce_cython
#define __pyx_n_s_RandomEdgeScore___setstate_cytho __pyx_mstate_global->__pyx_n_s_RandomEdgeScore___setstate_cytho
#define __pyx_n_s_RandomEdgeSparsifier __pyx_mstate_global->__pyx_n_s_RandomEdgeSparsifier
#define __pyx_kp_s_RandomEdgeSparsifier_Random_Edg __pyx_mstate_global->__pyx_kp_s_RandomEdgeSparsifier_Random_Edg
#define __pyx_n_s_RandomEdgeSparsifier__getParamet __pyx_mstate_global->__pyx_n_s_RandomEdgeSparsifier__getParamet
#define __pyx_n_s_RandomEdgeSparsifier__getSparsif __pyx_mstate_global->__pyx_n_s_RandomEdgeSparsifier__getSparsif
#define __pyx_n_s_RandomEdgeSparsifier_scores __pyx_mstate_global->__pyx_n_s_RandomEdgeSparsifier_scores
#define __pyx_n_s_RandomNodeEdgeScore __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeScore
#define __pyx_n_s_RandomNodeEdgeScore___reduce_cyt __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeScore___reduce_cyt
#define __pyx_n_s_RandomNodeEdgeScore___setstate_c __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeScore___setstate_c
#define __pyx_n_s_RandomNodeEdgeSparsifier __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeSparsifier
#define __pyx_kp_s_RandomNodeEdgeSparsifier_Random __pyx_mstate_global->__pyx_kp_s_RandomNodeEdgeSparsifier_Random
#define __pyx_n_s_RandomNodeEdgeSparsifier___init __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeSparsifier___init
#define __pyx_n_s_RandomNodeEdgeSparsifier__getPar __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeSparsifier__getPar
#define __pyx_n_s_RandomNodeEdgeSparsifier__getSpa __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeSparsifier__getSpa
#define __pyx_n_s_RandomNodeEdgeSparsifier_scores __pyx_mstate_global->__pyx_n_s_RandomNodeEdgeSparsifier_scores
#define __pyx_n_s_RuntimeError __pyx_mstate_global->__pyx_n_s_RuntimeError
#define __pyx_n_s_SCANSparsifier __pyx_mstate_global->__pyx_n_s_SCANSparsifier
#define __pyx_kp_s_SCANSparsifier_A_sparsifiier_de __pyx_mstate_global->__pyx_kp_s_SCANSparsifier_A_sparsifiier_de
#define __pyx_n_s_SCANSparsifier__getParameterizat __pyx_mstate_global->__pyx_n_s_SCANSparsifier__getParameterizat
#define __pyx_n_s_SCANSparsifier__getSparsifiedGra __pyx_mstate_global->__pyx_n_s_SCANSparsifier__getSparsifiedGra
#define __pyx_n_s_SCANSparsifier_scores __pyx_mstate_global->__pyx_n_s_SCANSparsifier_scores
#define __pyx_n_s_SCANStructuralSimilarityScore __pyx_mstate_global->__pyx_n_s_SCANStructuralSimilarityScore
#define __pyx_n_s_SCANStructuralSimilarityScore_2 __pyx_mstate_global->__pyx_n_s_SCANStructuralSimilarityScore_2
#define __pyx_n_s_SCANStructuralSimilarityScore_3 __pyx_mstate_global->__pyx_n_s_SCANStructuralSimilarityScore_3
#define __pyx_n_s_SimmelianMultiscaleSparsifier __pyx_mstate_global->__pyx_n_s_SimmelianMultiscaleSparsifier
#define __pyx_kp_s_SimmelianMultiscaleSparsifier_M __pyx_mstate_global->__pyx_kp_s_SimmelianMultiscaleSparsifier_M
#define __pyx_n_s_SimmelianMultiscaleSparsifier__g __pyx_mstate_global->__pyx_n_s_SimmelianMultiscaleSparsifier__g
#define __pyx_n_s_SimmelianMultiscaleSparsifier__g_2 __pyx_mstate_global->__pyx_n_s_SimmelianMultiscaleSparsifier__g_2
#define __pyx_n_s_SimmelianMultiscaleSparsifier_sc __pyx_mstate_global->__pyx_n_s_SimmelianMultiscaleSparsifier_sc
#define __pyx_n_s_SimmelianOverlapScore __pyx_mstate_global->__pyx_n_s_SimmelianOverlapScore
#define __pyx_n_s_SimmelianOverlapScore___reduce_c __pyx_mstate_global->__pyx_n_s_SimmelianOverlapScore___reduce_c
#define __pyx_n_s_SimmelianOverlapScore___setstate __pyx_mstate_global->__pyx_n_s_SimmelianOverlapScore___setstate
#define __pyx_kp_s_SimmelianSparsifierNonParametri __pyx_mstate_global->__pyx_kp_s_SimmelianSparsifierNonParametri
#define __pyx_n_s_SimmelianSparsifierNonParametric __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierNonParametric
#define __pyx_n_s_SimmelianSparsifierNonParametric_2 __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierNonParametric_2
#define __pyx_n_s_SimmelianSparsifierNonParametric_3 __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierNonParametric_3
#define __pyx_n_s_SimmelianSparsifierNonParametric_4 __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierNonParametric_4
#define __pyx_n_s_SimmelianSparsifierParametric __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierParametric
#define __pyx_n_s_SimmelianSparsifierParametric_2 __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierParametric_2
#define __pyx_kp_s_SimmelianSparsifierParametric_A __pyx_mstate_global->__pyx_kp_s_SimmelianSparsifierParametric_A
#define __pyx_n_s_SimmelianSparsifierParametric__g __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierParametric__g
#define __pyx_n_s_SimmelianSparsifierParametric__g_2 __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierParametric__g_2
#define __pyx_n_s_SimmelianSparsifierParametric_sc __pyx_mstate_global->__pyx_n_s_SimmelianSparsifierParametric_sc
#define __pyx_n_s_SimpleParameterization __pyx_mstate_global->__pyx_n_s_SimpleParameterization
#define __pyx_kp_s_SimpleParameterization_A_parame __pyx_mstate_global->__pyx_kp_s_SimpleParameterization_A_parame
#define __pyx_n_s_SimpleParameterization_parameter __pyx_mstate_global->__pyx_n_s_SimpleParameterization_parameter
#define __pyx_n_s_Sparsifier __pyx_mstate_global->__pyx_n_s_Sparsifier
#define __pyx_n_s_Sparsifier__getParameterizationA __pyx_mstate_global->__pyx_n_s_Sparsifier__getParameterizationA
#define __pyx_n_s_Sparsifier__getSparsifiedGraph __pyx_mstate_global->__pyx_n_s_Sparsifier__getSparsifiedGraph
#define __pyx_n_s_Sparsifier_getParameter __pyx_mstate_global->__pyx_n_s_Sparsifier_getParameter
#define __pyx_n_s_Sparsifier_getSparsifiedGraph __pyx_mstate_global->__pyx_n_s_Sparsifier_getSparsifiedGraph
#define __pyx_n_s_Sparsifier_getSparsifiedGraphOfS __pyx_mstate_global->__pyx_n_s_Sparsifier_getSparsifiedGraphOfS
#define __pyx_n_s_Sparsifier_scores __pyx_mstate_global->__pyx_n_s_Sparsifier_scores
#define __pyx_n_s_TriangleEdgeScore __pyx_mstate_global->__pyx_n_s_TriangleEdgeScore
#define __pyx_n_s_TriangleEdgeScore___reduce_cytho __pyx_mstate_global->__pyx_n_s_TriangleEdgeScore___reduce_cytho
#define __pyx_n_s_TriangleEdgeScore___setstate_cyt __pyx_mstate_global->__pyx_n_s_TriangleEdgeScore___setstate_cyt
#define __pyx_n_s_TriangleSparsifier __pyx_mstate_global->__pyx_n_s_TriangleSparsifier
#define __pyx_kp_s_TriangleSparsifier_Allows_for_g __pyx_mstate_global->__pyx_kp_s_TriangleSparsifier_Allows_for_g
#define __pyx_n_s_TriangleSparsifier__getParameter __pyx_mstate_global->__pyx_n_s_TriangleSparsifier__getParameter
#define __pyx_n_s_TriangleSparsifier__getSparsifie __pyx_mstate_global->__pyx_n_s_TriangleSparsifier__getSparsifie
#define __pyx_n_s_TriangleSparsifier_scores __pyx_mstate_global->__pyx_n_s_TriangleSparsifier_scores
#define __pyx_n_s_TypeError __pyx_mstate_global->__pyx_n_s_TypeError
#define __pyx_n_s__10 __pyx_mstate_global->__pyx_n_s__10
#define __pyx_n_s__171 __pyx_mstate_global->__pyx_n_s__171
#define __pyx_kp_u__9 __pyx_mstate_global->__pyx_kp_u__9
#define __pyx_n_s_a __pyx_mstate_global->__pyx_n_s_a
#define __pyx_n_s_a_ms __pyx_mstate_global->__pyx_n_s_a_ms
#define __pyx_n_s_a_sj __pyx_mstate_global->__pyx_n_s_a_sj
#define __pyx_n_s_a_triangles __pyx_mstate_global->__pyx_n_s_a_triangles
#define __pyx_n_s_above __pyx_mstate_global->__pyx_n_s_above
#define __pyx_n_s_algDist __pyx_mstate_global->__pyx_n_s_algDist
#define __pyx_n_s_algorithm __pyx_mstate_global->__pyx_n_s_algorithm
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_attribute __pyx_mstate_global->__pyx_n_s_attribute
#define __pyx_n_s_attribute0 __pyx_mstate_global->__pyx_n_s_attribute0
#define __pyx_n_s_attribute1 __pyx_mstate_global->__pyx_n_s_attribute1
#define __pyx_n_s_attribute_2 __pyx_mstate_global->__pyx_n_s_attribute_2
#define __pyx_n_s_bestParameter __pyx_mstate_global->__pyx_n_s_bestParameter
#define __pyx_n_s_bestRatio __pyx_mstate_global->__pyx_n_s_bestRatio
#define __pyx_n_s_burnProbability __pyx_mstate_global->__pyx_n_s_burnProbability
#define __pyx_n_s_calculate __pyx_mstate_global->__pyx_n_s_calculate
#define __pyx_n_s_cdAlgo __pyx_mstate_global->__pyx_n_s_cdAlgo
#define __pyx_n_s_class_getitem __pyx_mstate_global->__pyx_n_s_class_getitem
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_community __pyx_mstate_global->__pyx_n_s_community
#define __pyx_n_s_constValue __pyx_mstate_global->__pyx_n_s_constValue
#define __pyx_n_s_currentEdgeRatio __pyx_mstate_global->__pyx_n_s_currentEdgeRatio
#define __pyx_n_s_d __pyx_mstate_global->__pyx_n_s_d
#define __pyx_n_s_degree __pyx_mstate_global->__pyx_n_s_degree
#define __pyx_n_s_degsToAttrValue __pyx_mstate_global->__pyx_n_s_degsToAttrValue
#define __pyx_n_s_dict __pyx_mstate_global->__pyx_n_s_dict
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_distance __pyx_mstate_global->__pyx_n_s_distance
#define __pyx_n_s_doc __pyx_mstate_global->__pyx_n_s_doc
#define __pyx_n_s_e __pyx_mstate_global->__pyx_n_s_e
#define __pyx_n_s_edgeId __pyx_mstate_global->__pyx_n_s_edgeId
#define __pyx_n_s_edgeRatio __pyx_mstate_global->__pyx_n_s_edgeRatio
#define __pyx_n_s_edgeScores __pyx_mstate_global->__pyx_n_s_edgeScores
#define __pyx_n_s_eid __pyx_mstate_global->__pyx_n_s_eid
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_estimation __pyx_mstate_global->__pyx_n_s_estimation
#define __pyx_n_s_factor __pyx_mstate_global->__pyx_n_s_factor
#define __pyx_n_s_ffScore __pyx_mstate_global->__pyx_n_s_ffScore
#define __pyx_n_s_forEdges __pyx_mstate_global->__pyx_n_s_forEdges
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_getAttribute __pyx_mstate_global->__pyx_n_s_getAttribute
#define __pyx_n_s_getEdgeScores __pyx_mstate_global->__pyx_n_s_getEdgeScores
#define __pyx_n_s_getParameter __pyx_mstate_global->__pyx_n_s_getParameter
#define __pyx_n_s_getParameterizationAlgorithm __pyx_mstate_global->__pyx_n_s_getParameterizationAlgorithm
#define __pyx_n_s_getPartition __pyx_mstate_global->__pyx_n_s_getPartition
#define __pyx_n_s_getRankAttribute __pyx_mstate_global->__pyx_n_s_getRankAttribute
#define __pyx_n_s_getRankAttribute_locals_lambda __pyx_mstate_global->__pyx_n_s_getRankAttribute_locals_lambda
#define __pyx_n_s_getSparsifiedGraph __pyx_mstate_global->__pyx_n_s_getSparsifiedGraph
#define __pyx_n_s_getSparsifiedGraphOfSize __pyx_mstate_global->__pyx_n_s_getSparsifiedGraphOfSize
#define __pyx_n_s_getSparsifiedGraph_2 __pyx_mstate_global->__pyx_n_s_getSparsifiedGraph_2
#define __pyx_n_s_getWeightedGraph __pyx_mstate_global->__pyx_n_s_getWeightedGraph
#define __pyx_n_s_getstate __pyx_mstate_global->__pyx_n_s_getstate
#define __pyx_n_s_gf __pyx_mstate_global->__pyx_n_s_gf
#define __pyx_n_s_i __pyx_mstate_global->__pyx_n_s_i
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_increase __pyx_mstate_global->__pyx_n_s_increase
#define __pyx_n_s_index __pyx_mstate_global->__pyx_n_s_index
#define __pyx_n_s_init __pyx_mstate_global->__pyx_n_s_init
#define __pyx_n_s_init_subclass __pyx_mstate_global->__pyx_n_s_init_subclass
#define __pyx_n_s_inputAttribute __pyx_mstate_global->__pyx_n_s_inputAttribute
#define __pyx_n_s_inverse __pyx_mstate_global->__pyx_n_s_inverse
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_iterEdges __pyx_mstate_global->__pyx_n_s_iterEdges
#define __pyx_n_s_iterEdgesWeights __pyx_mstate_global->__pyx_n_s_iterEdgesWeights
#define __pyx_n_s_key __pyx_mstate_global->__pyx_n_s_key
#define __pyx_n_s_localDegree __pyx_mstate_global->__pyx_n_s_localDegree
#define __pyx_n_s_localDegreeScore __pyx_mstate_global->__pyx_n_s_localDegreeScore
#define __pyx_n_s_localFilterScore __pyx_mstate_global->__pyx_n_s_localFilterScore
#define __pyx_n_s_localSimScore __pyx_mstate_global->__pyx_n_s_localSimScore
#define __pyx_n_s_logarithmic __pyx_mstate_global->__pyx_n_s_logarithmic
#define __pyx_n_s_lower __pyx_mstate_global->__pyx_n_s_lower
#define __pyx_n_s_lowerBound __pyx_mstate_global->__pyx_n_s_lowerBound
#define __pyx_n_s_lowerParameterBound __pyx_mstate_global->__pyx_n_s_lowerParameterBound
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_maxRank __pyx_mstate_global->__pyx_n_s_maxRank
#define __pyx_n_s_maxSteps __pyx_mstate_global->__pyx_n_s_maxSteps
#define __pyx_n_s_meanQuadrangles __pyx_mstate_global->__pyx_n_s_meanQuadrangles
#define __pyx_n_s_metaclass __pyx_mstate_global->__pyx_n_s_metaclass
#define __pyx_n_s_minDistance __pyx_mstate_global->__pyx_n_s_minDistance
#define __pyx_n_s_module __pyx_mstate_global->__pyx_n_s_module
#define __pyx_n_s_mro_entries __pyx_mstate_global->__pyx_n_s_mro_entries
#define __pyx_n_s_ms __pyx_mstate_global->__pyx_n_s_ms
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_networkit_sparsification __pyx_mstate_global->__pyx_n_s_networkit_sparsification
#define __pyx_kp_s_networkit_sparsification_pyx __pyx_mstate_global->__pyx_kp_s_networkit_sparsification_pyx
#define __pyx_kp_s_no_default___reduce___due_to_non __pyx_mstate_global->__pyx_kp_s_no_default___reduce___due_to_non
#define __pyx_kp_u_none_randomized __pyx_mstate_global->__pyx_kp_u_none_randomized
#define __pyx_n_s_norm __pyx_mstate_global->__pyx_n_s_norm
#define __pyx_n_s_numberIterations __pyx_mstate_global->__pyx_n_s_numberIterations
#define __pyx_n_s_numberOfEdges __pyx_mstate_global->__pyx_n_s_numberOfEdges
#define __pyx_n_s_numberSystems __pyx_mstate_global->__pyx_n_s_numberSystems
#define __pyx_n_s_object __pyx_mstate_global->__pyx_n_s_object
#define __pyx_n_s_offset __pyx_mstate_global->__pyx_n_s_offset
#define __pyx_n_s_omega __pyx_mstate_global->__pyx_n_s_omega
#define __pyx_n_s_originalScores __pyx_mstate_global->__pyx_n_s_originalScores
#define __pyx_n_s_par __pyx_mstate_global->__pyx_n_s_par
#define __pyx_n_s_paramAlgorithm __pyx_mstate_global->__pyx_n_s_paramAlgorithm
#define __pyx_n_s_parameter __pyx_mstate_global->__pyx_n_s_parameter
#define __pyx_kp_u_parameterization_method_not_yet __pyx_mstate_global->__pyx_kp_u_parameterization_method_not_yet
#define __pyx_n_s_parameterize __pyx_mstate_global->__pyx_n_s_parameterize
#define __pyx_n_s_partition __pyx_mstate_global->__pyx_n_s_partition
#define __pyx_n_s_pf __pyx_mstate_global->__pyx_n_s_pf
#define __pyx_n_s_prepare __pyx_mstate_global->__pyx_n_s_prepare
#define __pyx_n_s_preprocess __pyx_mstate_global->__pyx_n_s_preprocess
#define __pyx_n_s_pyx_state __pyx_mstate_global->__pyx_n_s_pyx_state
#define __pyx_n_s_pyx_vtable __pyx_mstate_global->__pyx_n_s_pyx_vtable
#define __pyx_n_s_quadranglePrefixJaccard __pyx_mstate_global->__pyx_n_s_quadranglePrefixJaccard
#define __pyx_n_s_quadrangles __pyx_mstate_global->__pyx_n_s_quadrangles
#define __pyx_n_s_qualname __pyx_mstate_global->__pyx_n_s_qualname
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_reScore __pyx_mstate_global->__pyx_n_s_reScore
#define __pyx_n_s_reduce __pyx_mstate_global->__pyx_n_s_reduce
#define __pyx_n_s_reduce_cython __pyx_mstate_global->__pyx_n_s_reduce_cython
#define __pyx_n_s_reduce_ex __pyx_mstate_global->__pyx_n_s_reduce_ex
#define __pyx_n_s_refine __pyx_mstate_global->__pyx_n_s_refine
#define __pyx_n_s_result __pyx_mstate_global->__pyx_n_s_result
#define __pyx_n_s_reverse __pyx_mstate_global->__pyx_n_s_reverse
#define __pyx_n_s_rneScore __pyx_mstate_global->__pyx_n_s_rneScore
#define __pyx_n_s_run __pyx_mstate_global->__pyx_n_s_run
#define __pyx_n_s_scanScore __pyx_mstate_global->__pyx_n_s_scanScore
#define __pyx_n_s_score __pyx_mstate_global->__pyx_n_s_score
#define __pyx_kp_u_score_must_be_either_a_vector_of __pyx_mstate_global->__pyx_kp_u_score_must_be_either_a_vector_of
#define __pyx_n_s_scorer __pyx_mstate_global->__pyx_n_s_scorer
#define __pyx_n_s_scores __pyx_mstate_global->__pyx_n_s_scores
#define __pyx_n_s_selection __pyx_mstate_global->__pyx_n_s_selection
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_kp_s_self__this_cannot_be_converted_t __pyx_mstate_global->__pyx_kp_s_self__this_cannot_be_converted_t
#define __pyx_n_s_set_name __pyx_mstate_global->__pyx_n_s_set_name
#define __pyx_n_s_setitem __pyx_mstate_global->__pyx_n_s_setitem
#define __pyx_n_s_setstate __pyx_mstate_global->__pyx_n_s_setstate
#define __pyx_n_s_setstate_cython __pyx_mstate_global->__pyx_n_s_setstate_cython
#define __pyx_n_s_simmelianOverlap __pyx_mstate_global->__pyx_n_s_simmelianOverlap
#define __pyx_n_s_sizeIncreasesWithParameter __pyx_mstate_global->__pyx_n_s_sizeIncreasesWithParameter
#define __pyx_n_s_sorted __pyx_mstate_global->__pyx_n_s_sorted
#define __pyx_n_s_sparsified __pyx_mstate_global->__pyx_n_s_sparsified
#define __pyx_n_s_sparsifier __pyx_mstate_global->__pyx_n_s_sparsifier
#define __pyx_n_s_squared __pyx_mstate_global->__pyx_n_s_squared
#define __pyx_kp_s_stringsource __pyx_mstate_global->__pyx_kp_s_stringsource
#define __pyx_n_s_super __pyx_mstate_global->__pyx_n_s_super
#define __pyx_n_s_targetBurntRatio __pyx_mstate_global->__pyx_n_s_targetBurntRatio
#define __pyx_n_s_tebr __pyx_mstate_global->__pyx_n_s_tebr
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_together __pyx_mstate_global->__pyx_n_s_together
#define __pyx_n_s_triangleScore __pyx_mstate_global->__pyx_n_s_triangleScore
#define __pyx_n_s_triangles __pyx_mstate_global->__pyx_n_s_triangles
#define __pyx_n_s_turbo __pyx_mstate_global->__pyx_n_s_turbo
#define __pyx_n_s_u __pyx_mstate_global->__pyx_n_s_u
#define __pyx_n_s_upper __pyx_mstate_global->__pyx_n_s_upper
#define __pyx_n_s_upperBound __pyx_mstate_global->__pyx_n_s_upperBound
#define __pyx_n_s_upperEdgeIdBound __pyx_mstate_global->__pyx_n_s_upperEdgeIdBound
#define __pyx_n_s_upperParameterBound __pyx_mstate_global->__pyx_n_s_upperParameterBound
#define __pyx_n_s_v __pyx_mstate_global->__pyx_n_s_v
#define __pyx_n_s_w __pyx_mstate_global->__pyx_n_s_w
#define __pyx_n_s_withEdgeScores __pyx_mstate_global->__pyx_n_s_withEdgeScores
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_zip __pyx_mstate_global->__pyx_n_s_zip
#define __pyx_float_0_0 __pyx_mstate_global->__pyx_float_0_0
#define __pyx_float_0_5 __pyx_mstate_global->__pyx_float_0_5
#define __pyx_float_1_0 __pyx_mstate_global->__pyx_float_1_0
#define __pyx_float_2_0 __pyx_mstate_global->__pyx_float_2_0
#define __pyx_float_1eneg_7 __pyx_mstate_global->__pyx_float_1eneg_7
#define __pyx_float_100_0 __pyx_mstate_global->__pyx_float_100_0
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_10 __pyx_mstate_global->__pyx_int_10
#define __pyx_int_20 __pyx_mstate_global->__pyx_int_20
#define __pyx_int_30 __pyx_mstate_global->__pyx_int_30
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__3 __pyx_mstate_global->__pyx_tuple__3
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__61 __pyx_mstate_global->__pyx_tuple__61
#define __pyx_tuple__62 __pyx_mstate_global->__pyx_tuple__62
#define __pyx_tuple__63 __pyx_mstate_global->__pyx_tuple__63
#define __pyx_tuple__65 __pyx_mstate_global->__pyx_tuple__65
#define __pyx_tuple__69 __pyx_mstate_global->__pyx_tuple__69
#define __pyx_tuple__71 __pyx_mstate_global->__pyx_tuple__71
#define __pyx_tuple__73 __pyx_mstate_global->__pyx_tuple__73
#define __pyx_tuple__75 __pyx_mstate_global->__pyx_tuple__75
#define __pyx_tuple__77 __pyx_mstate_global->__pyx_tuple__77
#define __pyx_tuple__79 __pyx_mstate_global->__pyx_tuple__79
#define __pyx_tuple__81 __pyx_mstate_global->__pyx_tuple__81
#define __pyx_tuple__83 __pyx_mstate_global->__pyx_tuple__83
#define __pyx_tuple__85 __pyx_mstate_global->__pyx_tuple__85
#define __pyx_tuple__86 __pyx_mstate_global->__pyx_tuple__86
#define __pyx_tuple__88 __pyx_mstate_global->__pyx_tuple__88
#define __pyx_tuple__90 __pyx_mstate_global->__pyx_tuple__90
#define __pyx_tuple__93 __pyx_mstate_global->__pyx_tuple__93
#define __pyx_tuple__97 __pyx_mstate_global->__pyx_tuple__97
#define __pyx_codeobj__8 __pyx_mstate_global->__pyx_codeobj__8
#define __pyx_tuple__101 __pyx_mstate_global->__pyx_tuple__101
#define __pyx_tuple__105 __pyx_mstate_global->__pyx_tuple__105
#define __pyx_tuple__107 __pyx_mstate_global->__pyx_tuple__107
#define __pyx_tuple__111 __pyx_mstate_global->__pyx_tuple__111
#define __pyx_tuple__115 __pyx_mstate_global->__pyx_tuple__115
#define __pyx_tuple__119 __pyx_mstate_global->__pyx_tuple__119
#define __pyx_tuple__123 __pyx_mstate_global->__pyx_tuple__123
#define __pyx_tuple__127 __pyx_mstate_global->__pyx_tuple__127
#define __pyx_tuple__129 __pyx_mstate_global->__pyx_tuple__129
#define __pyx_tuple__130 __pyx_mstate_global->__pyx_tuple__130
#define __pyx_tuple__134 __pyx_mstate_global->__pyx_tuple__134
#define __pyx_tuple__136 __pyx_mstate_global->__pyx_tuple__136
#define __pyx_tuple__140 __pyx_mstate_global->__pyx_tuple__140
#define __pyx_tuple__144 __pyx_mstate_global->__pyx_tuple__144
#define __pyx_tuple__148 __pyx_mstate_global->__pyx_tuple__148
#define __pyx_tuple__152 __pyx_mstate_global->__pyx_tuple__152
#define __pyx_tuple__154 __pyx_mstate_global->__pyx_tuple__154
#define __pyx_tuple__155 __pyx_mstate_global->__pyx_tuple__155
#define __pyx_tuple__159 __pyx_mstate_global->__pyx_tuple__159
#define __pyx_tuple__161 __pyx_mstate_global->__pyx_tuple__161
#define __pyx_tuple__165 __pyx_mstate_global->__pyx_tuple__165
#define __pyx_tuple__167 __pyx_mstate_global->__pyx_tuple__167
#define __pyx_tuple__169 __pyx_mstate_global->__pyx_tuple__169
#define __pyx_codeobj__12 __pyx_mstate_global->__pyx_codeobj__12
#define __pyx_codeobj__15 __pyx_mstate_global->__pyx_codeobj__15
#define __pyx_codeobj__16 __pyx_mstate_global->__pyx_codeobj__16
#define __pyx_codeobj__18 __pyx_mstate_global->__pyx_codeobj__18
#define __pyx_codeobj__19 __pyx_mstate_global->__pyx_codeobj__19
#define __pyx_codeobj__20 __pyx_mstate_global->__pyx_codeobj__20
#define __pyx_codeobj__21 __pyx_mstate_global->__pyx_codeobj__21
#define __pyx_codeobj__22 __pyx_mstate_global->__pyx_codeobj__22
#define __pyx_codeobj__23 __pyx_mstate_global->__pyx_codeobj__23
#define __pyx_codeobj__24 __pyx_mstate_global->__pyx_codeobj__24
#define __pyx_codeobj__25 __pyx_mstate_global->__pyx_codeobj__25
#define __pyx_codeobj__26 __pyx_mstate_global->__pyx_codeobj__26
#define __pyx_codeobj__27 __pyx_mstate_global->__pyx_codeobj__27
#define __pyx_codeobj__28 __pyx_mstate_global->__pyx_codeobj__28
#define __pyx_codeobj__29 __pyx_mstate_global->__pyx_codeobj__29
#define __pyx_codeobj__30 __pyx_mstate_global->__pyx_codeobj__30
#define __pyx_codeobj__31 __pyx_mstate_global->__pyx_codeobj__31
#define __pyx_codeobj__32 __pyx_mstate_global->__pyx_codeobj__32
#define __pyx_codeobj__33 __pyx_mstate_global->__pyx_codeobj__33
#define __pyx_codeobj__34 __pyx_mstate_global->__pyx_codeobj__34
#define __pyx_codeobj__35 __pyx_mstate_global->__pyx_codeobj__35
#define __pyx_codeobj__36 __pyx_mstate_global->__pyx_codeobj__36
#define __pyx_codeobj__37 __pyx_mstate_global->__pyx_codeobj__37
#define __pyx_codeobj__38 __pyx_mstate_global->__pyx_codeobj__38
#define __pyx_codeobj__39 __pyx_mstate_global->__pyx_codeobj__39
#define __pyx_codeobj__40 __pyx_mstate_global->__pyx_codeobj__40
#define __pyx_codeobj__41 __pyx_mstate_global->__pyx_codeobj__41
#define __pyx_codeobj__42 __pyx_mstate_global->__pyx_codeobj__42
#define __pyx_codeobj__43 __pyx_mstate_global->__pyx_codeobj__43
#define __pyx_codeobj__44 __pyx_mstate_global->__pyx_codeobj__44
#define __pyx_codeobj__45 __pyx_mstate_global->__pyx_codeobj__45
#define __pyx_codeobj__46 __pyx_mstate_global->__pyx_codeobj__46
#define __pyx_codeobj__47 __pyx_mstate_global->__pyx_codeobj__47
#define __pyx_codeobj__48 __pyx_mstate_global->__pyx_codeobj__48
#define __pyx_codeobj__49 __pyx_mstate_global->__pyx_codeobj__49
#define __pyx_codeobj__50 __pyx_mstate_global->__pyx_codeobj__50
#define __pyx_codeobj__51 __pyx_mstate_global->__pyx_codeobj__51
#define __pyx_codeobj__52 __pyx_mstate_global->__pyx_codeobj__52
#define __pyx_codeobj__53 __pyx_mstate_global->__pyx_codeobj__53
#define __pyx_codeobj__54 __pyx_mstate_global->__pyx_codeobj__54
#define __pyx_codeobj__55 __pyx_mstate_global->__pyx_codeobj__55
#define __pyx_codeobj__56 __pyx_mstate_global->__pyx_codeobj__56
#define __pyx_codeobj__57 __pyx_mstate_global->__pyx_codeobj__57
#define __pyx_codeobj__58 __pyx_mstate_global->__pyx_codeobj__58
#define __pyx_codeobj__59 __pyx_mstate_global->__pyx_codeobj__59
#define __pyx_codeobj__60 __pyx_mstate_global->__pyx_codeobj__60
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__67 __pyx_mstate_global->__pyx_codeobj__67
#define __pyx_codeobj__68 __pyx_mstate_global->__pyx_codeobj__68
#define __pyx_codeobj__70 __pyx_mstate_global->__pyx_codeobj__70
#define __pyx_codeobj__72 __pyx_mstate_global->__pyx_codeobj__72
#define __pyx_codeobj__74 __pyx_mstate_global->__pyx_codeobj__74
#define __pyx_codeobj__76 __pyx_mstate_global->__pyx_codeobj__76
#define __pyx_codeobj__78 __pyx_mstate_global->__pyx_codeobj__78
#define __pyx_codeobj__80 __pyx_mstate_global->__pyx_codeobj__80
#define __pyx_codeobj__82 __pyx_mstate_global->__pyx_codeobj__82
#define __pyx_codeobj__84 __pyx_mstate_global->__pyx_codeobj__84
#define __pyx_codeobj__87 __pyx_mstate_global->__pyx_codeobj__87
#define __pyx_codeobj__89 __pyx_mstate_global->__pyx_codeobj__89
#define __pyx_codeobj__91 __pyx_mstate_global->__pyx_codeobj__91
#define __pyx_codeobj__92 __pyx_mstate_global->__pyx_codeobj__92
#define __pyx_codeobj__94 __pyx_mstate_global->__pyx_codeobj__94
#define __pyx_codeobj__95 __pyx_mstate_global->__pyx_codeobj__95
#define __pyx_codeobj__96 __pyx_mstate_global->__pyx_codeobj__96
#define __pyx_codeobj__98 __pyx_mstate_global->__pyx_codeobj__98
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__100 __pyx_mstate_global->__pyx_codeobj__100
#define __pyx_codeobj__102 __pyx_mstate_global->__pyx_codeobj__102
#define __pyx_codeobj__103 __pyx_mstate_global->__pyx_codeobj__103
#define __pyx_codeobj__104 __pyx_mstate_global->__pyx_codeobj__104
#define __pyx_codeobj__106 __pyx_mstate_global->__pyx_codeobj__106
#define __pyx_codeobj__108 __pyx_mstate_global->__pyx_codeobj__108
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
#define __pyx_codeobj__110 __pyx_mstate_global->__pyx_codeobj__110
#define __pyx_codeobj__112 __pyx_mstate_global->__pyx_codeobj__112
#define __pyx_codeobj__113 __pyx_mstate_global->__pyx_codeobj__113
#define __pyx_codeobj__114 __pyx_mstate_global->__pyx_codeobj__114
#define __pyx_codeobj__116 __pyx_mstate_global->__pyx_codeobj__116
#define __pyx_codeobj__117 __pyx_mstate_global->__pyx_codeobj__117
#define __pyx_codeobj__118 __pyx_mstate_global->__pyx_codeobj__118
#define __pyx_codeobj__120 __pyx_mstate_global->__pyx_codeobj__120
#define __pyx_codeobj__121 __pyx_mstate_global->__pyx_codeobj__121
#define __pyx_codeobj__122 __pyx_mstate_global->__pyx_codeobj__122
#define __pyx_codeobj__124 __pyx_mstate_global->__pyx_codeobj__124
#define __pyx_codeobj__125 __pyx_mstate_global->__pyx_codeobj__125
#define __pyx_codeobj__126 __pyx_mstate_global->__pyx_codeobj__126
#define __pyx_codeobj__128 __pyx_mstate_global->__pyx_codeobj__128
#define __pyx_codeobj__131 __pyx_mstate_global->__pyx_codeobj__131
#define __pyx_codeobj__132 __pyx_mstate_global->__pyx_codeobj__132
#define __pyx_codeobj__133 __pyx_mstate_global->__pyx_codeobj__133
#define __pyx_codeobj__135 __pyx_mstate_global->__pyx_codeobj__135
#define __pyx_codeobj__137 __pyx_mstate_global->__pyx_codeobj__137
#define __pyx_codeobj__138 __pyx_mstate_global->__pyx_codeobj__138
#define __pyx_codeobj__139 __pyx_mstate_global->__pyx_codeobj__139
#define __pyx_codeobj__141 __pyx_mstate_global->__pyx_codeobj__141
#define __pyx_codeobj__142 __pyx_mstate_global->__pyx_codeobj__142
#define __pyx_codeobj__143 __pyx_mstate_global->__pyx_codeobj__143
#define __pyx_codeobj__145 __pyx_mstate_global->__pyx_codeobj__145
#define __pyx_codeobj__146 __pyx_mstate_global->__pyx_codeobj__146
#define __pyx_codeobj__147 __pyx_mstate_global->__pyx_codeobj__147
#define __pyx_codeobj__149 __pyx_mstate_global->__pyx_codeobj__149
#define __pyx_codeobj__150 __pyx_mstate_global->__pyx_codeobj__150
#define __pyx_codeobj__151 __pyx_mstate_global->__pyx_codeobj__151
#define __pyx_codeobj__153 __pyx_mstate_global->__pyx_codeobj__153
#define __pyx_codeobj__156 __pyx_mstate_global->__pyx_codeobj__156
#define __pyx_codeobj__157 __pyx_mstate_global->__pyx_codeobj__157
#define __pyx_codeobj__158 __pyx_mstate_global->__pyx_codeobj__158
#define __pyx_codeobj__160 __pyx_mstate_global->__pyx_codeobj__160
#define __pyx_codeobj__162 __pyx_mstate_global->__pyx_codeobj__162
#define __pyx_codeobj__163 __pyx_mstate_global->__pyx_codeobj__163
#define __pyx_codeobj__164 __pyx_mstate_global->__pyx_codeobj__164
#define __pyx_codeobj__166 __pyx_mstate_global->__pyx_codeobj__166
#define __pyx_codeobj__168 __pyx_mstate_global->__pyx_codeobj__168
#define __pyx_codeobj__170 __pyx_mstate_global->__pyx_codeobj__170
/* #### Code section: module_code ### */

/* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

static std::vector<double>  __pyx_convert_vector_from_py_double(PyObject *__pyx_v_o) {
  std::vector<double>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<double>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_double", 1);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_item); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    try {
      __pyx_v_v.push_back(((double)__pyx_t_5));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(1, 48, __pyx_L1_error)
    }

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_double")
 * cdef vector[X] __pyx_convert_vector_from_py_double(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<bool>  __pyx_convert_vector_from_py_bool(PyObject *__pyx_v_o) {
  std::vector<bool>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<bool>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  bool __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py_bool", 1);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_bool(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_item); if (unlikely((__pyx_t_5 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    try {
      __pyx_v_v.push_back(((bool)__pyx_t_5));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(1, 48, __pyx_L1_error)
    }

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py_bool(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py_bool")
 * cdef vector[X] __pyx_convert_vector_from_py_bool(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py_bool", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static std::vector<__pyx_t_9networkit_10structures_count>  __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(PyObject *__pyx_v_o) {
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_v;
  PyObject *__pyx_v_item = NULL;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_9networkit_10structures_count __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count", 1);

  /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  if (likely(PyList_CheckExact(__pyx_v_o)) || PyTuple_CheckExact(__pyx_v_o)) {
    __pyx_t_1 = __pyx_v_o; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_o); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 47, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(1, 47, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 47, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 47, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "vector.from_py":48
 *     cdef vector[X] v
 *     for item in o:
 *         v.push_back(<X>item)             # <<<<<<<<<<<<<<
 *     return v
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_As_uint64_t(__pyx_v_item); if (unlikely((__pyx_t_5 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 48, __pyx_L1_error)
    try {
      __pyx_v_v.push_back(((__pyx_t_9networkit_10structures_count)__pyx_t_5));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(1, 48, __pyx_L1_error)
    }

    /* "vector.from_py":47
 * cdef vector[X] __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(object o) except *:
 *     cdef vector[X] v
 *     for item in o:             # <<<<<<<<<<<<<<
 *         v.push_back(<X>item)
 *     return v
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "vector.from_py":49
 *     for item in o:
 *         v.push_back(<X>item)
 *     return v             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_v;
  goto __pyx_L0;

  /* "vector.from_py":45
 * 
 * @cname("__pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count")
 * cdef vector[X] __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef vector[X] v
 *     for item in o:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("vector.from_py.__pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

static PyObject *__pyx_convert_vector_to_py_double(std::vector<double>  const &__pyx_v_v) {
  Py_ssize_t __pyx_v_v_size_signed;
  PyObject *__pyx_v_o = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 1);

  /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  __pyx_t_1 = (__pyx_v_v.size() > ((size_t)PY_SSIZE_T_MAX));
  if (unlikely(__pyx_t_1)) {

    /* "vector.to_py":68
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()             # <<<<<<<<<<<<<<
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 */
    PyErr_NoMemory(); __PYX_ERR(1, 68, __pyx_L1_error)

    /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  }

  /* "vector.to_py":69
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()             # <<<<<<<<<<<<<<
 * 
 *     o = PyList_New(v_size_signed)
 */
  __pyx_v_v_size_signed = ((Py_ssize_t)__pyx_v_v.size());

  /* "vector.to_py":71
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 *     o = PyList_New(v_size_signed)             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t i
 */
  __pyx_t_2 = PyList_New(__pyx_v_v_size_signed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_o = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "vector.to_py":76
 *     cdef object item
 * 
 *     for i in range(v_size_signed):             # <<<<<<<<<<<<<<
 *         item = v[i]
 *         Py_INCREF(item)
 */
  __pyx_t_3 = __pyx_v_v_size_signed;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "vector.to_py":77
 * 
 *     for i in range(v_size_signed):
 *         item = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)
 */
    __pyx_t_2 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "vector.to_py":78
 *     for i in range(v_size_signed):
 *         item = v[i]
 *         Py_INCREF(item)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(o, i, item)
 * 
 */
    Py_INCREF(__pyx_v_item);

    /* "vector.to_py":79
 *         item = v[i]
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)             # <<<<<<<<<<<<<<
 * 
 *     return o
 */
    PyList_SET_ITEM(__pyx_v_o, __pyx_v_i, __pyx_v_item);
  }

  /* "vector.to_py":81
 *         PyList_SET_ITEM(o, i, item)
 * 
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(std::vector<__pyx_t_9networkit_10structures_count>  const &__pyx_v_v) {
  Py_ssize_t __pyx_v_v_size_signed;
  PyObject *__pyx_v_o = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count", 1);

  /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count")
 * cdef object __pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  __pyx_t_1 = (__pyx_v_v.size() > ((size_t)PY_SSIZE_T_MAX));
  if (unlikely(__pyx_t_1)) {

    /* "vector.to_py":68
 * cdef object __pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()             # <<<<<<<<<<<<<<
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 */
    PyErr_NoMemory(); __PYX_ERR(1, 68, __pyx_L1_error)

    /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count")
 * cdef object __pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  }

  /* "vector.to_py":69
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()             # <<<<<<<<<<<<<<
 * 
 *     o = PyList_New(v_size_signed)
 */
  __pyx_v_v_size_signed = ((Py_ssize_t)__pyx_v_v.size());

  /* "vector.to_py":71
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 *     o = PyList_New(v_size_signed)             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t i
 */
  __pyx_t_2 = PyList_New(__pyx_v_v_size_signed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_o = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "vector.to_py":76
 *     cdef object item
 * 
 *     for i in range(v_size_signed):             # <<<<<<<<<<<<<<
 *         item = v[i]
 *         Py_INCREF(item)
 */
  __pyx_t_3 = __pyx_v_v_size_signed;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "vector.to_py":77
 * 
 *     for i in range(v_size_signed):
 *         item = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)
 */
    __pyx_t_2 = __Pyx_PyInt_From_uint64_t((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "vector.to_py":78
 *     for i in range(v_size_signed):
 *         item = v[i]
 *         Py_INCREF(item)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(o, i, item)
 * 
 */
    Py_INCREF(__pyx_v_item);

    /* "vector.to_py":79
 *         item = v[i]
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)             # <<<<<<<<<<<<<<
 * 
 *     return o
 */
    PyList_SET_ITEM(__pyx_v_o, __pyx_v_i, __pyx_v_item);
  }

  /* "vector.to_py":81
 *         PyList_SET_ITEM(o, i, item)
 * 
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count")
 * cdef object __pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":32
 * 	cdef Graph _G
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		raise RuntimeError("Implement in subclass")
 * 
 */

static bool __pyx_f_9networkit_14sparsification_9EdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self) {
  bool __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isDoubleValue", 1);

  /* "networkit/sparsification.pyx":33
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		raise RuntimeError("Implement in subclass")             # <<<<<<<<<<<<<<
 * 
 * 	def __init__(self, *args, **namedargs):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 33, __pyx_L1_error)

  /* "networkit/sparsification.pyx":32
 * 	cdef Graph _G
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		raise RuntimeError("Implement in subclass")
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.isDoubleValue", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":35
 * 		raise RuntimeError("Implement in subclass")
 * 
 * 	def __init__(self, *args, **namedargs):             # <<<<<<<<<<<<<<
 * 		if type(self) == EdgeScore:
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_namedargs = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_9networkit_14sparsification_9EdgeScore___init__(((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)__pyx_v_self), __pyx_v_args, __pyx_v_namedargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_namedargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_9EdgeScore___init__(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_namedargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":36
 * 
 * 	def __init__(self, *args, **namedargs):
 * 		if type(self) == EdgeScore:             # <<<<<<<<<<<<<<
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")
 * 
 */
  __pyx_t_1 = PyObject_RichCompare(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), ((PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore), Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "networkit/sparsification.pyx":37
 * 	def __init__(self, *args, **namedargs):
 * 		if type(self) == EdgeScore:
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 37, __pyx_L1_error)

    /* "networkit/sparsification.pyx":36
 * 
 * 	def __init__(self, *args, **namedargs):
 * 		if type(self) == EdgeScore:             # <<<<<<<<<<<<<<
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")
 * 
 */
  }

  /* "networkit/sparsification.pyx":35
 * 		raise RuntimeError("Implement in subclass")
 * 
 * 	def __init__(self, *args, **namedargs):             # <<<<<<<<<<<<<<
 * 		if type(self) == EdgeScore:
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":39
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		self._G = None # just to be sure the graph is deleted
 * 
 */

/* Python wrapper */
static void __pyx_pw_9networkit_14sparsification_9EdgeScore_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9networkit_14sparsification_9EdgeScore_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9networkit_14sparsification_9EdgeScore_2__dealloc__(((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9networkit_14sparsification_9EdgeScore_2__dealloc__(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 1);

  /* "networkit/sparsification.pyx":40
 * 
 * 	def __dealloc__(self):
 * 		self._G = None # just to be sure the graph is deleted             # <<<<<<<<<<<<<<
 * 
 * 	def score(self, u, v = None):
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_G);
  __pyx_v_self->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None);

  /* "networkit/sparsification.pyx":39
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		self._G = None # just to be sure the graph is deleted
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "networkit/sparsification.pyx":42
 * 		self._G = None # just to be sure the graph is deleted
 * 
 * 	def score(self, u, v = None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		score(u, v=None)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_5score(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_9EdgeScore_4score, "\n\t\tscore(u, v=None)\n\n\t\tGet a vector containing the score for a certain edge connecting node u and v.\n\n\t\tParameters\n\t\t----------\n\t\tu : int\n\t\t\tThe first node.\n\t\tv : int, optional\n\t\t\tThe second node. Default: None\n\n\t\tReturns\n\t\t-------\n\t\tlist(int) or list(float)\n\t\t\tList with scores. Scores are either int-values (unweighted) or float-values (weighted).\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_9EdgeScore_5score = {"score", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_5score, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_9EdgeScore_4score};
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_5score(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_u = 0;
  PyObject *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("score (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_u,&__pyx_n_s_v,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_u)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_v);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 42, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "score") < 0)) __PYX_ERR(0, 42, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_u = values[0];
    __pyx_v_v = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("score", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 42, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.score", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_9EdgeScore_4score(((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)__pyx_v_self), __pyx_v_u, __pyx_v_v);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_4score(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self, PyObject *__pyx_v_u, PyObject *__pyx_v_v) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  bool __pyx_t_2;
  __pyx_t_9networkit_10structures_edgeid __pyx_t_3;
  double __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __pyx_t_9networkit_10structures_count __pyx_t_6;
  __pyx_t_9networkit_10structures_node __pyx_t_7;
  __pyx_t_9networkit_10structures_node __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("score", 1);

  /* "networkit/sparsification.pyx":60
 * 			List with scores. Scores are either int-values (unweighted) or float-values (weighted).
 * 		"""
 * 		if v is None:             # <<<<<<<<<<<<<<
 * 			if self.isDoubleValue():
 * 				return (<_EdgeScore[double]*>(self._this)).score(u)
 */
  __pyx_t_1 = (__pyx_v_v == Py_None);
  if (__pyx_t_1) {

    /* "networkit/sparsification.pyx":61
 * 		"""
 * 		if v is None:
 * 			if self.isDoubleValue():             # <<<<<<<<<<<<<<
 * 				return (<_EdgeScore[double]*>(self._this)).score(u)
 * 			else:
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore *)__pyx_v_self->__pyx_vtab)->isDoubleValue(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 61, __pyx_L1_error)
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "networkit/sparsification.pyx":62
 * 		if v is None:
 * 			if self.isDoubleValue():
 * 				return (<_EdgeScore[double]*>(self._this)).score(u)             # <<<<<<<<<<<<<<
 * 			else:
 * 				return (<_EdgeScore[count]*>(self._this)).score(u)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __Pyx_PyInt_As_uint64_t(__pyx_v_u); if (unlikely((__pyx_t_3 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 62, __pyx_L1_error)
      try {
        __pyx_t_4 = ((NetworKit::EdgeScore<double>  *)__pyx_v_self->__pyx_base.__pyx_base._this)->score(__pyx_t_3);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 62, __pyx_L1_error)
      }
      __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 62, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      goto __pyx_L0;

      /* "networkit/sparsification.pyx":61
 * 		"""
 * 		if v is None:
 * 			if self.isDoubleValue():             # <<<<<<<<<<<<<<
 * 				return (<_EdgeScore[double]*>(self._this)).score(u)
 * 			else:
 */
    }

    /* "networkit/sparsification.pyx":64
 * 				return (<_EdgeScore[double]*>(self._this)).score(u)
 * 			else:
 * 				return (<_EdgeScore[count]*>(self._this)).score(u)             # <<<<<<<<<<<<<<
 * 		else:
 * 			if self.isDoubleValue():
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = __Pyx_PyInt_As_uint64_t(__pyx_v_u); if (unlikely((__pyx_t_3 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 64, __pyx_L1_error)
      try {
        __pyx_t_6 = ((NetworKit::EdgeScore<__pyx_t_9networkit_10structures_count>  *)__pyx_v_self->__pyx_base.__pyx_base._this)->score(__pyx_t_3);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 64, __pyx_L1_error)
      }
      __pyx_t_5 = __Pyx_PyInt_From_uint64_t(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 64, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      goto __pyx_L0;
    }

    /* "networkit/sparsification.pyx":60
 * 			List with scores. Scores are either int-values (unweighted) or float-values (weighted).
 * 		"""
 * 		if v is None:             # <<<<<<<<<<<<<<
 * 			if self.isDoubleValue():
 * 				return (<_EdgeScore[double]*>(self._this)).score(u)
 */
  }

  /* "networkit/sparsification.pyx":66
 * 				return (<_EdgeScore[count]*>(self._this)).score(u)
 * 		else:
 * 			if self.isDoubleValue():             # <<<<<<<<<<<<<<
 * 				return (<_EdgeScore[double]*>(self._this)).score(u, v)
 * 			else:
 */
  /*else*/ {
    __pyx_t_2 = ((struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore *)__pyx_v_self->__pyx_vtab)->isDoubleValue(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 66, __pyx_L1_error)
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "networkit/sparsification.pyx":67
 * 		else:
 * 			if self.isDoubleValue():
 * 				return (<_EdgeScore[double]*>(self._this)).score(u, v)             # <<<<<<<<<<<<<<
 * 			else:
 * 				return (<_EdgeScore[count]*>(self._this)).score(u, v)
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_7 = __Pyx_PyInt_As_uint64_t(__pyx_v_u); if (unlikely((__pyx_t_7 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L1_error)
      __pyx_t_8 = __Pyx_PyInt_As_uint64_t(__pyx_v_v); if (unlikely((__pyx_t_8 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 67, __pyx_L1_error)
      try {
        __pyx_t_4 = ((NetworKit::EdgeScore<double>  *)__pyx_v_self->__pyx_base.__pyx_base._this)->score(__pyx_t_7, __pyx_t_8);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 67, __pyx_L1_error)
      }
      __pyx_t_5 = PyFloat_FromDouble(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 67, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      goto __pyx_L0;

      /* "networkit/sparsification.pyx":66
 * 				return (<_EdgeScore[count]*>(self._this)).score(u)
 * 		else:
 * 			if self.isDoubleValue():             # <<<<<<<<<<<<<<
 * 				return (<_EdgeScore[double]*>(self._this)).score(u, v)
 * 			else:
 */
    }

    /* "networkit/sparsification.pyx":69
 * 				return (<_EdgeScore[double]*>(self._this)).score(u, v)
 * 			else:
 * 				return (<_EdgeScore[count]*>(self._this)).score(u, v)             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self):
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_8 = __Pyx_PyInt_As_uint64_t(__pyx_v_u); if (unlikely((__pyx_t_8 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 69, __pyx_L1_error)
      __pyx_t_7 = __Pyx_PyInt_As_uint64_t(__pyx_v_v); if (unlikely((__pyx_t_7 == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 69, __pyx_L1_error)
      try {
        __pyx_t_6 = ((NetworKit::EdgeScore<__pyx_t_9networkit_10structures_count>  *)__pyx_v_self->__pyx_base.__pyx_base._this)->score(__pyx_t_8, __pyx_t_7);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 69, __pyx_L1_error)
      }
      __pyx_t_5 = __Pyx_PyInt_From_uint64_t(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 69, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      goto __pyx_L0;
    }
  }

  /* "networkit/sparsification.pyx":42
 * 		self._G = None # just to be sure the graph is deleted
 * 
 * 	def score(self, u, v = None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		score(u, v=None)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.score", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":71
 * 				return (<_EdgeScore[count]*>(self._this)).score(u, v)
 * 
 * 	def scores(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_7scores(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_9EdgeScore_6scores, "\n\t\tscores()\n\n\t\tGet a vector containing the score for each edge in the graph.\n\n\t\tReturns\n\t\t-------\n\t\tlist(int) or list(float)\n\t\t\tList with scores. Scores are either int-values (unweighted) or float-values (weighted).\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_9EdgeScore_7scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_7scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_9EdgeScore_6scores};
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_7scores(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("scores", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "scores", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_9EdgeScore_6scores(((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_6scores(struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_t_2;
  std::vector<double>  __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":82
 * 			List with scores. Scores are either int-values (unweighted) or float-values (weighted).
 * 		"""
 * 		if self.isDoubleValue():             # <<<<<<<<<<<<<<
 * 			return (<_EdgeScore[double]*>(self._this)).scores()
 * 		else:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore *)__pyx_v_self->__pyx_vtab)->isDoubleValue(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 82, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "networkit/sparsification.pyx":83
 * 		"""
 * 		if self.isDoubleValue():
 * 			return (<_EdgeScore[double]*>(self._this)).scores()             # <<<<<<<<<<<<<<
 * 		else:
 * 			return (<_EdgeScore[count]*>(self._this)).scores()
 */
    __Pyx_XDECREF(__pyx_r);
    try {
      __pyx_t_3 = ((NetworKit::EdgeScore<double>  *)__pyx_v_self->__pyx_base.__pyx_base._this)->scores();
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 83, __pyx_L1_error)
    }
    __pyx_t_4 = __pyx_convert_vector_to_py_double(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 83, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "networkit/sparsification.pyx":82
 * 			List with scores. Scores are either int-values (unweighted) or float-values (weighted).
 * 		"""
 * 		if self.isDoubleValue():             # <<<<<<<<<<<<<<
 * 			return (<_EdgeScore[double]*>(self._this)).scores()
 * 		else:
 */
  }

  /* "networkit/sparsification.pyx":85
 * 			return (<_EdgeScore[double]*>(self._this)).scores()
 * 		else:
 * 			return (<_EdgeScore[count]*>(self._this)).scores()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    try {
      __pyx_t_5 = ((NetworKit::EdgeScore<__pyx_t_9networkit_10structures_count>  *)__pyx_v_self->__pyx_base.__pyx_base._this)->scores();
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 85, __pyx_L1_error)
    }
    __pyx_t_4 = __pyx_convert_vector_to_py___pyx_t_9networkit_10structures_count(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 85, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "networkit/sparsification.pyx":71
 * 				return (<_EdgeScore[count]*>(self._this)).score(u, v)
 * 
 * 	def scores(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_9EdgeScore_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_9EdgeScore_8__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__this_cannot_be_converted_t, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_9EdgeScore_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_9EdgeScore_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_9EdgeScore_10__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_9EdgeScore_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__this_cannot_be_converted_t, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":105
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _ChibaNishizekiTriangleEdgeScore(G._this)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 105, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 105, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 105, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiTriangleEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 105, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *)__pyx_v_self), __pyx_v_G);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::ChibaNishizekiTriangleEdgeScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":106
 * 
 * 	def __cinit__(self, Graph G):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _ChibaNishizekiTriangleEdgeScore(G._this)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":107
 * 	def __cinit__(self, Graph G):
 * 		self._G = G
 * 		self._this = new _ChibaNishizekiTriangleEdgeScore(G._this)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::ChibaNishizekiTriangleEdgeScore(__pyx_v_G->_this);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 107, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":105
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _ChibaNishizekiTriangleEdgeScore(G._this)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiTriangleEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":109
 * 		self._this = new _ChibaNishizekiTriangleEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return False
 * 
 */

static bool __pyx_f_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":110
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return False             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/ChibaNishizekiQuadrangleEdgeScore.hpp>":
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":109
 * 		self._this = new _ChibaNishizekiTriangleEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return False
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiTriangleEdgeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiTriangleEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiTriangleEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":129
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _ChibaNishizekiQuadrangleEdgeScore(G._this)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 129, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 129, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 129, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiQuadrangleEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 129, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *)__pyx_v_self), __pyx_v_G);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::ChibaNishizekiQuadrangleEdgeScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":130
 * 
 * 	def __cinit__(self, Graph G):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _ChibaNishizekiQuadrangleEdgeScore(G._this)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":131
 * 	def __cinit__(self, Graph G):
 * 		self._G = G
 * 		self._this = new _ChibaNishizekiQuadrangleEdgeScore(G._this)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::ChibaNishizekiQuadrangleEdgeScore(__pyx_v_G->_this);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 131, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":129
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _ChibaNishizekiQuadrangleEdgeScore(G._this)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiQuadrangleEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":133
 * 		self._this = new _ChibaNishizekiQuadrangleEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return False
 * 
 */

static bool __pyx_f_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":134
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return False             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/TriangleEdgeScore.hpp>":
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":133
 * 		self._this = new _ChibaNishizekiQuadrangleEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return False
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiQuadrangleEdgeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiQuadrangleEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChibaNishizekiQuadrangleEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":153
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _TriangleEdgeScore(G._this)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 153, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 153, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 153, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.TriangleEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 153, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_17TriangleEdgeScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *)__pyx_v_self), __pyx_v_G);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_17TriangleEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::TriangleEdgeScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":154
 * 
 * 	def __cinit__(self, Graph G):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _TriangleEdgeScore(G._this)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":155
 * 	def __cinit__(self, Graph G):
 * 		self._G = G
 * 		self._this = new _TriangleEdgeScore(G._this)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::TriangleEdgeScore(__pyx_v_G->_this);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 155, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":153
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _TriangleEdgeScore(G._this)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.TriangleEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":157
 * 		self._this = new _TriangleEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return False
 * 
 */

static bool __pyx_f_9networkit_14sparsification_17TriangleEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":158
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return False             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/EdgeScoreLinearizer.hpp>":
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":157
 * 		self._this = new _TriangleEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return False
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_17TriangleEdgeScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_17TriangleEdgeScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_17TriangleEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.TriangleEdgeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_17TriangleEdgeScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.TriangleEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_17TriangleEdgeScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_17TriangleEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.TriangleEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":182
 * 	cdef vector[double] _score
 * 
 * 	def __cinit__(self, Graph G, vector[double] score, inverse = False):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._score = score
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_score;
  PyObject *__pyx_v_inverse = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_score,&__pyx_n_s_inverse,0};
    values[2] = __Pyx_Arg_NewRef_VARARGS(((PyObject *)Py_False));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 182, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_score)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 182, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 182, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_inverse);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 182, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 182, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_score = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 182, __pyx_L3_error)
    __pyx_v_inverse = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 182, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreLinearizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 182, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer___cinit__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_score), __pyx_v_inverse);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_score, PyObject *__pyx_v_inverse) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  NetworKit::EdgeScoreLinearizer *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":183
 * 
 * 	def __cinit__(self, Graph G, vector[double] score, inverse = False):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._score = score
 * 		self._this = new _EdgeScoreLinearizer(G._this, self._score, inverse)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":184
 * 	def __cinit__(self, Graph G, vector[double] score, inverse = False):
 * 		self._G = G
 * 		self._score = score             # <<<<<<<<<<<<<<
 * 		self._this = new _EdgeScoreLinearizer(G._this, self._score, inverse)
 * 
 */
  __pyx_v_self->_score = __pyx_v_score;

  /* "networkit/sparsification.pyx":185
 * 		self._G = G
 * 		self._score = score
 * 		self._this = new _EdgeScoreLinearizer(G._this, self._score, inverse)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_inverse); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 185, __pyx_L1_error)
  try {
    __pyx_t_2 = new NetworKit::EdgeScoreLinearizer(__pyx_v_G->_this, __pyx_v_self->_score, __pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 185, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_2;

  /* "networkit/sparsification.pyx":182
 * 	cdef vector[double] _score
 * 
 * 	def __cinit__(self, Graph G, vector[double] score, inverse = False):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._score = score
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreLinearizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":187
 * 		self._this = new _EdgeScoreLinearizer(G._this, self._score, inverse)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_19EdgeScoreLinearizer_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":188
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":187
 * 		self._this = new _EdgeScoreLinearizer(G._this, self._score, inverse)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_19EdgeScoreLinearizer_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreLinearizer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_19EdgeScoreLinearizer_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreLinearizer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreLinearizer_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreLinearizer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":218
 * 	cdef vector[count] _inScoreCount
 * 
 * 	def __cinit__(self, Graph G not None, score, bool_t inverse = False, double lower = 0.0, double upper = 1.0):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		try:
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  PyObject *__pyx_v_score = 0;
  bool __pyx_v_inverse;
  double __pyx_v_lower;
  double __pyx_v_upper;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_score,&__pyx_n_s_inverse,&__pyx_n_s_lower,&__pyx_n_s_upper,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_score)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 5, 1); __PYX_ERR(0, 218, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_inverse);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lower);
          if (value) { values[3] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_upper);
          if (value) { values[4] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 218, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_score = values[1];
    if (values[2]) {
      __pyx_v_inverse = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_inverse == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
    } else {
      __pyx_v_inverse = ((bool)0);
    }
    if (values[3]) {
      __pyx_v_lower = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_lower == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
    } else {
      __pyx_v_lower = ((double)0.0);
    }
    if (values[4]) {
      __pyx_v_upper = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_upper == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
    } else {
      __pyx_v_upper = ((double)1.0);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 5, __pyx_nargs); __PYX_ERR(0, 218, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 0, "G", 0))) __PYX_ERR(0, 218, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer___cinit__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *)__pyx_v_self), __pyx_v_G, __pyx_v_score, __pyx_v_inverse, __pyx_v_lower, __pyx_v_upper);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, PyObject *__pyx_v_score, bool __pyx_v_inverse, double __pyx_v_lower, double __pyx_v_upper) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  std::vector<double>  __pyx_t_4;
  NetworKit::EdgeScoreNormalizer<double>  *__pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_t_13;
  NetworKit::EdgeScoreNormalizer<__pyx_t_9networkit_10structures_count>  *__pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":219
 * 
 * 	def __cinit__(self, Graph G not None, score, bool_t inverse = False, double lower = 0.0, double upper = 1.0):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		try:
 * 			self._inScoreDouble = <vector[double]?>score
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":220
 * 	def __cinit__(self, Graph G not None, score, bool_t inverse = False, double lower = 0.0, double upper = 1.0):
 * 		self._G = G
 * 		try:             # <<<<<<<<<<<<<<
 * 			self._inScoreDouble = <vector[double]?>score
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "networkit/sparsification.pyx":221
 * 		self._G = G
 * 		try:
 * 			self._inScoreDouble = <vector[double]?>score             # <<<<<<<<<<<<<<
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 * 		except TypeError:
 */
      __pyx_t_4 = __pyx_convert_vector_from_py_double(__pyx_v_score); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 221, __pyx_L3_error)
      __pyx_v_self->_inScoreDouble = ((std::vector<double> )__pyx_t_4);

      /* "networkit/sparsification.pyx":222
 * 		try:
 * 			self._inScoreDouble = <vector[double]?>score
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)             # <<<<<<<<<<<<<<
 * 		except TypeError:
 * 			try:
 */
      try {
        __pyx_t_5 = new NetworKit::EdgeScoreNormalizer<double> (__pyx_v_G->_this, __pyx_v_self->_inScoreDouble, __pyx_v_inverse, __pyx_v_lower, __pyx_v_upper);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 222, __pyx_L3_error)
      }
      __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_5;

      /* "networkit/sparsification.pyx":220
 * 	def __cinit__(self, Graph G not None, score, bool_t inverse = False, double lower = 0.0, double upper = 1.0):
 * 		self._G = G
 * 		try:             # <<<<<<<<<<<<<<
 * 			self._inScoreDouble = <vector[double]?>score
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "networkit/sparsification.pyx":223
 * 			self._inScoreDouble = <vector[double]?>score
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 * 		except TypeError:             # <<<<<<<<<<<<<<
 * 			try:
 * 				self._inScoreCount = <vector[count]?>score
 */
    __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
    if (__pyx_t_6) {
      __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9) < 0) __PYX_ERR(0, 223, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_9);

      /* "networkit/sparsification.pyx":224
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 * 		except TypeError:
 * 			try:             # <<<<<<<<<<<<<<
 * 				self._inScoreCount = <vector[count]?>score
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        /*try:*/ {

          /* "networkit/sparsification.pyx":225
 * 		except TypeError:
 * 			try:
 * 				self._inScoreCount = <vector[count]?>score             # <<<<<<<<<<<<<<
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 * 			except TypeError:
 */
          __pyx_t_13 = __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(__pyx_v_score); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 225, __pyx_L11_error)
          __pyx_v_self->_inScoreCount = ((std::vector<__pyx_t_9networkit_10structures_count> )__pyx_t_13);

          /* "networkit/sparsification.pyx":226
 * 			try:
 * 				self._inScoreCount = <vector[count]?>score
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)             # <<<<<<<<<<<<<<
 * 			except TypeError:
 * 				raise TypeError("score must be either a vector of integer or float")
 */
          try {
            __pyx_t_14 = new NetworKit::EdgeScoreNormalizer<__pyx_t_9networkit_10structures_count> (__pyx_v_G->_this, ((std::vector<__pyx_t_9networkit_10structures_count>  &)__pyx_v_self->_inScoreCount), __pyx_v_inverse, __pyx_v_lower, __pyx_v_upper);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 226, __pyx_L11_error)
          }
          __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_14;

          /* "networkit/sparsification.pyx":224
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 * 		except TypeError:
 * 			try:             # <<<<<<<<<<<<<<
 * 				self._inScoreCount = <vector[count]?>score
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 */
        }
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        goto __pyx_L18_try_end;
        __pyx_L11_error:;

        /* "networkit/sparsification.pyx":227
 * 				self._inScoreCount = <vector[count]?>score
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 * 			except TypeError:             # <<<<<<<<<<<<<<
 * 				raise TypeError("score must be either a vector of integer or float")
 * 
 */
        __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
        if (__pyx_t_6) {
          __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17) < 0) __PYX_ERR(0, 227, __pyx_L13_except_error)
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_16);
          __Pyx_XGOTREF(__pyx_t_17);

          /* "networkit/sparsification.pyx":228
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 * 			except TypeError:
 * 				raise TypeError("score must be either a vector of integer or float")             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
          __pyx_t_18 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 228, __pyx_L13_except_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_Raise(__pyx_t_18, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __PYX_ERR(0, 228, __pyx_L13_except_error)
        }
        goto __pyx_L13_except_error;

        /* "networkit/sparsification.pyx":224
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 * 		except TypeError:
 * 			try:             # <<<<<<<<<<<<<<
 * 				self._inScoreCount = <vector[count]?>score
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 */
        __pyx_L13_except_error:;
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
        goto __pyx_L5_except_error;
        __pyx_L18_try_end:;
      }
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "networkit/sparsification.pyx":220
 * 	def __cinit__(self, Graph G not None, score, bool_t inverse = False, double lower = 0.0, double upper = 1.0):
 * 		self._G = G
 * 		try:             # <<<<<<<<<<<<<<
 * 			self._inScoreDouble = <vector[double]?>score
 * 			self._this = new _EdgeScoreNormalizer[double](G._this, self._inScoreDouble, inverse, lower, upper)
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "networkit/sparsification.pyx":218
 * 	cdef vector[count] _inScoreCount
 * 
 * 	def __cinit__(self, Graph G not None, score, bool_t inverse = False, double lower = 0.0, double upper = 1.0):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		try:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":230
 * 				raise TypeError("score must be either a vector of integer or float")
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_19EdgeScoreNormalizer_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":231
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/EdgeScoreBlender.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":230
 * 				raise TypeError("score must be either a vector of integer or float")
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_19EdgeScoreNormalizer_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_19EdgeScoreNormalizer_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_19EdgeScoreNormalizer_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreNormalizer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":259
 * 	cdef vector[bool_t] _selection
 * 
 * 	def __cinit__(self, Graph G not None, vector[double] attribute0, vector[double] attribute1, vector[bool_t] selection):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute0 = move(attribute0)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_attribute0;
  std::vector<double>  __pyx_v_attribute1;
  std::vector<bool>  __pyx_v_selection;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_attribute0,&__pyx_n_s_attribute1,&__pyx_n_s_selection,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute0)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); __PYX_ERR(0, 259, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute1)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); __PYX_ERR(0, 259, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_selection)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); __PYX_ERR(0, 259, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 259, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
      values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_attribute0 = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
    __pyx_v_attribute1 = __pyx_convert_vector_from_py_double(values[2]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
    __pyx_v_selection = __pyx_convert_vector_from_py_bool(values[3]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 259, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreBlender.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 0, "G", 0))) __PYX_ERR(0, 259, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_16EdgeScoreBlender___cinit__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_attribute0), __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_attribute1), __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_selection));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_16EdgeScoreBlender___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute0, std::vector<double>  __pyx_v_attribute1, std::vector<bool>  __pyx_v_selection) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::EdgeScoreBlender *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":260
 * 
 * 	def __cinit__(self, Graph G not None, vector[double] attribute0, vector[double] attribute1, vector[bool_t] selection):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._attribute0 = move(attribute0)
 * 		self._attribute1 = move(attribute1)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":261
 * 	def __cinit__(self, Graph G not None, vector[double] attribute0, vector[double] attribute1, vector[bool_t] selection):
 * 		self._G = G
 * 		self._attribute0 = move(attribute0)             # <<<<<<<<<<<<<<
 * 		self._attribute1 = move(attribute1)
 * 		self._selection = move(selection)
 */
  __pyx_v_self->_attribute0 = std::move(__pyx_v_attribute0);

  /* "networkit/sparsification.pyx":262
 * 		self._G = G
 * 		self._attribute0 = move(attribute0)
 * 		self._attribute1 = move(attribute1)             # <<<<<<<<<<<<<<
 * 		self._selection = move(selection)
 * 
 */
  __pyx_v_self->_attribute1 = std::move(__pyx_v_attribute1);

  /* "networkit/sparsification.pyx":263
 * 		self._attribute0 = move(attribute0)
 * 		self._attribute1 = move(attribute1)
 * 		self._selection = move(selection)             # <<<<<<<<<<<<<<
 * 
 * 		self._this = new _EdgeScoreBlender(G._this, self._attribute0, self._attribute1, self._selection)
 */
  __pyx_v_self->_selection = std::move(__pyx_v_selection);

  /* "networkit/sparsification.pyx":265
 * 		self._selection = move(selection)
 * 
 * 		self._this = new _EdgeScoreBlender(G._this, self._attribute0, self._attribute1, self._selection)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::EdgeScoreBlender(__pyx_v_G->_this, __pyx_v_self->_attribute0, __pyx_v_self->_attribute1, __pyx_v_self->_selection);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 265, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":259
 * 	cdef vector[bool_t] _selection
 * 
 * 	def __cinit__(self, Graph G not None, vector[double] attribute0, vector[double] attribute1, vector[bool_t] selection):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute0 = move(attribute0)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreBlender.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":267
 * 		self._this = new _EdgeScoreBlender(G._this, self._attribute0, self._attribute1, self._selection)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_16EdgeScoreBlender_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":268
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/GeometricMeanScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":267
 * 		self._this = new _EdgeScoreBlender(G._this, self._attribute0, self._attribute1, self._selection)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16EdgeScoreBlender_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_16EdgeScoreBlender_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_16EdgeScoreBlender_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreBlender.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16EdgeScoreBlender_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreBlender.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_16EdgeScoreBlender_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_16EdgeScoreBlender_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreBlender.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":290
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_18GeometricMeanScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_18GeometricMeanScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_attribute;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 290, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 290, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 290, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 290, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_attribute = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 290, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 290, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.GeometricMeanScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 290, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_18GeometricMeanScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_attribute));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_18GeometricMeanScore___cinit__(struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::GeometricMeanScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":291
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._attribute = attribute
 * 		self._this = new _GeometricMeanScore(G._this, self._attribute)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":292
 * 	def __cinit__(self, Graph G, vector[double] attribute):
 * 		self._G = G
 * 		self._attribute = attribute             # <<<<<<<<<<<<<<
 * 		self._this = new _GeometricMeanScore(G._this, self._attribute)
 * 
 */
  __pyx_v_self->_attribute = __pyx_v_attribute;

  /* "networkit/sparsification.pyx":293
 * 		self._G = G
 * 		self._attribute = attribute
 * 		self._this = new _GeometricMeanScore(G._this, self._attribute)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::GeometricMeanScore(__pyx_v_G->_this, __pyx_v_self->_attribute);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 293, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":290
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.GeometricMeanScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":295
 * 		self._this = new _GeometricMeanScore(G._this, self._attribute)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_18GeometricMeanScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":296
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/EdgeScoreAsWeight.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":295
 * 		self._this = new _GeometricMeanScore(G._this, self._attribute)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18GeometricMeanScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18GeometricMeanScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18GeometricMeanScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.GeometricMeanScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18GeometricMeanScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.GeometricMeanScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18GeometricMeanScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18GeometricMeanScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.GeometricMeanScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":328
 * 	cdef vector[double] _score
 * 
 * 	def __cinit__(self, Graph G, vector[double] score, bool_t squared, edgeweight offset, edgeweight factor):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._score = score
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_score;
  bool __pyx_v_squared;
  __pyx_t_9networkit_10structures_edgeweight __pyx_v_offset;
  __pyx_t_9networkit_10structures_edgeweight __pyx_v_factor;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_score,&__pyx_n_s_squared,&__pyx_n_s_offset,&__pyx_n_s_factor,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_score)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 1); __PYX_ERR(0, 328, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_squared)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 2); __PYX_ERR(0, 328, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_offset)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 3); __PYX_ERR(0, 328, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_factor)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[4]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, 4); __PYX_ERR(0, 328, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 328, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 5)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
      values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
      values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_score = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
    __pyx_v_squared = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_squared == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
    __pyx_v_offset = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_offset == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
    __pyx_v_factor = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_factor == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 328, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 5, 5, __pyx_nargs); __PYX_ERR(0, 328, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreAsWeight.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 328, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight___cinit__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_score), __pyx_v_squared, __pyx_v_offset, __pyx_v_factor);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight___cinit__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_score, bool __pyx_v_squared, __pyx_t_9networkit_10structures_edgeweight __pyx_v_offset, __pyx_t_9networkit_10structures_edgeweight __pyx_v_factor) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::EdgeScoreAsWeight *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":329
 * 
 * 	def __cinit__(self, Graph G, vector[double] score, bool_t squared, edgeweight offset, edgeweight factor):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._score = score
 * 		self._this = new _EdgeScoreAsWeight(G._this, self._score, squared, offset, factor)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_G);
  __pyx_v_self->_G = __pyx_v_G;

  /* "networkit/sparsification.pyx":330
 * 	def __cinit__(self, Graph G, vector[double] score, bool_t squared, edgeweight offset, edgeweight factor):
 * 		self._G = G
 * 		self._score = score             # <<<<<<<<<<<<<<
 * 		self._this = new _EdgeScoreAsWeight(G._this, self._score, squared, offset, factor)
 * 
 */
  __pyx_v_self->_score = __pyx_v_score;

  /* "networkit/sparsification.pyx":331
 * 		self._G = G
 * 		self._score = score
 * 		self._this = new _EdgeScoreAsWeight(G._this, self._score, squared, offset, factor)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  try {
    __pyx_t_1 = new NetworKit::EdgeScoreAsWeight(__pyx_v_G->_this, __pyx_v_self->_score, __pyx_v_squared, __pyx_v_offset, __pyx_v_factor);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 331, __pyx_L1_error)
  }
  __pyx_v_self->_this = __pyx_t_1;

  /* "networkit/sparsification.pyx":328
 * 	cdef vector[double] _score
 * 
 * 	def __cinit__(self, Graph G, vector[double] score, bool_t squared, edgeweight offset, edgeweight factor):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._score = score
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreAsWeight.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":333
 * 		self._this = new _EdgeScoreAsWeight(G._this, self._score, squared, offset, factor)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self._this is not NULL:
 * 			del self._this
 */

/* Python wrapper */
static void __pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_2__dealloc__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_2__dealloc__(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self) {
  int __pyx_t_1;

  /* "networkit/sparsification.pyx":334
 * 
 * 	def __dealloc__(self):
 * 		if self._this is not NULL:             # <<<<<<<<<<<<<<
 * 			del self._this
 * 			self._this = NULL
 */
  __pyx_t_1 = (__pyx_v_self->_this != NULL);
  if (__pyx_t_1) {

    /* "networkit/sparsification.pyx":335
 * 	def __dealloc__(self):
 * 		if self._this is not NULL:
 * 			del self._this             # <<<<<<<<<<<<<<
 * 			self._this = NULL
 * 
 */
    delete __pyx_v_self->_this;

    /* "networkit/sparsification.pyx":336
 * 		if self._this is not NULL:
 * 			del self._this
 * 			self._this = NULL             # <<<<<<<<<<<<<<
 * 
 * 	def getWeightedGraph(self):
 */
    __pyx_v_self->_this = NULL;

    /* "networkit/sparsification.pyx":334
 * 
 * 	def __dealloc__(self):
 * 		if self._this is not NULL:             # <<<<<<<<<<<<<<
 * 			del self._this
 * 			self._this = NULL
 */
  }

  /* "networkit/sparsification.pyx":333
 * 		self._this = new _EdgeScoreAsWeight(G._this, self._score, squared, offset, factor)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		if self._this is not NULL:
 * 			del self._this
 */

  /* function exit code */
}

/* "networkit/sparsification.pyx":338
 * 			self._this = NULL
 * 
 * 	def getWeightedGraph(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getWeightedGraph()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_5getWeightedGraph(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_17EdgeScoreAsWeight_4getWeightedGraph, "\n\t\tgetWeightedGraph()\n\n\t\tReturns\n\t\t-------\n\t\tnetworkit.Graph\n\t\t\tThe weighted result graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_17EdgeScoreAsWeight_5getWeightedGraph = {"getWeightedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_5getWeightedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_17EdgeScoreAsWeight_4getWeightedGraph};
static PyObject *__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_5getWeightedGraph(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getWeightedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("getWeightedGraph", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "getWeightedGraph", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_4getWeightedGraph(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_4getWeightedGraph(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  NetworKit::Graph __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getWeightedGraph", 1);

  /* "networkit/sparsification.pyx":347
 * 			The weighted result graph.
 * 		"""
 * 		return Graph(0).setThis(self._this.calculate())             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/SimmelianOverlapScore.hpp>":
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_5graph_Graph), __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = __pyx_v_self->_this->calculate();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 347, __pyx_L1_error)
  }
  __pyx_t_3 = ((struct __pyx_vtabstruct_9networkit_5graph_Graph *)((struct __pyx_obj_9networkit_5graph_Graph *)__pyx_t_1)->__pyx_vtab)->setThis(((struct __pyx_obj_9networkit_5graph_Graph *)__pyx_t_1), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":338
 * 			self._this = NULL
 * 
 * 	def getWeightedGraph(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getWeightedGraph()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreAsWeight.getWeightedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_17EdgeScoreAsWeight_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_6__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreAsWeight.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_17EdgeScoreAsWeight_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreAsWeight.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_8__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_17EdgeScoreAsWeight_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.EdgeScoreAsWeight.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":373
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles, count maxRank):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles;
  __pyx_t_9networkit_10structures_count __pyx_v_maxRank;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_triangles,&__pyx_n_s_maxRank,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 373, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_triangles)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 373, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 1); __PYX_ERR(0, 373, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_maxRank)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 373, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 2); __PYX_ERR(0, 373, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 373, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_triangles = __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 373, __pyx_L3_error)
    __pyx_v_maxRank = __Pyx_PyInt_As_uint64_t(values[2]); if (unlikely((__pyx_v_maxRank == ((uint64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 373, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 373, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianOverlapScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 373, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_triangles), __pyx_v_maxRank);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore___cinit__(struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles, __pyx_t_9networkit_10structures_count __pyx_v_maxRank) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::SimmelianOverlapScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":374
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles, count maxRank):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._triangles = triangles
 * 		self._this = new _SimmelianOverlapScore(G._this, self._triangles, maxRank)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":375
 * 	def __cinit__(self, Graph G, vector[count] triangles, count maxRank):
 * 		self._G = G
 * 		self._triangles = triangles             # <<<<<<<<<<<<<<
 * 		self._this = new _SimmelianOverlapScore(G._this, self._triangles, maxRank)
 * 
 */
  __pyx_v_self->_triangles = __pyx_v_triangles;

  /* "networkit/sparsification.pyx":376
 * 		self._G = G
 * 		self._triangles = triangles
 * 		self._this = new _SimmelianOverlapScore(G._this, self._triangles, maxRank)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::SimmelianOverlapScore(__pyx_v_G->_this, __pyx_v_self->_triangles, __pyx_v_maxRank);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 376, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":373
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles, count maxRank):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SimmelianOverlapScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":378
 * 		self._this = new _SimmelianOverlapScore(G._this, self._triangles, maxRank)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_21SimmelianOverlapScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":379
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/edgescores/PrefixJaccardScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":378
 * 		self._this = new _SimmelianOverlapScore(G._this, self._triangles, maxRank)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21SimmelianOverlapScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SimmelianOverlapScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21SimmelianOverlapScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianOverlapScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21SimmelianOverlapScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SimmelianOverlapScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":389
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_attribute;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 389, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 389, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 389, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 389, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_attribute = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 389, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 389, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.PrefixJaccardScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 389, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_18PrefixJaccardScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_attribute));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_18PrefixJaccardScore___cinit__(struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::PrefixJaccardScore<double> *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":390
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._attribute = attribute
 * 		self._this = new _PrefixJaccardScore(G._this, self._attribute)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":391
 * 	def __cinit__(self, Graph G, vector[double] attribute):
 * 		self._G = G
 * 		self._attribute = attribute             # <<<<<<<<<<<<<<
 * 		self._this = new _PrefixJaccardScore(G._this, self._attribute)
 * 
 */
  __pyx_v_self->_attribute = __pyx_v_attribute;

  /* "networkit/sparsification.pyx":392
 * 		self._G = G
 * 		self._attribute = attribute
 * 		self._this = new _PrefixJaccardScore(G._this, self._attribute)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::PrefixJaccardScore<double>(__pyx_v_G->_this, __pyx_v_self->_attribute);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 392, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":389
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.PrefixJaccardScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":394
 * 		self._this = new _PrefixJaccardScore(G._this, self._attribute)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_18PrefixJaccardScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":395
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/MultiscaleScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":394
 * 		self._this = new _PrefixJaccardScore(G._this, self._attribute)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18PrefixJaccardScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18PrefixJaccardScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18PrefixJaccardScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.PrefixJaccardScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18PrefixJaccardScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.PrefixJaccardScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18PrefixJaccardScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18PrefixJaccardScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.PrefixJaccardScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":419
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_15MultiscaleScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_15MultiscaleScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_attribute;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 419, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 419, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 419, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 419, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_attribute = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 419, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 419, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 419, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_15MultiscaleScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_attribute));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_15MultiscaleScore___cinit__(struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::MultiscaleScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":420
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._attribute = attribute
 * 		self._this = new _MultiscaleScore(G._this, self._attribute)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":421
 * 	def __cinit__(self, Graph G, vector[double] attribute):
 * 		self._G = G
 * 		self._attribute = attribute             # <<<<<<<<<<<<<<
 * 		self._this = new _MultiscaleScore(G._this, self._attribute)
 * 
 */
  __pyx_v_self->_attribute = __pyx_v_attribute;

  /* "networkit/sparsification.pyx":422
 * 		self._G = G
 * 		self._attribute = attribute
 * 		self._this = new _MultiscaleScore(G._this, self._attribute)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::MultiscaleScore(__pyx_v_G->_this, __pyx_v_self->_attribute);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 422, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":419
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G, vector[double] attribute):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":424
 * 		self._this = new _MultiscaleScore(G._this, self._attribute)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_15MultiscaleScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":425
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/RandomEdgeScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":424
 * 		self._this = new _MultiscaleScore(G._this, self._attribute)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15MultiscaleScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15MultiscaleScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15MultiscaleScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15MultiscaleScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15MultiscaleScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15MultiscaleScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15MultiscaleScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15MultiscaleScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15MultiscaleScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15MultiscaleScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15MultiscaleScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15MultiscaleScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":444
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _RandomEdgeScore(G._this)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_15RandomEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_15RandomEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 444, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 444, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 444, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 444, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_15RandomEdgeScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *)__pyx_v_self), __pyx_v_G);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_15RandomEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::RandomEdgeScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":445
 * 
 * 	def __cinit__(self, Graph G):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _RandomEdgeScore(G._this)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":446
 * 	def __cinit__(self, Graph G):
 * 		self._G = G
 * 		self._this = new _RandomEdgeScore(G._this)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::RandomEdgeScore(__pyx_v_G->_this);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 446, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":444
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _RandomEdgeScore(G._this)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":448
 * 		self._this = new _RandomEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_15RandomEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":449
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/LocalSimilarityScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":448
 * 		self._this = new _RandomEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15RandomEdgeScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15RandomEdgeScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15RandomEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15RandomEdgeScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15RandomEdgeScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15RandomEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":473
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_triangles,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 473, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_triangles)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 473, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 473, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 473, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_triangles = __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 473, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 473, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilarityScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 473, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_20LocalSimilarityScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_triangles));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_20LocalSimilarityScore___cinit__(struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::LocalSimilarityScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":474
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._triangles = triangles
 * 		self._this = new _LocalSimilarityScore(G._this, self._triangles)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":475
 * 	def __cinit__(self, Graph G, vector[count] triangles):
 * 		self._G = G
 * 		self._triangles = triangles             # <<<<<<<<<<<<<<
 * 		self._this = new _LocalSimilarityScore(G._this, self._triangles)
 * 
 */
  __pyx_v_self->_triangles = __pyx_v_triangles;

  /* "networkit/sparsification.pyx":476
 * 		self._G = G
 * 		self._triangles = triangles
 * 		self._this = new _LocalSimilarityScore(G._this, self._triangles)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::LocalSimilarityScore(__pyx_v_G->_this, __pyx_v_self->_triangles);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 476, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":473
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilarityScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":478
 * 		self._this = new _LocalSimilarityScore(G._this, self._triangles)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_20LocalSimilarityScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":479
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/ForestFireScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":478
 * 		self._this = new _LocalSimilarityScore(G._this, self._triangles)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20LocalSimilarityScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20LocalSimilarityScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20LocalSimilarityScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilarityScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20LocalSimilarityScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilarityScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20LocalSimilarityScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20LocalSimilarityScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilarityScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":504
 * 	"""
 * 
 * 	def __cinit__(self, Graph G, double pf, double tebr):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _ForestFireScore(G._this, pf, tebr)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_15ForestFireScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_15ForestFireScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  double __pyx_v_pf;
  double __pyx_v_tebr;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_pf,&__pyx_n_s_tebr,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pf)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 1); __PYX_ERR(0, 504, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tebr)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 2); __PYX_ERR(0, 504, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 504, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_pf = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_pf == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
    __pyx_v_tebr = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_tebr == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 504, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 504, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ForestFireScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 504, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_15ForestFireScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_ForestFireScore *)__pyx_v_self), __pyx_v_G, __pyx_v_pf, __pyx_v_tebr);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_15ForestFireScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, double __pyx_v_pf, double __pyx_v_tebr) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::ForestFireScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":505
 * 
 * 	def __cinit__(self, Graph G, double pf, double tebr):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _ForestFireScore(G._this, pf, tebr)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":506
 * 	def __cinit__(self, Graph G, double pf, double tebr):
 * 		self._G = G
 * 		self._this = new _ForestFireScore(G._this, pf, tebr)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::ForestFireScore(__pyx_v_G->_this, __pyx_v_pf, __pyx_v_tebr);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 506, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":504
 * 	"""
 * 
 * 	def __cinit__(self, Graph G, double pf, double tebr):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _ForestFireScore(G._this, pf, tebr)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ForestFireScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":508
 * 		self._this = new _ForestFireScore(G._this, pf, tebr)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_15ForestFireScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":509
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/LocalDegreeScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":508
 * 		self._this = new _ForestFireScore(G._this, pf, tebr)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15ForestFireScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15ForestFireScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15ForestFireScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15ForestFireScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15ForestFireScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_ForestFireScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15ForestFireScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ForestFireScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15ForestFireScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15ForestFireScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15ForestFireScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15ForestFireScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ForestFireScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15ForestFireScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_ForestFireScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15ForestFireScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ForestFireScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":530
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _LocalDegreeScore(G._this)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_16LocalDegreeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_16LocalDegreeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 530, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 530, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 530, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 530, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_16LocalDegreeScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *)__pyx_v_self), __pyx_v_G);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_16LocalDegreeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::LocalDegreeScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":531
 * 
 * 	def __cinit__(self, Graph G):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _LocalDegreeScore(G._this)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":532
 * 	def __cinit__(self, Graph G):
 * 		self._G = G
 * 		self._this = new _LocalDegreeScore(G._this)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::LocalDegreeScore(__pyx_v_G->_this);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 532, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":530
 * 	"""
 * 
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _LocalDegreeScore(G._this)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":534
 * 		self._this = new _LocalDegreeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_16LocalDegreeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":535
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/RandomNodeEdgeScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":534
 * 		self._this = new _LocalDegreeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16LocalDegreeScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_16LocalDegreeScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_16LocalDegreeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16LocalDegreeScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_16LocalDegreeScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_16LocalDegreeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":554
 * 		The graph to calculate the Random Edge attribute for.
 * 	"""
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _RandomNodeEdgeScore(G._this)
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 554, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 554, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 554, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 554, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *)__pyx_v_self), __pyx_v_G);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore___cinit__(struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::RandomNodeEdgeScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":555
 * 	"""
 * 	def __cinit__(self, Graph G):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._this = new _RandomNodeEdgeScore(G._this)
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":556
 * 	def __cinit__(self, Graph G):
 * 		self._G = G
 * 		self._this = new _RandomNodeEdgeScore(G._this)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::RandomNodeEdgeScore(__pyx_v_G->_this);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 556, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":554
 * 		The graph to calculate the Random Edge attribute for.
 * 	"""
 * 	def __cinit__(self, Graph G):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._this = new _RandomNodeEdgeScore(G._this)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":558
 * 		self._this = new _RandomNodeEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_19RandomNodeEdgeScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":559
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * ctypedef fused DoubleInt:
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":558
 * 		self._this = new _RandomNodeEdgeScore(G._this)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_19RandomNodeEdgeScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_19RandomNodeEdgeScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_19RandomNodeEdgeScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":594
 * 	cdef vector[double] _a
 * 
 * 	def __cinit__(self, Graph G, vector[double] a, bool_t logarithmic = True):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._a = a
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_16LocalFilterScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_16LocalFilterScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_a;
  bool __pyx_v_logarithmic;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_a,&__pyx_n_s_logarithmic,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_a)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(0, 594, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_logarithmic);
          if (value) { values[2] = __Pyx_Arg_NewRef_VARARGS(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 594, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_a = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L3_error)
    if (values[2]) {
      __pyx_v_logarithmic = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_logarithmic == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L3_error)
    } else {
      __pyx_v_logarithmic = ((bool)1);
    }
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 594, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalFilterScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 594, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_16LocalFilterScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_a), __pyx_v_logarithmic);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_16LocalFilterScore___cinit__(struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_a, bool __pyx_v_logarithmic) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::LocalFilterScore<double> *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":595
 * 
 * 	def __cinit__(self, Graph G, vector[double] a, bool_t logarithmic = True):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._a = a
 * 		self._this = new _LocalFilterScoreDouble(G._this, self._a, logarithmic)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":596
 * 	def __cinit__(self, Graph G, vector[double] a, bool_t logarithmic = True):
 * 		self._G = G
 * 		self._a = a             # <<<<<<<<<<<<<<
 * 		self._this = new _LocalFilterScoreDouble(G._this, self._a, logarithmic)
 * 
 */
  __pyx_v_self->_a = __pyx_v_a;

  /* "networkit/sparsification.pyx":597
 * 		self._G = G
 * 		self._a = a
 * 		self._this = new _LocalFilterScoreDouble(G._this, self._a, logarithmic)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::LocalFilterScore<double>(__pyx_v_G->_this, __pyx_v_self->_a, __pyx_v_logarithmic);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 597, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":594
 * 	cdef vector[double] _a
 * 
 * 	def __cinit__(self, Graph G, vector[double] a, bool_t logarithmic = True):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._a = a
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalFilterScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":599
 * 		self._this = new _LocalFilterScoreDouble(G._this, self._a, logarithmic)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_16LocalFilterScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":600
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/ChanceCorrectedTriangleScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":599
 * 		self._this = new _LocalFilterScoreDouble(G._this, self._a, logarithmic)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalFilterScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16LocalFilterScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalFilterScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalFilterScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_16LocalFilterScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_16LocalFilterScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalFilterScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalFilterScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16LocalFilterScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalFilterScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16LocalFilterScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalFilterScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_16LocalFilterScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_16LocalFilterScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalFilterScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":622
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_triangles,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_triangles)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 622, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 622, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_triangles = __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 622, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ChanceCorrectedTriangleScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 622, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_triangles));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore___cinit__(struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::ChanceCorrectedTriangleScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":623
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._triangles = triangles
 * 		self._this = new _ChanceCorrectedTriangleScore(G._this, self._triangles)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":624
 * 	def __cinit__(self, Graph G, vector[count] triangles):
 * 		self._G = G
 * 		self._triangles = triangles             # <<<<<<<<<<<<<<
 * 		self._this = new _ChanceCorrectedTriangleScore(G._this, self._triangles)
 * 
 */
  __pyx_v_self->_triangles = __pyx_v_triangles;

  /* "networkit/sparsification.pyx":625
 * 		self._G = G
 * 		self._triangles = triangles
 * 		self._this = new _ChanceCorrectedTriangleScore(G._this, self._triangles)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::ChanceCorrectedTriangleScore(__pyx_v_G->_this, __pyx_v_self->_triangles);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 625, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":622
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChanceCorrectedTriangleScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":627
 * 		self._this = new _ChanceCorrectedTriangleScore(G._this, self._triangles)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_28ChanceCorrectedTriangleScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":628
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/SCANStructuralSimilarityScore.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":627
 * 		self._this = new _ChanceCorrectedTriangleScore(G._this, self._triangles)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_28ChanceCorrectedTriangleScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChanceCorrectedTriangleScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_28ChanceCorrectedTriangleScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ChanceCorrectedTriangleScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_28ChanceCorrectedTriangleScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ChanceCorrectedTriangleScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":650
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_triangles,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 650, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_triangles)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 650, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 650, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 650, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_triangles = __pyx_convert_vector_from_py___pyx_t_9networkit_10structures_count(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 650, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 650, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SCANStructuralSimilarityScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 1, "G", 0))) __PYX_ERR(0, 650, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore___cinit__(((struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_triangles));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore___cinit__(struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<__pyx_t_9networkit_10structures_count>  __pyx_v_triangles) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::SCANStructuralSimilarityScore *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":651
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._triangles = triangles
 * 		self._this = new _SCANStructuralSimilarityScore(G._this, self._triangles)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base._G);
  __pyx_v_self->__pyx_base._G = __pyx_v_G;

  /* "networkit/sparsification.pyx":652
 * 	def __cinit__(self, Graph G, vector[count] triangles):
 * 		self._G = G
 * 		self._triangles = triangles             # <<<<<<<<<<<<<<
 * 		self._this = new _SCANStructuralSimilarityScore(G._this, self._triangles)
 * 
 */
  __pyx_v_self->_triangles = __pyx_v_triangles;

  /* "networkit/sparsification.pyx":653
 * 		self._G = G
 * 		self._triangles = triangles
 * 		self._this = new _SCANStructuralSimilarityScore(G._this, self._triangles)             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  try {
    __pyx_t_1 = new NetworKit::SCANStructuralSimilarityScore(__pyx_v_G->_this, __pyx_v_self->_triangles);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 653, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._this = __pyx_t_1;

  /* "networkit/sparsification.pyx":650
 * 	cdef vector[count] _triangles
 * 
 * 	def __cinit__(self, Graph G, vector[count] triangles):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._triangles = triangles
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SCANStructuralSimilarityScore.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":655
 * 		self._this = new _SCANStructuralSimilarityScore(G._this, self._triangles)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

static bool __pyx_f_9networkit_14sparsification_29SCANStructuralSimilarityScore_isDoubleValue(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self) {
  bool __pyx_r;

  /* "networkit/sparsification.pyx":656
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		return True             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/GlobalThresholdFilter.hpp>":
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":655
 * 		self._this = new _SCANStructuralSimilarityScore(G._this, self._triangles)
 * 
 * 	cdef bool_t isDoubleValue(self):             # <<<<<<<<<<<<<<
 * 		return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SCANStructuralSimilarityScore_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore_2__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SCANStructuralSimilarityScore.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SCANStructuralSimilarityScore_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SCANStructuralSimilarityScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore_4__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SCANStructuralSimilarityScore_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SCANStructuralSimilarityScore.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":687
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G not None, vector[double] attribute, double e, bool_t above):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

/* Python wrapper */
static int __pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G = 0;
  std::vector<double>  __pyx_v_attribute;
  double __pyx_v_e;
  bool __pyx_v_above;
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return -1;
  #endif
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_G,&__pyx_n_s_attribute,&__pyx_n_s_e,&__pyx_n_s_above,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); __PYX_ERR(0, 687, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_e)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); __PYX_ERR(0, 687, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_above)) != 0)) {
          (void)__Pyx_Arg_NewRef_VARARGS(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); __PYX_ERR(0, 687, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 687, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
      values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
      values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
    }
    __pyx_v_G = ((struct __pyx_obj_9networkit_5graph_Graph *)values[0]);
    __pyx_v_attribute = __pyx_convert_vector_from_py_double(values[1]); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
    __pyx_v_e = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_e == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
    __pyx_v_above = __Pyx_PyObject_IsTrue(values[3]); if (unlikely((__pyx_v_above == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L3_error)
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 687, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.GlobalThresholdFilter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_G), __pyx_ptype_9networkit_5graph_Graph, 0, "G", 0))) __PYX_ERR(0, 687, __pyx_L1_error)
  __pyx_r = __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter___cinit__(((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_v_self), __pyx_v_G, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_v_attribute), __pyx_v_e, __pyx_v_above);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_VARARGS(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter___cinit__(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self, struct __pyx_obj_9networkit_5graph_Graph *__pyx_v_G, std::vector<double>  __pyx_v_attribute, double __pyx_v_e, bool __pyx_v_above) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  NetworKit::GlobalThresholdFilter *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 1);

  /* "networkit/sparsification.pyx":688
 * 
 * 	def __cinit__(self, Graph G not None, vector[double] attribute, double e, bool_t above):
 * 		self._G = G             # <<<<<<<<<<<<<<
 * 		self._attribute = attribute
 * 		self._this = new _GlobalThresholdFilter(G._this, self._attribute, e, above)
 */
  __Pyx_INCREF((PyObject *)__pyx_v_G);
  __Pyx_GIVEREF((PyObject *)__pyx_v_G);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_G);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_G);
  __pyx_v_self->_G = __pyx_v_G;

  /* "networkit/sparsification.pyx":689
 * 	def __cinit__(self, Graph G not None, vector[double] attribute, double e, bool_t above):
 * 		self._G = G
 * 		self._attribute = attribute             # <<<<<<<<<<<<<<
 * 		self._this = new _GlobalThresholdFilter(G._this, self._attribute, e, above)
 * 
 */
  __pyx_v_self->_attribute = __pyx_v_attribute;

  /* "networkit/sparsification.pyx":690
 * 		self._G = G
 * 		self._attribute = attribute
 * 		self._this = new _GlobalThresholdFilter(G._this, self._attribute, e, above)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  try {
    __pyx_t_1 = new NetworKit::GlobalThresholdFilter(__pyx_v_G->_this, __pyx_v_self->_attribute, __pyx_v_e, __pyx_v_above);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 690, __pyx_L1_error)
  }
  __pyx_v_self->_this = __pyx_t_1;

  /* "networkit/sparsification.pyx":687
 * 	cdef vector[double] _attribute
 * 
 * 	def __cinit__(self, Graph G not None, vector[double] attribute, double e, bool_t above):             # <<<<<<<<<<<<<<
 * 		self._G = G
 * 		self._attribute = attribute
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.GlobalThresholdFilter.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":692
 * 		self._this = new _GlobalThresholdFilter(G._this, self._attribute, e, above)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self._this
 * 
 */

/* Python wrapper */
static void __pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_2__dealloc__(((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_2__dealloc__(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self) {

  /* "networkit/sparsification.pyx":693
 * 
 * 	def __dealloc__(self):
 * 		del self._this             # <<<<<<<<<<<<<<
 * 
 * 	def calculate(self):
 */
  delete __pyx_v_self->_this;

  /* "networkit/sparsification.pyx":692
 * 		self._this = new _GlobalThresholdFilter(G._this, self._attribute, e, above)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self._this
 * 
 */

  /* function exit code */
}

/* "networkit/sparsification.pyx":695
 * 		del self._this
 * 
 * 	def calculate(self):             # <<<<<<<<<<<<<<
 * 		return Graph().setThis(self._this.calculate())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_5calculate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21GlobalThresholdFilter_5calculate = {"calculate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_5calculate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_5calculate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calculate (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("calculate", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "calculate", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_4calculate(((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_4calculate(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  NetworKit::Graph __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("calculate", 1);

  /* "networkit/sparsification.pyx":696
 * 
 * 	def calculate(self):
 * 		return Graph().setThis(self._this.calculate())             # <<<<<<<<<<<<<<
 * 
 * _ABS_ZERO = 1e-7
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9networkit_5graph_Graph)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  try {
    __pyx_t_2 = __pyx_v_self->_this->calculate();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 696, __pyx_L1_error)
  }
  __pyx_t_3 = ((struct __pyx_vtabstruct_9networkit_5graph_Graph *)((struct __pyx_obj_9networkit_5graph_Graph *)__pyx_t_1)->__pyx_vtab)->setThis(((struct __pyx_obj_9networkit_5graph_Graph *)__pyx_t_1), __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":695
 * 		del self._this
 * 
 * 	def calculate(self):             # <<<<<<<<<<<<<<
 * 		return Graph().setThis(self._this.calculate())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.GlobalThresholdFilter.calculate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21GlobalThresholdFilter_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_6__reduce_cython__(((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 1);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.GlobalThresholdFilter.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21GlobalThresholdFilter_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.GlobalThresholdFilter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_8__setstate_cython__(((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21GlobalThresholdFilter_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 1);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.GlobalThresholdFilter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":704
 * 	uses only one parameter to determine the degree of filtering. """
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_10Sparsifier_scores, "\n\t\tscores(G)\n\n\t\tReturns an edge attribute.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\n\t\tReturns\n\t\t-------\n\t\tlist(float)\n\t\t\tEdge scores.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_10Sparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_10Sparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_10Sparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 704, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 704, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 704, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 704, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 704, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_10Sparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_G) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":720
 * 			Edge scores.
 * 		"""
 * 		raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 720, __pyx_L1_error)

  /* "networkit/sparsification.pyx":704
 * 	uses only one parameter to determine the degree of filtering. """
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":722
 * 		raise NotImplementedError
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		""" The actual implementation of the sparsification.
 * 		(To be implemented in the derived class.)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_10Sparsifier_2_getSparsifiedGraph, " The actual implementation of the sparsification.\n\t\t(To be implemented in the derived class.)\n\n\t\tKeyword arguments:\n\t\tG -- the input graph\n\t\tedgeRatio -- the target edge ratio\n\t\tattribute -- a previously calculated edge attribute.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_10Sparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_10Sparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_10Sparsifier_2_getSparsifiedGraph};
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_G = 0;
  CYTHON_UNUSED PyObject *__pyx_v_parameter = 0;
  CYTHON_UNUSED PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 722, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 722, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 722, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 722, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 722, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 722, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 722, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 722, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 722, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_10Sparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_G, CYTHON_UNUSED PyObject *__pyx_v_parameter, CYTHON_UNUSED PyObject *__pyx_v_attribute) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":731
 * 		attribute -- a previously calculated edge attribute.
 * 		"""
 * 		raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 731, __pyx_L1_error)

  /* "networkit/sparsification.pyx":722
 * 		raise NotImplementedError
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		""" The actual implementation of the sparsification.
 * 		(To be implemented in the derived class.)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":733
 * 		raise NotImplementedError
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		""" Returns an appropriate parameterization algorithm for this sparsifier.
 * 		(To be implemented in the derived class.)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_10Sparsifier_4_getParameterizationAlgorithm, " Returns an appropriate parameterization algorithm for this sparsifier.\n\t\t(To be implemented in the derived class.)\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_10Sparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_10Sparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_10Sparsifier_4_getParameterizationAlgorithm};
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 733, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 733, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 733, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_10Sparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":737
 * 		(To be implemented in the derived class.)
 * 		"""
 * 		return SimpleParameterization()             # <<<<<<<<<<<<<<
 * 
 * 	def getSparsifiedGraph(self, G, parameter, attribute=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SimpleParameterization); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 737, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":733
 * 		raise NotImplementedError
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		""" Returns an appropriate parameterization algorithm for this sparsifier.
 * 		(To be implemented in the derived class.)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":739
 * 		return SimpleParameterization()
 * 
 * 	def getSparsifiedGraph(self, G, parameter, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraph(sG, parameter, attribute=None)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_7getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_10Sparsifier_6getSparsifiedGraph, "\n\t\tgetSparsifiedGraph(sG, parameter, attribute=None)\n\t\t\n\t\tReturns a sparsified version of the given input graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\tparameter : float\n\t\t\tA parameter value that determines the degree of sparsification\n\t\tattribute : list(float), optional\n\t\t\tA previously calculated edge attribute. If none is provided, we will try to calculate it. Default: None\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_10Sparsifier_7getSparsifiedGraph = {"getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_10Sparsifier_7getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_10Sparsifier_6getSparsifiedGraph};
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_7getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    values[3] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("getSparsifiedGraph", 0, 3, 4, 1); __PYX_ERR(0, 739, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("getSparsifiedGraph", 0, 3, 4, 2); __PYX_ERR(0, 739, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute);
          if (value) { values[3] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "getSparsifiedGraph") < 0)) __PYX_ERR(0, 739, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getSparsifiedGraph", 0, 3, 4, __pyx_nargs); __PYX_ERR(0, 739, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_10Sparsifier_6getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_6getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getSparsifiedGraph", 0);
  __Pyx_INCREF(__pyx_v_attribute);

  /* "networkit/sparsification.pyx":755
 * 		"""
 * 
 * 		if attribute is None:             # <<<<<<<<<<<<<<
 * 			attribute = self.scores(G)
 * 
 */
  __pyx_t_1 = (__pyx_v_attribute == Py_None);
  if (__pyx_t_1) {

    /* "networkit/sparsification.pyx":756
 * 
 * 		if attribute is None:
 * 			attribute = self.scores(G)             # <<<<<<<<<<<<<<
 * 
 * 		return self._getSparsifiedGraph(G, parameter, attribute)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_scores); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_G};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 756, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF_SET(__pyx_v_attribute, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "networkit/sparsification.pyx":755
 * 		"""
 * 
 * 		if attribute is None:             # <<<<<<<<<<<<<<
 * 			attribute = self.scores(G)
 * 
 */
  }

  /* "networkit/sparsification.pyx":758
 * 			attribute = self.scores(G)
 * 
 * 		return self._getSparsifiedGraph(G, parameter, attribute)             # <<<<<<<<<<<<<<
 * 
 * 	def getSparsifiedGraphOfSize(self, G, edgeRatio, attribute=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_getSparsifiedGraph); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 758, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":739
 * 		return SimpleParameterization()
 * 
 * 	def getSparsifiedGraph(self, G, parameter, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraph(sG, parameter, attribute=None)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_attribute);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":760
 * 		return self._getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getSparsifiedGraphOfSize(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraphOfSize(G, edgeRatio, attribute=None)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_9getSparsifiedGraphOfSize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_10Sparsifier_8getSparsifiedGraphOfSize, "\n\t\tgetSparsifiedGraphOfSize(G, edgeRatio, attribute=None)\n\t\t\n\t\tThis is a convenience function that applies an appropriate parameterization\n\t\talgorithm (if available) to obtain a parameter value that yields a sparsified\n\t\tgraph of the desired size and then calls getSparsifiedGraph(...) with that parameter value.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\tedgeRatio : float\n\t\t\tThe target edge ratio.\n\t\tattribute : list(float), optional\n\t\t\tA previously calculated edge attribute. If none is provided, we will try to calculate it. Default: None\n\n\t\tReturns\n\t\t-------\n\t\tnetworkit.Graph\n\t\t\tThe sparsified graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_10Sparsifier_9getSparsifiedGraphOfSize = {"getSparsifiedGraphOfSize", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_10Sparsifier_9getSparsifiedGraphOfSize, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_10Sparsifier_8getSparsifiedGraphOfSize};
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_9getSparsifiedGraphOfSize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_edgeRatio = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getSparsifiedGraphOfSize (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_edgeRatio,&__pyx_n_s_attribute,0};
    values[3] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 760, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 760, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("getSparsifiedGraphOfSize", 0, 3, 4, 1); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_edgeRatio)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 760, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("getSparsifiedGraphOfSize", 0, 3, 4, 2); __PYX_ERR(0, 760, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute);
          if (value) { values[3] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 760, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "getSparsifiedGraphOfSize") < 0)) __PYX_ERR(0, 760, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_edgeRatio = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getSparsifiedGraphOfSize", 0, 3, 4, __pyx_nargs); __PYX_ERR(0, 760, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.getSparsifiedGraphOfSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_10Sparsifier_8getSparsifiedGraphOfSize(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_edgeRatio, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_8getSparsifiedGraphOfSize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_edgeRatio, PyObject *__pyx_v_attribute) {
  PyObject *__pyx_v_parameter = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getSparsifiedGraphOfSize", 0);
  __Pyx_INCREF(__pyx_v_attribute);

  /* "networkit/sparsification.pyx":782
 * 			The sparsified graph.
 * 		"""
 * 		if attribute is None:             # <<<<<<<<<<<<<<
 * 			attribute = self.scores(G)
 * 
 */
  __pyx_t_1 = (__pyx_v_attribute == Py_None);
  if (__pyx_t_1) {

    /* "networkit/sparsification.pyx":783
 * 		"""
 * 		if attribute is None:
 * 			attribute = self.scores(G)             # <<<<<<<<<<<<<<
 * 
 * 		parameter = self.getParameter(G, edgeRatio, attribute)
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_scores); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 783, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_G};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 783, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF_SET(__pyx_v_attribute, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "networkit/sparsification.pyx":782
 * 			The sparsified graph.
 * 		"""
 * 		if attribute is None:             # <<<<<<<<<<<<<<
 * 			attribute = self.scores(G)
 * 
 */
  }

  /* "networkit/sparsification.pyx":785
 * 			attribute = self.scores(G)
 * 
 * 		parameter = self.getParameter(G, edgeRatio, attribute)             # <<<<<<<<<<<<<<
 * 
 * 		return self.getSparsifiedGraph(G, parameter, attribute)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_getParameter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_v_G, __pyx_v_edgeRatio, __pyx_v_attribute};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_parameter = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":787
 * 		parameter = self.getParameter(G, edgeRatio, attribute)
 * 
 * 		return self.getSparsifiedGraph(G, parameter, attribute)             # <<<<<<<<<<<<<<
 * 
 * 	def getParameter(self, G, edgeRatio, attribute=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_getSparsifiedGraph_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_4, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 787, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":760
 * 		return self._getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getSparsifiedGraphOfSize(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraphOfSize(G, edgeRatio, attribute=None)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.getSparsifiedGraphOfSize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_parameter);
  __Pyx_XDECREF(__pyx_v_attribute);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":789
 * 		return self.getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getParameter(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getParameter(G, edgeRatio, attribute=None)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_11getParameter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_10Sparsifier_10getParameter, " \n\t\tgetParameter(G, edgeRatio, attribute=None)\n\t\t\n\t\tThis is a convenience function that applies an appropriate parameterization\n\t\talgorithm (if available) to obtain a parameter value that yields a sparsified\n\t\tgraph of the desired size.\n\t\t\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\tedgeRatio : float\n\t\t\tThe target edge ratio.\n\t\tattribute : list(float), optional\n\t\t\tA previously calculated edge attribute. If none is provided, we will try to calculate it. Default: None\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_10Sparsifier_11getParameter = {"getParameter", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_10Sparsifier_11getParameter, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_10Sparsifier_10getParameter};
static PyObject *__pyx_pw_9networkit_14sparsification_10Sparsifier_11getParameter(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_edgeRatio = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getParameter (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_edgeRatio,&__pyx_n_s_attribute,0};
    values[3] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)Py_None));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("getParameter", 0, 3, 4, 1); __PYX_ERR(0, 789, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_edgeRatio)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("getParameter", 0, 3, 4, 2); __PYX_ERR(0, 789, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute);
          if (value) { values[3] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "getParameter") < 0)) __PYX_ERR(0, 789, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_edgeRatio = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getParameter", 0, 3, 4, __pyx_nargs); __PYX_ERR(0, 789, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.getParameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_10Sparsifier_10getParameter(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_edgeRatio, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_10Sparsifier_10getParameter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_edgeRatio, PyObject *__pyx_v_attribute) {
  PyObject *__pyx_v_paramAlgorithm = NULL;
  PyObject *__pyx_v_parameter = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getParameter", 0);
  __Pyx_INCREF(__pyx_v_attribute);

  /* "networkit/sparsification.pyx":806
 * 			A previously calculated edge attribute. If none is provided, we will try to calculate it. Default: None
 * 		"""
 * 		if attribute is None:             # <<<<<<<<<<<<<<
 * 			attribute = self.scores(G)
 * 
 */
  __pyx_t_1 = (__pyx_v_attribute == Py_None);
  if (__pyx_t_1) {

    /* "networkit/sparsification.pyx":807
 * 		"""
 * 		if attribute is None:
 * 			attribute = self.scores(G)             # <<<<<<<<<<<<<<
 * 
 * 		paramAlgorithm = self._getParameterizationAlgorithm()
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_scores); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 807, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_G};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF_SET(__pyx_v_attribute, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "networkit/sparsification.pyx":806
 * 			A previously calculated edge attribute. If none is provided, we will try to calculate it. Default: None
 * 		"""
 * 		if attribute is None:             # <<<<<<<<<<<<<<
 * 			attribute = self.scores(G)
 * 
 */
  }

  /* "networkit/sparsification.pyx":809
 * 			attribute = self.scores(G)
 * 
 * 		paramAlgorithm = self._getParameterizationAlgorithm()             # <<<<<<<<<<<<<<
 * 		parameter = paramAlgorithm.parameterize(self, G, attribute, edgeRatio)
 * 		return parameter
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_getParameterizationAlgorithm); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 809, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_paramAlgorithm = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":810
 * 
 * 		paramAlgorithm = self._getParameterizationAlgorithm()
 * 		parameter = paramAlgorithm.parameterize(self, G, attribute, edgeRatio)             # <<<<<<<<<<<<<<
 * 		return parameter
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_paramAlgorithm, __pyx_n_s_parameterize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 810, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_4, __pyx_v_self, __pyx_v_G, __pyx_v_attribute, __pyx_v_edgeRatio};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 4+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_parameter = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":811
 * 		paramAlgorithm = self._getParameterizationAlgorithm()
 * 		parameter = paramAlgorithm.parameterize(self, G, attribute, edgeRatio)
 * 		return parameter             # <<<<<<<<<<<<<<
 * 
 * class SimpleParameterization:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_parameter);
  __pyx_r = __pyx_v_parameter;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":789
 * 		return self.getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getParameter(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getParameter(G, edgeRatio, attribute=None)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.Sparsifier.getParameter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_paramAlgorithm);
  __Pyx_XDECREF(__pyx_v_parameter);
  __Pyx_XDECREF(__pyx_v_attribute);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":823
 * 	"""
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_22SimpleParameterization_1parameterize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_22SimpleParameterization_parameterize, " \n\t\tparameterize(algorithm, G, attribute, edgeRatio)\n\t\t\n\t\tParameterize the given sparsifier for the given input graph with the\n\t\tgiven target edge ratio. (To be implemented by derived class.)\n\n\t\tParameters\n\t\t----------\n\t\talgorithm : networkit.sparsification.Sparsifier\n\t\t\tThe sparsification algorithm.\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\tattribute : list(float)\n\t\t\tAn input edge attribute.\n\t\tedgeRatio : float\n\t\t\tThe target edge ratio.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_22SimpleParameterization_1parameterize = {"parameterize", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_22SimpleParameterization_1parameterize, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_22SimpleParameterization_parameterize};
static PyObject *__pyx_pw_9networkit_14sparsification_22SimpleParameterization_1parameterize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_algorithm = 0;
  CYTHON_UNUSED PyObject *__pyx_v_G = 0;
  CYTHON_UNUSED PyObject *__pyx_v_attribute = 0;
  PyObject *__pyx_v_edgeRatio = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parameterize (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_algorithm,&__pyx_n_s_G,&__pyx_n_s_attribute,&__pyx_n_s_edgeRatio,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 823, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_algorithm)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 823, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 1); __PYX_ERR(0, 823, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 823, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 2); __PYX_ERR(0, 823, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 823, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 3); __PYX_ERR(0, 823, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_edgeRatio)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[4]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 823, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 4); __PYX_ERR(0, 823, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "parameterize") < 0)) __PYX_ERR(0, 823, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 5)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
    }
    __pyx_v_self = values[0];
    __pyx_v_algorithm = values[1];
    __pyx_v_G = values[2];
    __pyx_v_attribute = values[3];
    __pyx_v_edgeRatio = values[4];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, __pyx_nargs); __PYX_ERR(0, 823, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimpleParameterization.parameterize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_22SimpleParameterization_parameterize(__pyx_self, __pyx_v_self, __pyx_v_algorithm, __pyx_v_G, __pyx_v_attribute, __pyx_v_edgeRatio);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_22SimpleParameterization_parameterize(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_algorithm, CYTHON_UNUSED PyObject *__pyx_v_G, CYTHON_UNUSED PyObject *__pyx_v_attribute, PyObject *__pyx_v_edgeRatio) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parameterize", 1);

  /* "networkit/sparsification.pyx":841
 * 			The target edge ratio.
 * 		"""
 * 		return edgeRatio             # <<<<<<<<<<<<<<
 * 
 * class BinarySearchParameterization:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_edgeRatio);
  __pyx_r = __pyx_v_edgeRatio;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":823
 * 	"""
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":861
 * 	"""
 * 
 * 	def __init__(self, sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps):             # <<<<<<<<<<<<<<
 * 
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_28BinarySearchParameterization_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_28BinarySearchParameterization_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_28BinarySearchParameterization_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_28BinarySearchParameterization_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_sizeIncreasesWithParameter = 0;
  PyObject *__pyx_v_lowerParameterBound = 0;
  PyObject *__pyx_v_upperParameterBound = 0;
  PyObject *__pyx_v_maxSteps = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_sizeIncreasesWithParameter,&__pyx_n_s_lowerParameterBound,&__pyx_n_s_upperParameterBound,&__pyx_n_s_maxSteps,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sizeIncreasesWithParameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 1); __PYX_ERR(0, 861, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lowerParameterBound)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 2); __PYX_ERR(0, 861, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_upperParameterBound)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 3); __PYX_ERR(0, 861, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_maxSteps)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[4]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 861, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, 4); __PYX_ERR(0, 861, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 861, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 5)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
    }
    __pyx_v_self = values[0];
    __pyx_v_sizeIncreasesWithParameter = values[1];
    __pyx_v_lowerParameterBound = values[2];
    __pyx_v_upperParameterBound = values[3];
    __pyx_v_maxSteps = values[4];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 5, 5, __pyx_nargs); __PYX_ERR(0, 861, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.BinarySearchParameterization.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_28BinarySearchParameterization___init__(__pyx_self, __pyx_v_self, __pyx_v_sizeIncreasesWithParameter, __pyx_v_lowerParameterBound, __pyx_v_upperParameterBound, __pyx_v_maxSteps);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_28BinarySearchParameterization___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_sizeIncreasesWithParameter, PyObject *__pyx_v_lowerParameterBound, PyObject *__pyx_v_upperParameterBound, PyObject *__pyx_v_maxSteps) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":863
 * 	def __init__(self, sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps):
 * 
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter             # <<<<<<<<<<<<<<
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sizeIncreasesWithParameter, __pyx_v_sizeIncreasesWithParameter) < 0) __PYX_ERR(0, 863, __pyx_L1_error)

  /* "networkit/sparsification.pyx":864
 * 
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter
 * 		self.lowerParameterBound = lowerParameterBound             # <<<<<<<<<<<<<<
 * 		self.upperParameterBound = upperParameterBound
 * 		self.maxSteps = maxSteps
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound, __pyx_v_lowerParameterBound) < 0) __PYX_ERR(0, 864, __pyx_L1_error)

  /* "networkit/sparsification.pyx":865
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound             # <<<<<<<<<<<<<<
 * 		self.maxSteps = maxSteps
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_upperParameterBound, __pyx_v_upperParameterBound) < 0) __PYX_ERR(0, 865, __pyx_L1_error)

  /* "networkit/sparsification.pyx":866
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound
 * 		self.maxSteps = maxSteps             # <<<<<<<<<<<<<<
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_maxSteps, __pyx_v_maxSteps) < 0) __PYX_ERR(0, 866, __pyx_L1_error)

  /* "networkit/sparsification.pyx":861
 * 	"""
 * 
 * 	def __init__(self, sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps):             # <<<<<<<<<<<<<<
 * 
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.BinarySearchParameterization.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":868
 * 		self.maxSteps = maxSteps
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_28BinarySearchParameterization_3parameterize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_28BinarySearchParameterization_2parameterize, " \n\t\tparameterize(algorithm, G, attribute, edgeRatio)\n\t\t\n\t\tParameterize the given sparsifier for the given input graph with the\n\t\tgiven target edge ratio. (To be implemented by derived class.)\n\n\t\tParameters\n\t\t----------\n\t\talgorithm : networkit.sparsification.Sparsifier\n\t\t\tThe sparsification algorithm.\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\tattribute : list(float)\n\t\t\tAn input edge attribute.\n\t\tedgeRatio : float\n\t\t\tThe target edge ratio.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_28BinarySearchParameterization_3parameterize = {"parameterize", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_28BinarySearchParameterization_3parameterize, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_28BinarySearchParameterization_2parameterize};
static PyObject *__pyx_pw_9networkit_14sparsification_28BinarySearchParameterization_3parameterize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_algorithm = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_attribute = 0;
  PyObject *__pyx_v_edgeRatio = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parameterize (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_algorithm,&__pyx_n_s_G,&__pyx_n_s_attribute,&__pyx_n_s_edgeRatio,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 868, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_algorithm)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 868, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 1); __PYX_ERR(0, 868, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 868, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 2); __PYX_ERR(0, 868, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 868, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 3); __PYX_ERR(0, 868, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_edgeRatio)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[4]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 868, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 4); __PYX_ERR(0, 868, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "parameterize") < 0)) __PYX_ERR(0, 868, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 5)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
    }
    __pyx_v_self = values[0];
    __pyx_v_algorithm = values[1];
    __pyx_v_G = values[2];
    __pyx_v_attribute = values[3];
    __pyx_v_edgeRatio = values[4];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, __pyx_nargs); __PYX_ERR(0, 868, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.BinarySearchParameterization.parameterize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_28BinarySearchParameterization_2parameterize(__pyx_self, __pyx_v_self, __pyx_v_algorithm, __pyx_v_G, __pyx_v_attribute, __pyx_v_edgeRatio);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_28BinarySearchParameterization_2parameterize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_algorithm, PyObject *__pyx_v_G, PyObject *__pyx_v_attribute, PyObject *__pyx_v_edgeRatio) {
  PyObject *__pyx_v_lowerBound = NULL;
  PyObject *__pyx_v_upperBound = NULL;
  PyObject *__pyx_v_estimation = NULL;
  PyObject *__pyx_v_bestParameter = NULL;
  PyObject *__pyx_v_minDistance = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_sparsified = NULL;
  PyObject *__pyx_v_currentEdgeRatio = NULL;
  PyObject *__pyx_v_distance = NULL;
  PyObject *__pyx_v_increase = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parameterize", 1);

  /* "networkit/sparsification.pyx":886
 * 			The target edge ratio.
 * 		"""
 * 		lowerBound = self.lowerParameterBound             # <<<<<<<<<<<<<<
 * 		upperBound = self.upperParameterBound
 * 		estimation = self.lowerParameterBound
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_lowerBound = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":887
 * 		"""
 * 		lowerBound = self.lowerParameterBound
 * 		upperBound = self.upperParameterBound             # <<<<<<<<<<<<<<
 * 		estimation = self.lowerParameterBound
 * 		bestParameter = self.lowerParameterBound
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_upperParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_upperBound = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":888
 * 		lowerBound = self.lowerParameterBound
 * 		upperBound = self.upperParameterBound
 * 		estimation = self.lowerParameterBound             # <<<<<<<<<<<<<<
 * 		bestParameter = self.lowerParameterBound
 * 		minDistance = self.upperParameterBound
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_estimation = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":889
 * 		upperBound = self.upperParameterBound
 * 		estimation = self.lowerParameterBound
 * 		bestParameter = self.lowerParameterBound             # <<<<<<<<<<<<<<
 * 		minDistance = self.upperParameterBound
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 889, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_bestParameter = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":890
 * 		estimation = self.lowerParameterBound
 * 		bestParameter = self.lowerParameterBound
 * 		minDistance = self.upperParameterBound             # <<<<<<<<<<<<<<
 * 
 * 		for i in range(0, self.maxSteps):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_upperParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_minDistance = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":892
 * 		minDistance = self.upperParameterBound
 * 
 * 		for i in range(0, self.maxSteps):             # <<<<<<<<<<<<<<
 * 			estimation = (lowerBound + upperBound) / 2.0
 * 			sparsified = algorithm._getSparsifiedGraph(G, estimation, attribute)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_maxSteps); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_int_0)) __PYX_ERR(0, 892, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 892, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 892, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_2);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 892, __pyx_L1_error)
          #endif
          if (__pyx_t_3 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely((0 < 0))) __PYX_ERR(0, 892, __pyx_L1_error)
        #else
        __pyx_t_1 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_2);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 892, __pyx_L1_error)
          #endif
          if (__pyx_t_3 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely((0 < 0))) __PYX_ERR(0, 892, __pyx_L1_error)
        #else
        __pyx_t_1 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 892, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "networkit/sparsification.pyx":893
 * 
 * 		for i in range(0, self.maxSteps):
 * 			estimation = (lowerBound + upperBound) / 2.0             # <<<<<<<<<<<<<<
 * 			sparsified = algorithm._getSparsifiedGraph(G, estimation, attribute)
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 */
    __pyx_t_1 = PyNumber_Add(__pyx_v_lowerBound, __pyx_v_upperBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_1, __pyx_float_2_0, 2.0, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 893, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_estimation, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "networkit/sparsification.pyx":894
 * 		for i in range(0, self.maxSteps):
 * 			estimation = (lowerBound + upperBound) / 2.0
 * 			sparsified = algorithm._getSparsifiedGraph(G, estimation, attribute)             # <<<<<<<<<<<<<<
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_algorithm, __pyx_n_s_getSparsifiedGraph); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_v_G, __pyx_v_estimation, __pyx_v_attribute};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 894, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_sparsified, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "networkit/sparsification.pyx":895
 * 			estimation = (lowerBound + upperBound) / 2.0
 * 			sparsified = algorithm._getSparsifiedGraph(G, estimation, attribute)
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()             # <<<<<<<<<<<<<<
 * 
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_sparsified, __pyx_n_s_numberOfEdges); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 895, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_numberOfEdges); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_8, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 895, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 895, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_currentEdgeRatio, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "networkit/sparsification.pyx":897
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 * 
 * 			distance = abs(currentEdgeRatio - edgeRatio)             # <<<<<<<<<<<<<<
 * 
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:
 */
    __pyx_t_6 = PyNumber_Subtract(__pyx_v_currentEdgeRatio, __pyx_v_edgeRatio); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyNumber_Absolute(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_distance, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "networkit/sparsification.pyx":899
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 * 
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:             # <<<<<<<<<<<<<<
 * 				minDistance = distance
 * 				bestParameter = estimation
 */
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_distance, __pyx_v_minDistance, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 899, __pyx_L1_error)
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_10) {
    } else {
      __pyx_t_9 = __pyx_t_10;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_1 = __Pyx_PyNumber_Absolute(__pyx_v_currentEdgeRatio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_ABS_ZERO); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_6, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_9 = __pyx_t_10;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_9) {

      /* "networkit/sparsification.pyx":900
 * 
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:
 * 				minDistance = distance             # <<<<<<<<<<<<<<
 * 				bestParameter = estimation
 * 
 */
      __Pyx_INCREF(__pyx_v_distance);
      __Pyx_DECREF_SET(__pyx_v_minDistance, __pyx_v_distance);

      /* "networkit/sparsification.pyx":901
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:
 * 				minDistance = distance
 * 				bestParameter = estimation             # <<<<<<<<<<<<<<
 * 
 * 				#"Exact" hit?
 */
      __Pyx_INCREF(__pyx_v_estimation);
      __Pyx_DECREF_SET(__pyx_v_bestParameter, __pyx_v_estimation);

      /* "networkit/sparsification.pyx":904
 * 
 * 				#"Exact" hit?
 * 				if abs(currentEdgeRatio - edgeRatio) < _ABS_ZERO:             # <<<<<<<<<<<<<<
 * 					break;
 * 
 */
      __pyx_t_5 = PyNumber_Subtract(__pyx_v_currentEdgeRatio, __pyx_v_edgeRatio); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 904, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyNumber_Absolute(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 904, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_ABS_ZERO); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 904, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 904, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 904, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_9) {

        /* "networkit/sparsification.pyx":905
 * 				#"Exact" hit?
 * 				if abs(currentEdgeRatio - edgeRatio) < _ABS_ZERO:
 * 					break;             # <<<<<<<<<<<<<<
 * 
 * 			increase = (currentEdgeRatio < edgeRatio)
 */
        goto __pyx_L4_break;

        /* "networkit/sparsification.pyx":904
 * 
 * 				#"Exact" hit?
 * 				if abs(currentEdgeRatio - edgeRatio) < _ABS_ZERO:             # <<<<<<<<<<<<<<
 * 					break;
 * 
 */
      }

      /* "networkit/sparsification.pyx":899
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 * 
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:             # <<<<<<<<<<<<<<
 * 				minDistance = distance
 * 				bestParameter = estimation
 */
    }

    /* "networkit/sparsification.pyx":907
 * 					break;
 * 
 * 			increase = (currentEdgeRatio < edgeRatio)             # <<<<<<<<<<<<<<
 * 			if not self.sizeIncreasesWithParameter:
 * 				increase = not increase
 */
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_currentEdgeRatio, __pyx_v_edgeRatio, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 907, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_increase, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "networkit/sparsification.pyx":908
 * 
 * 			increase = (currentEdgeRatio < edgeRatio)
 * 			if not self.sizeIncreasesWithParameter:             # <<<<<<<<<<<<<<
 * 				increase = not increase
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sizeIncreasesWithParameter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 908, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_9 < 0))) __PYX_ERR(0, 908, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_10 = (!__pyx_t_9);
    if (__pyx_t_10) {

      /* "networkit/sparsification.pyx":909
 * 			increase = (currentEdgeRatio < edgeRatio)
 * 			if not self.sizeIncreasesWithParameter:
 * 				increase = not increase             # <<<<<<<<<<<<<<
 * 
 * 			if increase:
 */
      __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_increase); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 909, __pyx_L1_error)
      __pyx_t_1 = __Pyx_PyBool_FromLong((!__pyx_t_10)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 909, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF_SET(__pyx_v_increase, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "networkit/sparsification.pyx":908
 * 
 * 			increase = (currentEdgeRatio < edgeRatio)
 * 			if not self.sizeIncreasesWithParameter:             # <<<<<<<<<<<<<<
 * 				increase = not increase
 * 
 */
    }

    /* "networkit/sparsification.pyx":911
 * 				increase = not increase
 * 
 * 			if increase:             # <<<<<<<<<<<<<<
 * 				lowerBound = estimation
 * 			else:
 */
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_increase); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 911, __pyx_L1_error)
    if (__pyx_t_10) {

      /* "networkit/sparsification.pyx":912
 * 
 * 			if increase:
 * 				lowerBound = estimation             # <<<<<<<<<<<<<<
 * 			else:
 * 				upperBound = estimation
 */
      __Pyx_INCREF(__pyx_v_estimation);
      __Pyx_DECREF_SET(__pyx_v_lowerBound, __pyx_v_estimation);

      /* "networkit/sparsification.pyx":911
 * 				increase = not increase
 * 
 * 			if increase:             # <<<<<<<<<<<<<<
 * 				lowerBound = estimation
 * 			else:
 */
      goto __pyx_L10;
    }

    /* "networkit/sparsification.pyx":914
 * 				lowerBound = estimation
 * 			else:
 * 				upperBound = estimation             # <<<<<<<<<<<<<<
 * 
 * 		return bestParameter
 */
    /*else*/ {
      __Pyx_INCREF(__pyx_v_estimation);
      __Pyx_DECREF_SET(__pyx_v_upperBound, __pyx_v_estimation);
    }
    __pyx_L10:;

    /* "networkit/sparsification.pyx":892
 * 		minDistance = self.upperParameterBound
 * 
 * 		for i in range(0, self.maxSteps):             # <<<<<<<<<<<<<<
 * 			estimation = (lowerBound + upperBound) / 2.0
 * 			sparsified = algorithm._getSparsifiedGraph(G, estimation, attribute)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  goto __pyx_L11_for_end;
  __pyx_L4_break:;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  goto __pyx_L11_for_end;
  __pyx_L11_for_end:;

  /* "networkit/sparsification.pyx":916
 * 				upperBound = estimation
 * 
 * 		return bestParameter             # <<<<<<<<<<<<<<
 * 
 * class CompleteSearchParameterization:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_bestParameter);
  __pyx_r = __pyx_v_bestParameter;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":868
 * 		self.maxSteps = maxSteps
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("networkit.sparsification.BinarySearchParameterization.parameterize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_lowerBound);
  __Pyx_XDECREF(__pyx_v_upperBound);
  __Pyx_XDECREF(__pyx_v_estimation);
  __Pyx_XDECREF(__pyx_v_bestParameter);
  __Pyx_XDECREF(__pyx_v_minDistance);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_sparsified);
  __Pyx_XDECREF(__pyx_v_currentEdgeRatio);
  __Pyx_XDECREF(__pyx_v_distance);
  __Pyx_XDECREF(__pyx_v_increase);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":934
 * 	"""
 * 
 * 	def __init__(self, lowerParameterBound, upperParameterBound):             # <<<<<<<<<<<<<<
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_30CompleteSearchParameterization_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_30CompleteSearchParameterization_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_30CompleteSearchParameterization_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_30CompleteSearchParameterization_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_lowerParameterBound = 0;
  PyObject *__pyx_v_upperParameterBound = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_lowerParameterBound,&__pyx_n_s_upperParameterBound,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 934, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_lowerParameterBound)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 934, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 934, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_upperParameterBound)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 934, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 934, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 934, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_lowerParameterBound = values[1];
    __pyx_v_upperParameterBound = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 934, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.CompleteSearchParameterization.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_30CompleteSearchParameterization___init__(__pyx_self, __pyx_v_self, __pyx_v_lowerParameterBound, __pyx_v_upperParameterBound);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_30CompleteSearchParameterization___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_lowerParameterBound, PyObject *__pyx_v_upperParameterBound) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":935
 * 
 * 	def __init__(self, lowerParameterBound, upperParameterBound):
 * 		self.lowerParameterBound = lowerParameterBound             # <<<<<<<<<<<<<<
 * 		self.upperParameterBound = upperParameterBound
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound, __pyx_v_lowerParameterBound) < 0) __PYX_ERR(0, 935, __pyx_L1_error)

  /* "networkit/sparsification.pyx":936
 * 	def __init__(self, lowerParameterBound, upperParameterBound):
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound             # <<<<<<<<<<<<<<
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_upperParameterBound, __pyx_v_upperParameterBound) < 0) __PYX_ERR(0, 936, __pyx_L1_error)

  /* "networkit/sparsification.pyx":934
 * 	"""
 * 
 * 	def __init__(self, lowerParameterBound, upperParameterBound):             # <<<<<<<<<<<<<<
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.CompleteSearchParameterization.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":938
 * 		self.upperParameterBound = upperParameterBound
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_30CompleteSearchParameterization_3parameterize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_30CompleteSearchParameterization_2parameterize, " \n\t\tparameterize(algorithm, G, attribute, edgeRatio)\n\t\t\n\t\tParameterize the given sparsifier for the given input graph with the\n\t\tgiven target edge ratio. (To be implemented by derived class.)\n\n\t\tParameters\n\t\t----------\n\t\talgorithm : networkit.sparsification.Sparsifier\n\t\t\tThe sparsification algorithm.\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\tattribute : list(float)\n\t\t\tAn input edge attribute.\n\t\tedgeRatio : float\n\t\t\tThe target edge ratio.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_30CompleteSearchParameterization_3parameterize = {"parameterize", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_30CompleteSearchParameterization_3parameterize, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_30CompleteSearchParameterization_2parameterize};
static PyObject *__pyx_pw_9networkit_14sparsification_30CompleteSearchParameterization_3parameterize(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_algorithm = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_attribute = 0;
  PyObject *__pyx_v_edgeRatio = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("parameterize (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_algorithm,&__pyx_n_s_G,&__pyx_n_s_attribute,&__pyx_n_s_edgeRatio,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_algorithm)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 1); __PYX_ERR(0, 938, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 2); __PYX_ERR(0, 938, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 3); __PYX_ERR(0, 938, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_edgeRatio)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[4]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, 4); __PYX_ERR(0, 938, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "parameterize") < 0)) __PYX_ERR(0, 938, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 5)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
      values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
    }
    __pyx_v_self = values[0];
    __pyx_v_algorithm = values[1];
    __pyx_v_G = values[2];
    __pyx_v_attribute = values[3];
    __pyx_v_edgeRatio = values[4];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("parameterize", 1, 5, 5, __pyx_nargs); __PYX_ERR(0, 938, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.CompleteSearchParameterization.parameterize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_30CompleteSearchParameterization_2parameterize(__pyx_self, __pyx_v_self, __pyx_v_algorithm, __pyx_v_G, __pyx_v_attribute, __pyx_v_edgeRatio);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_30CompleteSearchParameterization_2parameterize(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_algorithm, PyObject *__pyx_v_G, PyObject *__pyx_v_attribute, PyObject *__pyx_v_edgeRatio) {
  PyObject *__pyx_v_bestParameter = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_bestRatio = NULL;
  PyObject *__pyx_v_minDistance = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_sparsified = NULL;
  PyObject *__pyx_v_currentEdgeRatio = NULL;
  PyObject *__pyx_v_distance = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("parameterize", 1);

  /* "networkit/sparsification.pyx":956
 * 			The target edge ratio.
 * 		"""
 * 		bestParameter = self.lowerParameterBound             # <<<<<<<<<<<<<<
 * 		bestRatio = 0.0
 * 		minDistance = 100.0
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 956, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_bestParameter = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":957
 * 		"""
 * 		bestParameter = self.lowerParameterBound
 * 		bestRatio = 0.0             # <<<<<<<<<<<<<<
 * 		minDistance = 100.0
 * 
 */
  __Pyx_INCREF(__pyx_float_0_0);
  __pyx_v_bestRatio = __pyx_float_0_0;

  /* "networkit/sparsification.pyx":958
 * 		bestParameter = self.lowerParameterBound
 * 		bestRatio = 0.0
 * 		minDistance = 100.0             # <<<<<<<<<<<<<<
 * 
 * 		for i in range(self.lowerParameterBound, self.upperParameterBound + 1):
 */
  __Pyx_INCREF(__pyx_float_100_0);
  __pyx_v_minDistance = __pyx_float_100_0;

  /* "networkit/sparsification.pyx":960
 * 		minDistance = 100.0
 * 
 * 		for i in range(self.lowerParameterBound, self.upperParameterBound + 1):             # <<<<<<<<<<<<<<
 * 			sparsified = algorithm._getSparsifiedGraph(G, i, attribute)
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_lowerParameterBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_upperParameterBound); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1)) __PYX_ERR(0, 960, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2);
    __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 960, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_2);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 960, __pyx_L1_error)
          #endif
          if (__pyx_t_4 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 960, __pyx_L1_error)
        #else
        __pyx_t_3 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_2);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 960, __pyx_L1_error)
          #endif
          if (__pyx_t_4 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 960, __pyx_L1_error)
        #else
        __pyx_t_3 = __Pyx_PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 960, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "networkit/sparsification.pyx":961
 * 
 * 		for i in range(self.lowerParameterBound, self.upperParameterBound + 1):
 * 			sparsified = algorithm._getSparsifiedGraph(G, i, attribute)             # <<<<<<<<<<<<<<
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_algorithm, __pyx_n_s_getSparsifiedGraph); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_v_G, __pyx_v_i, __pyx_v_attribute};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 961, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_sparsified, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "networkit/sparsification.pyx":962
 * 		for i in range(self.lowerParameterBound, self.upperParameterBound + 1):
 * 			sparsified = algorithm._getSparsifiedGraph(G, i, attribute)
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()             # <<<<<<<<<<<<<<
 * 
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_sparsified, __pyx_n_s_numberOfEdges); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_numberOfEdges); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_8, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_currentEdgeRatio, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "networkit/sparsification.pyx":964
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 * 
 * 			distance = abs(currentEdgeRatio - edgeRatio)             # <<<<<<<<<<<<<<
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:
 * 				minDistance = distance
 */
    __pyx_t_6 = PyNumber_Subtract(__pyx_v_currentEdgeRatio, __pyx_v_edgeRatio); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyNumber_Absolute(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 964, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_distance, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "networkit/sparsification.pyx":965
 * 
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:             # <<<<<<<<<<<<<<
 * 				minDistance = distance
 * 				bestParameter = i
 */
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_distance, __pyx_v_minDistance, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 965, __pyx_L1_error)
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_10) {
    } else {
      __pyx_t_9 = __pyx_t_10;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_1 = __Pyx_PyNumber_Absolute(__pyx_v_currentEdgeRatio); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_ABS_ZERO); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_6, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 965, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_9 = __pyx_t_10;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_9) {

      /* "networkit/sparsification.pyx":966
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:
 * 				minDistance = distance             # <<<<<<<<<<<<<<
 * 				bestParameter = i
 * 				bestRatio = currentEdgeRatio
 */
      __Pyx_INCREF(__pyx_v_distance);
      __Pyx_DECREF_SET(__pyx_v_minDistance, __pyx_v_distance);

      /* "networkit/sparsification.pyx":967
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:
 * 				minDistance = distance
 * 				bestParameter = i             # <<<<<<<<<<<<<<
 * 				bestRatio = currentEdgeRatio
 * 
 */
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_DECREF_SET(__pyx_v_bestParameter, __pyx_v_i);

      /* "networkit/sparsification.pyx":968
 * 				minDistance = distance
 * 				bestParameter = i
 * 				bestRatio = currentEdgeRatio             # <<<<<<<<<<<<<<
 * 
 * 		return bestParameter
 */
      __Pyx_INCREF(__pyx_v_currentEdgeRatio);
      __Pyx_DECREF_SET(__pyx_v_bestRatio, __pyx_v_currentEdgeRatio);

      /* "networkit/sparsification.pyx":965
 * 
 * 			distance = abs(currentEdgeRatio - edgeRatio)
 * 			if distance < minDistance and abs(currentEdgeRatio) > _ABS_ZERO:             # <<<<<<<<<<<<<<
 * 				minDistance = distance
 * 				bestParameter = i
 */
    }

    /* "networkit/sparsification.pyx":960
 * 		minDistance = 100.0
 * 
 * 		for i in range(self.lowerParameterBound, self.upperParameterBound + 1):             # <<<<<<<<<<<<<<
 * 			sparsified = algorithm._getSparsifiedGraph(G, i, attribute)
 * 			currentEdgeRatio = sparsified.numberOfEdges() / G.numberOfEdges()
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":970
 * 				bestRatio = currentEdgeRatio
 * 
 * 		return bestParameter             # <<<<<<<<<<<<<<
 * 
 * def getRankAttribute(attribute, reverse = False):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_bestParameter);
  __pyx_r = __pyx_v_bestParameter;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":938
 * 		self.upperParameterBound = upperParameterBound
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("networkit.sparsification.CompleteSearchParameterization.parameterize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_bestParameter);
  __Pyx_XDECREF(__pyx_v_bestRatio);
  __Pyx_XDECREF(__pyx_v_minDistance);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_sparsified);
  __Pyx_XDECREF(__pyx_v_currentEdgeRatio);
  __Pyx_XDECREF(__pyx_v_distance);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":972
 * 		return bestParameter
 * 
 * def getRankAttribute(attribute, reverse = False):             # <<<<<<<<<<<<<<
 * 	"""
 * 	getRankAttribute(attribute, reverse=False)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_1getRankAttribute(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_getRankAttribute, " \n\tgetRankAttribute(attribute, reverse=False)\n\t\n\tTakes as input an attribute (node or edge) and returns an attribute where\n\teach node is assigned its rank among all others according to the attribute values.\n\tThe node/edge with lowest input value is assigned 0, the one with second-lowest\n\tvalue 1, and so on.\n\n\tParameters\n\t----------\n\tattribute : list(float)\n\t\tThe input node/edge attribute\n\treverse : bool, optional\n\t\tReverses the ranking, if set to True. Default: False\n\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_1getRankAttribute = {"getRankAttribute", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_1getRankAttribute, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_getRankAttribute};
static PyObject *__pyx_pw_9networkit_14sparsification_1getRankAttribute(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_attribute = 0;
  PyObject *__pyx_v_reverse = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getRankAttribute (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_attribute,&__pyx_n_s_reverse,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject *)Py_False)));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reverse);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "getRankAttribute") < 0)) __PYX_ERR(0, 972, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_attribute = values[0];
    __pyx_v_reverse = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getRankAttribute", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 972, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.getRankAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_getRankAttribute(__pyx_self, __pyx_v_attribute, __pyx_v_reverse);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":993
 * 
 * 	_attribute = zip([x for x in range(0, len(attribute))], attribute)
 * 	_attribute = sorted(_attribute, key=lambda x: x[1], reverse=reverse)             # <<<<<<<<<<<<<<
 * 
 * 	_index = 0
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_16getRankAttribute_lambda(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_16getRankAttribute_lambda = {"lambda", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16getRankAttribute_lambda, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_16getRankAttribute_lambda(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_x = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_x)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 993, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "lambda") < 0)) __PYX_ERR(0, 993, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_x = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("lambda", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 993, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.getRankAttribute.lambda", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_lambda_funcdef_lambda(__pyx_self, __pyx_v_x);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda", 1);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_x, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("networkit.sparsification.getRankAttribute.lambda", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":972
 * 		return bestParameter
 * 
 * def getRankAttribute(attribute, reverse = False):             # <<<<<<<<<<<<<<
 * 	"""
 * 	getRankAttribute(attribute, reverse=False)
 */

static PyObject *__pyx_pf_9networkit_14sparsification_getRankAttribute(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_attribute, PyObject *__pyx_v_reverse) {
  PyObject *__pyx_v__attribute = NULL;
  PyObject *__pyx_v__index = NULL;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_v_i = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_v = NULL;
  Py_ssize_t __pyx_7genexpr__pyx_v_x;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getRankAttribute", 1);

  /* "networkit/sparsification.pyx":992
 * 	#Example output: [1, 0, 3, 2]
 * 
 * 	_attribute = zip([x for x in range(0, len(attribute))], attribute)             # <<<<<<<<<<<<<<
 * 	_attribute = sorted(_attribute, key=lambda x: x[1], reverse=reverse)
 * 
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Length(__pyx_v_attribute); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 992, __pyx_L1_error)
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_7genexpr__pyx_v_x = __pyx_t_4;
      __pyx_t_5 = PyInt_FromSsize_t(__pyx_7genexpr__pyx_v_x); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 992, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 992, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
  } /* exit inner scope */
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1)) __PYX_ERR(0, 992, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_attribute)) __PYX_ERR(0, 992, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v__attribute = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":993
 * 
 * 	_attribute = zip([x for x in range(0, len(attribute))], attribute)
 * 	_attribute = sorted(_attribute, key=lambda x: x[1], reverse=reverse)             # <<<<<<<<<<<<<<
 * 
 * 	_index = 0
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v__attribute);
  __Pyx_GIVEREF(__pyx_v__attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__attribute)) __PYX_ERR(0, 993, __pyx_L1_error);
  __pyx_t_5 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16getRankAttribute_lambda, 0, __pyx_n_s_getRankAttribute_locals_lambda, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_key, __pyx_t_6) < 0) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_reverse, __pyx_v_reverse) < 0) __PYX_ERR(0, 993, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_sorted, __pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF_SET(__pyx_v__attribute, __pyx_t_6);
  __pyx_t_6 = 0;

  /* "networkit/sparsification.pyx":995
 * 	_attribute = sorted(_attribute, key=lambda x: x[1], reverse=reverse)
 * 
 * 	_index = 0             # <<<<<<<<<<<<<<
 * 	result = [0] * len(attribute)
 * 	for (i, v) in _attribute:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v__index = __pyx_int_0;

  /* "networkit/sparsification.pyx":996
 * 
 * 	_index = 0
 * 	result = [0] * len(attribute)             # <<<<<<<<<<<<<<
 * 	for (i, v) in _attribute:
 * 		result[i] = _index
 */
  __pyx_t_2 = PyObject_Length(__pyx_v_attribute); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 996, __pyx_L1_error)
  __pyx_t_6 = PyList_New(1 * ((__pyx_t_2<0) ? 0:__pyx_t_2)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  { Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < __pyx_t_2; __pyx_temp++) {
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_GIVEREF(__pyx_int_0);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_6, __pyx_temp, __pyx_int_0)) __PYX_ERR(0, 996, __pyx_L1_error);
    }
  }
  __pyx_v_result = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "networkit/sparsification.pyx":997
 * 	_index = 0
 * 	result = [0] * len(attribute)
 * 	for (i, v) in _attribute:             # <<<<<<<<<<<<<<
 * 		result[i] = _index
 * 		_index = _index + 1
 */
  if (likely(PyList_CheckExact(__pyx_v__attribute)) || PyTuple_CheckExact(__pyx_v__attribute)) {
    __pyx_t_6 = __pyx_v__attribute; __Pyx_INCREF(__pyx_t_6);
    __pyx_t_2 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_v__attribute); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 997, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_7)) {
      if (likely(PyList_CheckExact(__pyx_t_6))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_6);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 997, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_2); __Pyx_INCREF(__pyx_t_5); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 997, __pyx_L1_error)
        #else
        __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_6, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 997, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_6);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 997, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_2); __Pyx_INCREF(__pyx_t_5); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 997, __pyx_L1_error)
        #else
        __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_6, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 997, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      }
    } else {
      __pyx_t_5 = __pyx_t_7(__pyx_t_6);
      if (unlikely(!__pyx_t_5)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 997, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_5))) || (PyList_CheckExact(__pyx_t_5))) {
      PyObject* sequence = __pyx_t_5;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 997, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_8 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      #else
      __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 997, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 997, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      #endif
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_9 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 997, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_9);
      index = 0; __pyx_t_1 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_1)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_1);
      index = 1; __pyx_t_8 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_8)) goto __pyx_L7_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_8);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 2) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L8_unpacking_done;
      __pyx_L7_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 997, __pyx_L1_error)
      __pyx_L8_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "networkit/sparsification.pyx":998
 * 	result = [0] * len(attribute)
 * 	for (i, v) in _attribute:
 * 		result[i] = _index             # <<<<<<<<<<<<<<
 * 		_index = _index + 1
 * 
 */
    if (unlikely((PyObject_SetItem(__pyx_v_result, __pyx_v_i, __pyx_v__index) < 0))) __PYX_ERR(0, 998, __pyx_L1_error)

    /* "networkit/sparsification.pyx":999
 * 	for (i, v) in _attribute:
 * 		result[i] = _index
 * 		_index = _index + 1             # <<<<<<<<<<<<<<
 * 
 * 	return result
 */
    __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_v__index, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 999, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF_SET(__pyx_v__index, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "networkit/sparsification.pyx":997
 * 	_index = 0
 * 	result = [0] * len(attribute)
 * 	for (i, v) in _attribute:             # <<<<<<<<<<<<<<
 * 		result[i] = _index
 * 		_index = _index + 1
 */
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "networkit/sparsification.pyx":1001
 * 		_index = _index + 1
 * 
 * 	return result             # <<<<<<<<<<<<<<
 * 
 * class SimmelianSparsifierParametric(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":972
 * 		return bestParameter
 * 
 * def getRankAttribute(attribute, reverse = False):             # <<<<<<<<<<<<<<
 * 	"""
 * 	getRankAttribute(attribute, reverse=False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("networkit.sparsification.getRankAttribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v__attribute);
  __Pyx_XDECREF(__pyx_v__index);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1011
 * 	"""
 * 
 * 	def __init__(self, maxRank):             # <<<<<<<<<<<<<<
 * 		self.maxRank = maxRank
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_maxRank = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_maxRank,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_maxRank)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1011, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 1011, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1011, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_maxRank = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1011, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric___init__(__pyx_self, __pyx_v_self, __pyx_v_maxRank);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_maxRank) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1012
 * 
 * 	def __init__(self, maxRank):
 * 		self.maxRank = maxRank             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_maxRank, __pyx_v_maxRank) < 0) __PYX_ERR(0, 1012, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1011
 * 	"""
 * 
 * 	def __init__(self, maxRank):             # <<<<<<<<<<<<<<
 * 		self.maxRank = maxRank
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1014
 * 		self.maxRank = maxRank
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_29SimmelianSparsifierParametric_2scores, " \n\t\tscores(G)\t\t\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_29SimmelianSparsifierParametric_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1014, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1014, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1014, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1014, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1014, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_triangles = NULL;
  struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *__pyx_v_simmelianOverlap = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1026
 * 			The input graph.
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 
 * 		simmelianOverlap = SimmelianOverlapScore(G, triangles, self.maxRank)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_triangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1028
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 
 * 		simmelianOverlap = SimmelianOverlapScore(G, triangles, self.maxRank)             # <<<<<<<<<<<<<<
 * 		simmelianOverlap.run()
 * 		return simmelianOverlap.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_maxRank); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_G)) __PYX_ERR(0, 1028, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_triangles);
  __Pyx_GIVEREF(__pyx_v_triangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_triangles)) __PYX_ERR(0, 1028, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore), __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_simmelianOverlap = ((struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1029
 * 
 * 		simmelianOverlap = SimmelianOverlapScore(G, triangles, self.maxRank)
 * 		simmelianOverlap.run()             # <<<<<<<<<<<<<<
 * 		return simmelianOverlap.scores()
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_simmelianOverlap), __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1030
 * 		simmelianOverlap = SimmelianOverlapScore(G, triangles, self.maxRank)
 * 		simmelianOverlap.run()
 * 		return simmelianOverlap.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_simmelianOverlap), __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1030, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1030, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1014
 * 		self.maxRank = maxRank
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_triangles);
  __Pyx_XDECREF((PyObject *)__pyx_v_simmelianOverlap);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1032
 * 		return simmelianOverlap.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_5_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_5_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1032, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1032, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1032, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1032, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1032, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1032, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1032, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1032, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1032, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_4_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1033
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1033, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1033, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1033, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1033, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1033, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1033, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1034
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1034, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1032
 * 		return simmelianOverlap.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1036
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return CompleteSearchParameterization(0, self.maxRank)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_7_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_7_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianSparsifierParametric_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1036, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1036, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_6_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianSparsifierParametric_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1037
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return CompleteSearchParameterization(0, self.maxRank)             # <<<<<<<<<<<<<<
 * 
 * class SimmelianSparsifierNonParametric(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_CompleteSearchParameterization); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_maxRank); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_int_0, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1036
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return CompleteSearchParameterization(0, self.maxRank)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierParametric._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1047
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_32SimmelianSparsifierNonParametric_scores, " \n\t\tscores(G)\t\t\n\n\t\tReturns an edge attribute that holds for each edge the minimum jaccard filter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_32SimmelianSparsifierNonParametric_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_32SimmelianSparsifierNonParametric_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1047, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1047, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1047, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1047, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierNonParametric.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_triangles = NULL;
  PyObject *__pyx_v_a_sj = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1059
 * 			The input graph.
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 		a_sj = PrefixJaccardScore(G, triangles).run().scores()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1059, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1059, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_triangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1060
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 		a_sj = PrefixJaccardScore(G, triangles).run().scores()             # <<<<<<<<<<<<<<
 * 
 * 		return a_sj
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_G)) __PYX_ERR(0, 1060, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_triangles);
  __Pyx_GIVEREF(__pyx_v_triangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_triangles)) __PYX_ERR(0, 1060, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1060, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_scores); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_a_sj = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1062
 * 		a_sj = PrefixJaccardScore(G, triangles).run().scores()
 * 
 * 		return a_sj             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_a_sj);
  __pyx_r = __pyx_v_a_sj;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1047
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierNonParametric.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_triangles);
  __Pyx_XDECREF(__pyx_v_a_sj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1064
 * 		return a_sj
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_32SimmelianSparsifierNonParametric_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1064, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1064, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1064, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1064, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1064, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1064, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierNonParametric._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1065
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1065, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1065, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1065, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1065, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1066
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1066, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1066, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1064
 * 		return a_sj
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierNonParametric._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1068
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_32SimmelianSparsifierNonParametric_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_32SimmelianSparsifierNonParametric_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1068, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1068, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1068, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierNonParametric._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_32SimmelianSparsifierNonParametric_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1069
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class QuadrilateralSimmelianSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1068
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianSparsifierNonParametric._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1078
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_scores, "\n\t\tscores(G)\n\n\t\tReturns an edge scoring attribute that can be used for global filtering.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1078, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1078, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1078, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1078, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1078, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.QuadrilateralSimmelianSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_quadrangles = NULL;
  PyObject *__pyx_v_meanQuadrangles = NULL;
  PyObject *__pyx_v_quadranglePrefixJaccard = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1089
 * 			The input graph.
 * 		"""
 * 		quadrangles = ChibaNishizekiQuadrangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 		meanQuadrangles = GeometricMeanScore(G, quadrangles).run().scores()
 * 		quadranglePrefixJaccard = PrefixJaccardScore(G, meanQuadrangles).run().scores()
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1089, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_quadrangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1090
 * 		"""
 * 		quadrangles = ChibaNishizekiQuadrangleEdgeScore(G).run().scores()
 * 		meanQuadrangles = GeometricMeanScore(G, quadrangles).run().scores()             # <<<<<<<<<<<<<<
 * 		quadranglePrefixJaccard = PrefixJaccardScore(G, meanQuadrangles).run().scores()
 * 		return quadranglePrefixJaccard
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_G)) __PYX_ERR(0, 1090, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_quadrangles);
  __Pyx_GIVEREF(__pyx_v_quadrangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_quadrangles)) __PYX_ERR(0, 1090, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GeometricMeanScore), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_scores); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1090, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1090, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_meanQuadrangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1091
 * 		quadrangles = ChibaNishizekiQuadrangleEdgeScore(G).run().scores()
 * 		meanQuadrangles = GeometricMeanScore(G, quadrangles).run().scores()
 * 		quadranglePrefixJaccard = PrefixJaccardScore(G, meanQuadrangles).run().scores()             # <<<<<<<<<<<<<<
 * 		return quadranglePrefixJaccard
 * 
 */
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_G)) __PYX_ERR(0, 1091, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_meanQuadrangles);
  __Pyx_GIVEREF(__pyx_v_meanQuadrangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_meanQuadrangles)) __PYX_ERR(0, 1091, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1091, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_quadranglePrefixJaccard = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1092
 * 		meanQuadrangles = GeometricMeanScore(G, quadrangles).run().scores()
 * 		quadranglePrefixJaccard = PrefixJaccardScore(G, meanQuadrangles).run().scores()
 * 		return quadranglePrefixJaccard             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_quadranglePrefixJaccard);
  __pyx_r = __pyx_v_quadranglePrefixJaccard;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1078
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.QuadrilateralSimmelianSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_quadrangles);
  __Pyx_XDECREF(__pyx_v_meanQuadrangles);
  __Pyx_XDECREF(__pyx_v_quadranglePrefixJaccard);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1094
 * 		return quadranglePrefixJaccard
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1094, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1094, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1094, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1094, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1094, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1094, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.QuadrilateralSimmelianSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1095
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1095, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1095, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1095, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1095, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1096
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1096, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1094
 * 		return quadranglePrefixJaccard
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.QuadrilateralSimmelianSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1098
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1098, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1098, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1098, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.QuadrilateralSimmelianSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1099
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class SimmelianMultiscaleSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1098
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.QuadrilateralSimmelianSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1108
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_scores, " \n\t\tscores(G)\t\t\n\n\t\tReturns an edge attribute that holds for each edge the maximum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1108, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1108, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1108, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1108, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1108, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianMultiscaleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_triangles = NULL;
  struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_ms = NULL;
  PyObject *__pyx_v_a_ms = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1120
 * 			The input graph.
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 		ms = MultiscaleScore(G, triangles)
 * 		ms.run()
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1120, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_triangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1121
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 		ms = MultiscaleScore(G, triangles)             # <<<<<<<<<<<<<<
 * 		ms.run()
 * 		a_ms = ms.scores()
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1121, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_triangles);
  __Pyx_GIVEREF(__pyx_v_triangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_triangles)) __PYX_ERR(0, 1121, __pyx_L1_error);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_MultiscaleScore), __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ms = ((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1122
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 		ms = MultiscaleScore(G, triangles)
 * 		ms.run()             # <<<<<<<<<<<<<<
 * 		a_ms = ms.scores()
 * 		return a_ms
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ms), __pyx_n_s_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1123
 * 		ms = MultiscaleScore(G, triangles)
 * 		ms.run()
 * 		a_ms = ms.scores()             # <<<<<<<<<<<<<<
 * 		return a_ms
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ms), __pyx_n_s_scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_a_ms = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1124
 * 		ms.run()
 * 		a_ms = ms.scores()
 * 		return a_ms             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_a_ms);
  __pyx_r = __pyx_v_a_ms;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1108
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianMultiscaleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_triangles);
  __Pyx_XDECREF((PyObject *)__pyx_v_ms);
  __Pyx_XDECREF(__pyx_v_a_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1126
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1126, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1126, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1126, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1126, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1126, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1126, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1126, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianMultiscaleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1127
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1127, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1127, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1127, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1127, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1128
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1128, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1126
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianMultiscaleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1130
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1130, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1130, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1130, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SimmelianMultiscaleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1131
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class DegreeMultiscaleSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1130
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.SimmelianMultiscaleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1145
 * 	"""
 * 
 * 	def __init__(self, degsToAttrValue):             # <<<<<<<<<<<<<<
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_degsToAttrValue = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_degsToAttrValue,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_degsToAttrValue)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1145, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_degsToAttrValue = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1145, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier___init__(__pyx_self, __pyx_v_self, __pyx_v_degsToAttrValue);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_degsToAttrValue) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1146
 * 
 * 	def __init__(self, degsToAttrValue):
 * 		self.degsToAttrValue = degsToAttrValue             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_degsToAttrValue, __pyx_v_degsToAttrValue) < 0) __PYX_ERR(0, 1146, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1145
 * 	"""
 * 
 * 	def __init__(self, degsToAttrValue):             # <<<<<<<<<<<<<<
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1148
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_26DegreeMultiscaleSparsifier_2scores, " \n\t\tscores(G)\t\t\n\n\t\tReturns an edge attribute that holds for each edge the maximum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_26DegreeMultiscaleSparsifier_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1148, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1148, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1148, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1148, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1148, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_inputAttribute = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_v_y = NULL;
  struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_ms = NULL;
  PyObject *__pyx_v_a_ms = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1161
 * 		"""
 * 
 * 		inputAttribute = [0] * G.upperEdgeIdBound()             # <<<<<<<<<<<<<<
 * 		for x, y in G.iterEdges():
 * 			inputAttribute[G.edgeId(x,y)] = self.degsToAttrValue(G.degree(x), G.degree(y))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_upperEdgeIdBound); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_int_0)) __PYX_ERR(0, 1161, __pyx_L1_error);
  { PyObject* __pyx_temp = PyNumber_InPlaceMultiply(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_temp)) __PYX_ERR(0, 1161, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_temp);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_temp;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_inputAttribute = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1162
 * 
 * 		inputAttribute = [0] * G.upperEdgeIdBound()
 * 		for x, y in G.iterEdges():             # <<<<<<<<<<<<<<
 * 			inputAttribute[G.edgeId(x,y)] = self.degsToAttrValue(G.degree(x), G.degree(y))
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_iterEdges); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1162, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1162, __pyx_L1_error)
          #endif
          if (__pyx_t_5 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 1162, __pyx_L1_error)
        #else
        __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1162, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1162, __pyx_L1_error)
          #endif
          if (__pyx_t_5 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 1162, __pyx_L1_error)
        #else
        __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1162, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_6(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1162, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1162, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_8 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_8);
      index = 0; __pyx_t_3 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_7 = __pyx_t_9(__pyx_t_8); if (unlikely(!__pyx_t_7)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_7);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_9(__pyx_t_8), 2) < 0) __PYX_ERR(0, 1162, __pyx_L1_error)
      __pyx_t_9 = NULL;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1162, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_x, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_y, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "networkit/sparsification.pyx":1163
 * 		inputAttribute = [0] * G.upperEdgeIdBound()
 * 		for x, y in G.iterEdges():
 * 			inputAttribute[G.edgeId(x,y)] = self.degsToAttrValue(G.degree(x), G.degree(y))             # <<<<<<<<<<<<<<
 * 
 * 		ms = MultiscaleScore(G, inputAttribute)
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_degsToAttrValue); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_degree); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_10 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_v_x};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1163, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_degree); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_v_y};
      __pyx_t_8 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1163, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __pyx_t_10 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_t_3, __pyx_t_8};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1163, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_edgeId); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1163, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_x, __pyx_v_y};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1163, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    if (unlikely((PyObject_SetItem(__pyx_v_inputAttribute, __pyx_t_7, __pyx_t_2) < 0))) __PYX_ERR(0, 1163, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "networkit/sparsification.pyx":1162
 * 
 * 		inputAttribute = [0] * G.upperEdgeIdBound()
 * 		for x, y in G.iterEdges():             # <<<<<<<<<<<<<<
 * 			inputAttribute[G.edgeId(x,y)] = self.degsToAttrValue(G.degree(x), G.degree(y))
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1165
 * 			inputAttribute[G.edgeId(x,y)] = self.degsToAttrValue(G.degree(x), G.degree(y))
 * 
 * 		ms = MultiscaleScore(G, inputAttribute)             # <<<<<<<<<<<<<<
 * 		ms.run()
 * 		a_ms = ms.scores()
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1165, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_inputAttribute);
  __Pyx_GIVEREF(__pyx_v_inputAttribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_inputAttribute)) __PYX_ERR(0, 1165, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_MultiscaleScore), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ms = ((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1166
 * 
 * 		ms = MultiscaleScore(G, inputAttribute)
 * 		ms.run()             # <<<<<<<<<<<<<<
 * 		a_ms = ms.scores()
 * 		return a_ms
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ms), __pyx_n_s_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_7, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1167
 * 		ms = MultiscaleScore(G, inputAttribute)
 * 		ms.run()
 * 		a_ms = ms.scores()             # <<<<<<<<<<<<<<
 * 		return a_ms
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ms), __pyx_n_s_scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_7, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_a_ms = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1168
 * 		ms.run()
 * 		a_ms = ms.scores()
 * 		return a_ms             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_a_ms);
  __pyx_r = __pyx_v_a_ms;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1148
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_inputAttribute);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XDECREF(__pyx_v_y);
  __Pyx_XDECREF((PyObject *)__pyx_v_ms);
  __Pyx_XDECREF(__pyx_v_a_ms);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1170
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_5_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_5_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1170, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1170, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1170, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1170, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1170, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1170, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1170, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1170, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1170, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_4_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1171
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1171, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1171, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1171, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1171, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1172
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1170
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1174
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_7_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_7_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_26DegreeMultiscaleSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1174, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1174, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1174, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_6_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_26DegreeMultiscaleSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1175
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class JaccardSimilaritySparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1174
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.DegreeMultiscaleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1184
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_27JaccardSimilaritySparsifier_scores, " \n\t\tscores(G)\t\t\n\n\t\tReturns the jaccard coefficient of the neighborhoods of the two incident nodes.\n\t\t\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27JaccardSimilaritySparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_27JaccardSimilaritySparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1184, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1184, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1184, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1184, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.JaccardSimilaritySparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_triangles = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1195
 * 			The input graph.
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 		return JaccardSimilarityAttributizer(G, triangles).getAttribute()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1195, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_triangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1196
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 		return JaccardSimilarityAttributizer(G, triangles).getAttribute()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_JaccardSimilarityAttributizer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_G, __pyx_v_triangles};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_getAttribute); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1196, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1184
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.JaccardSimilaritySparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_triangles);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1198
 * 		return JaccardSimilarityAttributizer(G, triangles).getAttribute()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27JaccardSimilaritySparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1198, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1198, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1198, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1198, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1198, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1198, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.JaccardSimilaritySparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1199
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1199, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1199, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1199, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1199, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1200
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1198
 * 		return JaccardSimilarityAttributizer(G, triangles).getAttribute()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.JaccardSimilaritySparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1202
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27JaccardSimilaritySparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_27JaccardSimilaritySparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1202, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1202, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1202, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.JaccardSimilaritySparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27JaccardSimilaritySparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1203
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1202
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.JaccardSimilaritySparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1213
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_25LocalSimilaritySparsifier_scores, "\n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_25LocalSimilaritySparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_25LocalSimilaritySparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1213, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1213, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1213, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1213, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1213, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilaritySparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_triangles = NULL;
  struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *__pyx_v_localSimScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1225
 * 			The input graph.
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 		localSimScore = LocalSimilarityScore(G, triangles)
 * 		localSimScore.run()
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_triangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1226
 * 		"""
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 		localSimScore = LocalSimilarityScore(G, triangles)             # <<<<<<<<<<<<<<
 * 		localSimScore.run()
 * 		return localSimScore.scores()
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1226, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_triangles);
  __Pyx_GIVEREF(__pyx_v_triangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_triangles)) __PYX_ERR(0, 1226, __pyx_L1_error);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore), __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_localSimScore = ((struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1227
 * 		triangles = TriangleEdgeScore(G).run().scores()
 * 		localSimScore = LocalSimilarityScore(G, triangles)
 * 		localSimScore.run()             # <<<<<<<<<<<<<<
 * 		return localSimScore.scores()
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_localSimScore), __pyx_n_s_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1228
 * 		localSimScore = LocalSimilarityScore(G, triangles)
 * 		localSimScore.run()
 * 		return localSimScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_localSimScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1228, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1213
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilaritySparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_triangles);
  __Pyx_XDECREF((PyObject *)__pyx_v_localSimScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1230
 * 		return localSimScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_25LocalSimilaritySparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1230, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1230, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1230, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1230, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1230, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1230, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1230, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1230, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1230, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilaritySparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1231
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1231, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1231, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1231, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1231, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1232
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1232, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1230
 * 		return localSimScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilaritySparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1234
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_25LocalSimilaritySparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_25LocalSimilaritySparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1234, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1234, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1234, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilaritySparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_25LocalSimilaritySparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1235
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class MultiscaleSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1234
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.LocalSimilaritySparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1244
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_20MultiscaleSparsifier_scores, " \n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20MultiscaleSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_20MultiscaleSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1244, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1244, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1244, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1244, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_inputAttribute = NULL;
  PyObject *__pyx_v_u = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_w = NULL;
  PyObject *__pyx_v_edgeId = NULL;
  struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *__pyx_v_scorer = NULL;
  PyObject *__pyx_v_scores = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1257
 * 		"""
 * 
 * 		inputAttribute = [0.0] * G.upperEdgeIdBound()             # <<<<<<<<<<<<<<
 * 		for u, v, w in G.iterEdgesWeights():
 * 			edgeId = G.edgeId(u, v)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_upperEdgeIdBound); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_float_0_0);
  __Pyx_GIVEREF(__pyx_float_0_0);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_float_0_0)) __PYX_ERR(0, 1257, __pyx_L1_error);
  { PyObject* __pyx_temp = PyNumber_InPlaceMultiply(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_temp)) __PYX_ERR(0, 1257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_temp);
    __Pyx_DECREF(__pyx_t_2);
    __pyx_t_2 = __pyx_temp;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_inputAttribute = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1258
 * 
 * 		inputAttribute = [0.0] * G.upperEdgeIdBound()
 * 		for u, v, w in G.iterEdgesWeights():             # <<<<<<<<<<<<<<
 * 			edgeId = G.edgeId(u, v)
 * 			inputAttribute[edgeId] = w
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_iterEdgesWeights); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1258, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1258, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1258, __pyx_L1_error)
          #endif
          if (__pyx_t_5 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 1258, __pyx_L1_error)
        #else
        __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1258, __pyx_L1_error)
          #endif
          if (__pyx_t_5 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 1258, __pyx_L1_error)
        #else
        __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_6(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1258, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 3)) {
        if (size > 3) __Pyx_RaiseTooManyValuesError(3);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 1258, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyTuple_GET_ITEM(sequence, 1); 
        __pyx_t_8 = PyTuple_GET_ITEM(sequence, 2); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_7 = PyList_GET_ITEM(sequence, 1); 
        __pyx_t_8 = PyList_GET_ITEM(sequence, 2); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_9 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_9);
      index = 0; __pyx_t_3 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_7 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_7)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_7);
      index = 2; __pyx_t_8 = __pyx_t_10(__pyx_t_9); if (unlikely(!__pyx_t_8)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_8);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_9), 3) < 0) __PYX_ERR(0, 1258, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 1258, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_u, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_w, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "networkit/sparsification.pyx":1259
 * 		inputAttribute = [0.0] * G.upperEdgeIdBound()
 * 		for u, v, w in G.iterEdgesWeights():
 * 			edgeId = G.edgeId(u, v)             # <<<<<<<<<<<<<<
 * 			inputAttribute[edgeId] = w
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_edgeId); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1259, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_7 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_v_u, __pyx_v_v};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1259, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_edgeId, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "networkit/sparsification.pyx":1260
 * 		for u, v, w in G.iterEdgesWeights():
 * 			edgeId = G.edgeId(u, v)
 * 			inputAttribute[edgeId] = w             # <<<<<<<<<<<<<<
 * 
 * 		scorer = MultiscaleScore(G, inputAttribute)
 */
    if (unlikely((PyObject_SetItem(__pyx_v_inputAttribute, __pyx_v_edgeId, __pyx_v_w) < 0))) __PYX_ERR(0, 1260, __pyx_L1_error)

    /* "networkit/sparsification.pyx":1258
 * 
 * 		inputAttribute = [0.0] * G.upperEdgeIdBound()
 * 		for u, v, w in G.iterEdgesWeights():             # <<<<<<<<<<<<<<
 * 			edgeId = G.edgeId(u, v)
 * 			inputAttribute[edgeId] = w
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1262
 * 			inputAttribute[edgeId] = w
 * 
 * 		scorer = MultiscaleScore(G, inputAttribute)             # <<<<<<<<<<<<<<
 * 		scorer.run()
 * 		scores = scorer.scores()
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1262, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_inputAttribute);
  __Pyx_GIVEREF(__pyx_v_inputAttribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_inputAttribute)) __PYX_ERR(0, 1262, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_MultiscaleScore), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_scorer = ((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1263
 * 
 * 		scorer = MultiscaleScore(G, inputAttribute)
 * 		scorer.run()             # <<<<<<<<<<<<<<
 * 		scores = scorer.scores()
 * 		return scores
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_scorer), __pyx_n_s_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1263, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1264
 * 		scorer = MultiscaleScore(G, inputAttribute)
 * 		scorer.run()
 * 		scores = scorer.scores()             # <<<<<<<<<<<<<<
 * 		return scores
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_scorer), __pyx_n_s_scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_scores = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1265
 * 		scorer.run()
 * 		scores = scorer.scores()
 * 		return scores             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_scores);
  __pyx_r = __pyx_v_scores;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1244
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_inputAttribute);
  __Pyx_XDECREF(__pyx_v_u);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_w);
  __Pyx_XDECREF(__pyx_v_edgeId);
  __Pyx_XDECREF((PyObject *)__pyx_v_scorer);
  __Pyx_XDECREF(__pyx_v_scores);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1267
 * 		return scores
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20MultiscaleSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1267, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1267, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1267, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1267, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1267, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1267, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1268
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1268, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1268, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1268, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1268, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1269
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1267
 * 		return scores
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1271
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20MultiscaleSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20MultiscaleSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1271, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1271, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1271, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20MultiscaleSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1272
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class RandomEdgeSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1271
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.MultiscaleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1281
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_20RandomEdgeSparsifier_scores, " \n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20RandomEdgeSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_20RandomEdgeSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1281, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1281, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1281, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1281, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1281, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *__pyx_v_reScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1294
 * 		"""
 * 
 * 		reScore = RandomEdgeScore(G)             # <<<<<<<<<<<<<<
 * 		reScore.run()
 * 		return reScore.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_RandomEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_reScore = ((struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1295
 * 
 * 		reScore = RandomEdgeScore(G)
 * 		reScore.run()             # <<<<<<<<<<<<<<
 * 		return reScore.scores()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reScore), __pyx_n_s_run); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1296
 * 		reScore = RandomEdgeScore(G)
 * 		reScore.run()
 * 		return reScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1296, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1296, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1281
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_reScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1298
 * 		return reScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, False)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20RandomEdgeSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1298, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1298, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1298, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1298, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1298, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1299
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, False)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1299, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1299, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1299, __pyx_L1_error);
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_False)) __PYX_ERR(0, 1299, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1300
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, False)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1300, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1298
 * 		return reScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, False)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1302
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return SimpleParameterization()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20RandomEdgeSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20RandomEdgeSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1302, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1302, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1302, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20RandomEdgeSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1303
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return SimpleParameterization()             # <<<<<<<<<<<<<<
 * 
 * class RandomNodeEdgeSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SimpleParameterization); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1303, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1302
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return SimpleParameterization()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.RandomEdgeSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1318
 * 	"""
 * 
 * 	def __init__(self, above = True):             # <<<<<<<<<<<<<<
 * 		self.above = above
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_above = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_above,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject *)Py_True)));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1318, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_above);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1318, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1318, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_above = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1318, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier___init__(__pyx_self, __pyx_v_self, __pyx_v_above);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_above) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1319
 * 
 * 	def __init__(self, above = True):
 * 		self.above = above             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_above, __pyx_v_above) < 0) __PYX_ERR(0, 1319, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1318
 * 	"""
 * 
 * 	def __init__(self, above = True):             # <<<<<<<<<<<<<<
 * 		self.above = above
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1321
 * 		self.above = above
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_24RandomNodeEdgeSparsifier_2scores, " \n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_24RandomNodeEdgeSparsifier_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1321, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1321, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1321, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1321, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1321, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *__pyx_v_rneScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1334
 * 		"""
 * 
 * 		rneScore = RandomNodeEdgeScore(G)             # <<<<<<<<<<<<<<
 * 		rneScore.run()
 * 		return rneScore.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_rneScore = ((struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1335
 * 
 * 		rneScore = RandomNodeEdgeScore(G)
 * 		rneScore.run()             # <<<<<<<<<<<<<<
 * 		return rneScore.scores()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rneScore), __pyx_n_s_run); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1336
 * 		rneScore = RandomNodeEdgeScore(G)
 * 		rneScore.run()
 * 		return rneScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rneScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1321
 * 		self.above = above
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rneScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1338
 * 		return rneScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, self.above)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_5_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_5_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1338, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1338, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1338, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1338, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1338, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1338, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1338, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1338, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1338, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_4_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1339
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, self.above)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_above); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_G)) __PYX_ERR(0, 1339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_attribute)) __PYX_ERR(0, 1339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_parameter)) __PYX_ERR(0, 1339, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_1)) __PYX_ERR(0, 1339, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1340
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, self.above)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1338
 * 		return rneScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, self.above)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1342
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_7_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_7_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_24RandomNodeEdgeSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1342, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1342, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1342, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_6_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_24RandomNodeEdgeSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1343
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class ForestFireSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_above); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1343, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyBool_FromLong((!__pyx_t_4)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[5] = {__pyx_t_5, __pyx_t_3, __pyx_float_0_0, __pyx_float_1_0, __pyx_int_20};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_6, 4+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1342
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("networkit.sparsification.RandomNodeEdgeSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1359
 * 	"""
 * 
 * 	def __init__(self, burnProbability, targetBurntRatio):             # <<<<<<<<<<<<<<
 * 		self.burnProbability = burnProbability
 * 		self.targetBurntRatio = targetBurntRatio
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_burnProbability = 0;
  PyObject *__pyx_v_targetBurntRatio = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_burnProbability,&__pyx_n_s_targetBurntRatio,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_burnProbability)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 1359, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_targetBurntRatio)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1359, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 1359, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1359, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_self = values[0];
    __pyx_v_burnProbability = values[1];
    __pyx_v_targetBurntRatio = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1359, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20ForestFireSparsifier___init__(__pyx_self, __pyx_v_self, __pyx_v_burnProbability, __pyx_v_targetBurntRatio);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_burnProbability, PyObject *__pyx_v_targetBurntRatio) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1360
 * 
 * 	def __init__(self, burnProbability, targetBurntRatio):
 * 		self.burnProbability = burnProbability             # <<<<<<<<<<<<<<
 * 		self.targetBurntRatio = targetBurntRatio
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_burnProbability, __pyx_v_burnProbability) < 0) __PYX_ERR(0, 1360, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1361
 * 	def __init__(self, burnProbability, targetBurntRatio):
 * 		self.burnProbability = burnProbability
 * 		self.targetBurntRatio = targetBurntRatio             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_targetBurntRatio, __pyx_v_targetBurntRatio) < 0) __PYX_ERR(0, 1361, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1359
 * 	"""
 * 
 * 	def __init__(self, burnProbability, targetBurntRatio):             # <<<<<<<<<<<<<<
 * 		self.burnProbability = burnProbability
 * 		self.targetBurntRatio = targetBurntRatio
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1363
 * 		self.targetBurntRatio = targetBurntRatio
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_20ForestFireSparsifier_2scores, " \n\t\tscores(G)\n\t\t\n\t\tReturns an edge attribute that holds for each edge the maximum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_20ForestFireSparsifier_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1363, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1363, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1363, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1363, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1363, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  struct __pyx_obj_9networkit_14sparsification_ForestFireScore *__pyx_v_ffScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1376
 * 		"""
 * 
 * 		ffScore = ForestFireScore(G, self.burnProbability, self.targetBurntRatio)             # <<<<<<<<<<<<<<
 * 		ffScore.run()
 * 		return ffScore.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_burnProbability); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_targetBurntRatio); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_G)) __PYX_ERR(0, 1376, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1)) __PYX_ERR(0, 1376, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_2);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_ForestFireScore), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_ffScore = ((struct __pyx_obj_9networkit_14sparsification_ForestFireScore *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1377
 * 
 * 		ffScore = ForestFireScore(G, self.burnProbability, self.targetBurntRatio)
 * 		ffScore.run()             # <<<<<<<<<<<<<<
 * 		return ffScore.scores()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffScore), __pyx_n_s_run); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1378
 * 		ffScore = ForestFireScore(G, self.burnProbability, self.targetBurntRatio)
 * 		ffScore.run()
 * 		return ffScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ffScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1378, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1363
 * 		self.targetBurntRatio = targetBurntRatio
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ffScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1380
 * 		return ffScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_5_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_5_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1380, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1380, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1380, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1380, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1380, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1380, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1380, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1380, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1380, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_4_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1381
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1381, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1381, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1381, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1381, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1382
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1382, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1380
 * 		return ffScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1384
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_7_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_7_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_20ForestFireSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1384, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1384, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1384, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_6_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_20ForestFireSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1385
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class LocalDegreeSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1384
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.ForestFireSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1394
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_21LocalDegreeSparsifier_scores, " \n\t\tscores(G)\n\t\t\n\t\tReturns an edge score that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21LocalDegreeSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_21LocalDegreeSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1394, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1394, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1394, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1394, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1394, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *__pyx_v_localDegree = NULL;
  PyObject *__pyx_v_localDegreeScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1407
 * 		"""
 * 
 * 		localDegree = LocalDegreeScore(G)             # <<<<<<<<<<<<<<
 * 		localDegree.run()
 * 		localDegreeScore = localDegree.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_LocalDegreeScore), __pyx_v_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_localDegree = ((struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1408
 * 
 * 		localDegree = LocalDegreeScore(G)
 * 		localDegree.run()             # <<<<<<<<<<<<<<
 * 		localDegreeScore = localDegree.scores()
 * 		return localDegreeScore
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_localDegree), __pyx_n_s_run); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1408, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1409
 * 		localDegree = LocalDegreeScore(G)
 * 		localDegree.run()
 * 		localDegreeScore = localDegree.scores()             # <<<<<<<<<<<<<<
 * 		return localDegreeScore
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_localDegree), __pyx_n_s_scores); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1409, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_localDegreeScore = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1410
 * 		localDegree.run()
 * 		localDegreeScore = localDegree.scores()
 * 		return localDegreeScore             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_localDegreeScore);
  __pyx_r = __pyx_v_localDegreeScore;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1394
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_localDegree);
  __Pyx_XDECREF(__pyx_v_localDegreeScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1412
 * 		return localDegreeScore
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21LocalDegreeSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1412, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1412, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1412, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1412, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1412, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1412, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1412, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1412, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1413
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1413, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1413, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1413, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1413, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1414
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1414, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1414, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1412
 * 		return localDegreeScore
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1416
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_21LocalDegreeSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_21LocalDegreeSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1416, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1416, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1416, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_21LocalDegreeSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1417
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class SCANSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1417, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1416
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.LocalDegreeSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1426
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_14SCANSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_14SCANSparsifier_scores, "\n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_14SCANSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_14SCANSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_14SCANSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_14SCANSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1426, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1426, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1426, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1426, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1426, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SCANSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_14SCANSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_14SCANSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_a_triangles = NULL;
  struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *__pyx_v_scanScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1438
 * 			The input graph.
 * 		"""
 * 		a_triangles = TriangleEdgeScore(G).run().scores()             # <<<<<<<<<<<<<<
 * 
 * 		scanScore = SCANStructuralSimilarityScore(G, a_triangles)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_run); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1438, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1438, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_a_triangles = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1440
 * 		a_triangles = TriangleEdgeScore(G).run().scores()
 * 
 * 		scanScore = SCANStructuralSimilarityScore(G, a_triangles)             # <<<<<<<<<<<<<<
 * 		scanScore.run()
 * 
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1440, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_a_triangles);
  __Pyx_GIVEREF(__pyx_v_a_triangles);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_a_triangles)) __PYX_ERR(0, 1440, __pyx_L1_error);
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore), __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_scanScore = ((struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1441
 * 
 * 		scanScore = SCANStructuralSimilarityScore(G, a_triangles)
 * 		scanScore.run()             # <<<<<<<<<<<<<<
 * 
 * 		return scanScore.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_scanScore), __pyx_n_s_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1443
 * 		scanScore.run()
 * 
 * 		return scanScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_scanScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1426
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.SCANSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a_triangles);
  __Pyx_XDECREF((PyObject *)__pyx_v_scanScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1445
 * 		return scanScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_14SCANSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_14SCANSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_14SCANSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_14SCANSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1445, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1445, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1445, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1445, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1445, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1445, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1445, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1445, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1445, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SCANSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_14SCANSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_14SCANSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1446
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1446, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1446, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1446, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1446, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1446, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1447
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1445
 * 		return scanScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.SCANSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1449
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_14SCANSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_14SCANSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_14SCANSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_14SCANSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1449, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1449, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1449, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.SCANSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_14SCANSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_14SCANSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1450
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class TriangleSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1449
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.SCANSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1459
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_18TriangleSparsifier_scores, " \n\t\tscores(G)\n\n\t\tReturns the triangle counts of the input graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18TriangleSparsifier_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_18TriangleSparsifier_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1459, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1459, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1459, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1459, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1459, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.TriangleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18TriangleSparsifier_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18TriangleSparsifier_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *__pyx_v_triangleScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1470
 * 			The input graph.
 * 		"""
 * 		triangleScore = TriangleEdgeScore(G)             # <<<<<<<<<<<<<<
 * 		triangleScore.run()
 * 		return triangleScore.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore), __pyx_v_G); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_triangleScore = ((struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1471
 * 		"""
 * 		triangleScore = TriangleEdgeScore(G)
 * 		triangleScore.run()             # <<<<<<<<<<<<<<
 * 		return triangleScore.scores()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_triangleScore), __pyx_n_s_run); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1471, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1471, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1472
 * 		triangleScore = TriangleEdgeScore(G)
 * 		triangleScore.run()
 * 		return triangleScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_triangleScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1472, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1459
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.TriangleSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_triangleScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1474
 * 		return triangleScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18TriangleSparsifier_3_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_3_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_3_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1474, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1474, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1474, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1474, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1474, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1474, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1474, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1474, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1474, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.TriangleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18TriangleSparsifier_2_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18TriangleSparsifier_2_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1475
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1475, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1475, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1475, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1475, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1476
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1476, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1474
 * 		return triangleScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.TriangleSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1478
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("parameterization method not yet implemented.")
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_18TriangleSparsifier_5_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_5_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_18TriangleSparsifier_5_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1478, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1478, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1478, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.TriangleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_18TriangleSparsifier_4_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_18TriangleSparsifier_4_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1479
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		raise NotImplementedError("parameterization method not yet implemented.")             # <<<<<<<<<<<<<<
 * 
 * class AlgebraicDistanceSparsifier(Sparsifier):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 1479, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1478
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("parameterization method not yet implemented.")
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("networkit.sparsification.TriangleSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1499
 * 	"""
 * 
 * 	def __init__(self, numberSystems=10, numberIterations=30, omega=0.5, norm=0):             # <<<<<<<<<<<<<<
 * 		self.numberSystems = numberSystems
 * 		self.numberIterations = numberIterations
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_numberSystems = 0;
  PyObject *__pyx_v_numberIterations = 0;
  PyObject *__pyx_v_omega = 0;
  PyObject *__pyx_v_norm = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[5] = {0,0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_numberSystems,&__pyx_n_s_numberIterations,&__pyx_n_s_omega,&__pyx_n_s_norm,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject *)__pyx_int_10)));
    values[2] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject *)__pyx_int_30)));
    values[3] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject*)__pyx_float_0_5)));
    values[4] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject *)__pyx_int_0)));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1499, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_numberSystems);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1499, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_numberIterations);
          if (value) { values[2] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1499, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_omega);
          if (value) { values[3] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1499, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_norm);
          if (value) { values[4] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1499, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1499, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_numberSystems = values[1];
    __pyx_v_numberIterations = values[2];
    __pyx_v_omega = values[3];
    __pyx_v_norm = values[4];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 1499, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier___init__(__pyx_self, __pyx_v_self, __pyx_v_numberSystems, __pyx_v_numberIterations, __pyx_v_omega, __pyx_v_norm);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_numberSystems, PyObject *__pyx_v_numberIterations, PyObject *__pyx_v_omega, PyObject *__pyx_v_norm) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1500
 * 
 * 	def __init__(self, numberSystems=10, numberIterations=30, omega=0.5, norm=0):
 * 		self.numberSystems = numberSystems             # <<<<<<<<<<<<<<
 * 		self.numberIterations = numberIterations
 * 		self.omega = omega
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_numberSystems, __pyx_v_numberSystems) < 0) __PYX_ERR(0, 1500, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1501
 * 	def __init__(self, numberSystems=10, numberIterations=30, omega=0.5, norm=0):
 * 		self.numberSystems = numberSystems
 * 		self.numberIterations = numberIterations             # <<<<<<<<<<<<<<
 * 		self.omega = omega
 * 		self.norm = norm
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_numberIterations, __pyx_v_numberIterations) < 0) __PYX_ERR(0, 1501, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1502
 * 		self.numberSystems = numberSystems
 * 		self.numberIterations = numberIterations
 * 		self.omega = omega             # <<<<<<<<<<<<<<
 * 		self.norm = norm
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_omega, __pyx_v_omega) < 0) __PYX_ERR(0, 1502, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1503
 * 		self.numberIterations = numberIterations
 * 		self.omega = omega
 * 		self.norm = norm             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_norm, __pyx_v_norm) < 0) __PYX_ERR(0, 1503, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1499
 * 	"""
 * 
 * 	def __init__(self, numberSystems=10, numberIterations=30, omega=0.5, norm=0):             # <<<<<<<<<<<<<<
 * 		self.numberSystems = numberSystems
 * 		self.numberIterations = numberIterations
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1505
 * 		self.norm = norm
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_27AlgebraicDistanceSparsifier_2scores, " \n\t\tscores(G)\n\n\t\tReturns the inverted algebraic distance score of the input graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_27AlgebraicDistanceSparsifier_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1505, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1505, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1505, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1505, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_algDist = NULL;
  PyObject *__pyx_8genexpr1__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1516
 * 			The input graph.
 * 		"""
 * 		algDist = distance.AlgebraicDistance(G, self.numberSystems, self.numberIterations, self.omega, self.norm, withEdgeScores=True)             # <<<<<<<<<<<<<<
 * 		algDist.preprocess()
 * 		return [1.0 - d for d in algDist.getEdgeScores()]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_distance); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_AlgebraicDistance); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_numberSystems); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_numberIterations); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_omega); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_norm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_G)) __PYX_ERR(0, 1516, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_1);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1)) __PYX_ERR(0, 1516, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3)) __PYX_ERR(0, 1516, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_4);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4)) __PYX_ERR(0, 1516, __pyx_L1_error);
  __Pyx_GIVEREF(__pyx_t_5);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_5)) __PYX_ERR(0, 1516, __pyx_L1_error);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_withEdgeScores, Py_True) < 0) __PYX_ERR(0, 1516, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_algDist = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1517
 * 		"""
 * 		algDist = distance.AlgebraicDistance(G, self.numberSystems, self.numberIterations, self.omega, self.norm, withEdgeScores=True)
 * 		algDist.preprocess()             # <<<<<<<<<<<<<<
 * 		return [1.0 - d for d in algDist.getEdgeScores()]
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_algDist, __pyx_n_s_preprocess); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_7 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1517, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1518
 * 		algDist = distance.AlgebraicDistance(G, self.numberSystems, self.numberIterations, self.omega, self.norm, withEdgeScores=True)
 * 		algDist.preprocess()
 * 		return [1.0 - d for d in algDist.getEdgeScores()]             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1518, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_algDist, __pyx_n_s_getEdgeScores); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1518, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = NULL;
    __pyx_t_7 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1518, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
      __pyx_t_6 = __pyx_t_5; __Pyx_INCREF(__pyx_t_6);
      __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1518, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_6); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1518, __pyx_L5_error)
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_6);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1518, __pyx_L5_error)
            #endif
            if (__pyx_t_8 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1518, __pyx_L5_error)
          #else
          __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_6, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1518, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_6);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1518, __pyx_L5_error)
            #endif
            if (__pyx_t_8 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1518, __pyx_L5_error)
          #else
          __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_6, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1518, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_9(__pyx_t_6);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1518, __pyx_L5_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_d, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyFloat_SubtractCObj(__pyx_float_1_0, __pyx_8genexpr1__pyx_v_d, 1.0, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1518, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1518, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_d); __pyx_8genexpr1__pyx_v_d = 0;
    goto __pyx_L9_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_d); __pyx_8genexpr1__pyx_v_d = 0;
    goto __pyx_L1_error;
    __pyx_L9_exit_scope:;
  } /* exit inner scope */
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1505
 * 		self.norm = norm
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_algDist);
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_d);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1520
 * 		return [1.0 - d for d in algDist.getEdgeScores()]
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_5_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_5_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1520, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1520, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1520, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1520, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1520, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1520, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_4_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1521
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1521, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1521, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1521, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1521, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1522
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1520
 * 		return [1.0 - d for d in algDist.getEdgeScores()]
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1524
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_7_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_7_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_27AlgebraicDistanceSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1524, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1524, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1524, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_6_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_27AlgebraicDistanceSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1525
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class LocalSparsifier(Sparsifier):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1524
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.AlgebraicDistanceSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1535
 * 	edges, which should be present in the sparsified graph.
 * 	"""
 * 	def __init__(self, sparsifier):             # <<<<<<<<<<<<<<
 * 		self.sparsifier = sparsifier
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15LocalSparsifier_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15LocalSparsifier_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_sparsifier = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_sparsifier,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1535, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_sparsifier)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1535, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 1535, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1535, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_sparsifier = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1535, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15LocalSparsifier___init__(__pyx_self, __pyx_v_self, __pyx_v_sparsifier);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_sparsifier) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1536
 * 	"""
 * 	def __init__(self, sparsifier):
 * 		self.sparsifier = sparsifier             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_sparsifier, __pyx_v_sparsifier) < 0) __PYX_ERR(0, 1536, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1535
 * 	edges, which should be present in the sparsified graph.
 * 	"""
 * 	def __init__(self, sparsifier):             # <<<<<<<<<<<<<<
 * 		self.sparsifier = sparsifier
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1538
 * 		self.sparsifier = sparsifier
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_15LocalSparsifier_2scores, " \n\t\tscores(G)\t\t\n\n\t\tReturns an edge attribute that holds for each edge 1 - the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15LocalSparsifier_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15LocalSparsifier_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_15LocalSparsifier_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1538, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1538, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1538, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1538, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1538, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15LocalSparsifier_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  PyObject *__pyx_v_originalScores = NULL;
  struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *__pyx_v_localFilterScore = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1550
 * 			The input graph.
 * 		"""
 * 		originalScores = self.sparsifier.scores(G)             # <<<<<<<<<<<<<<
 * 		localFilterScore = LocalFilterScore(G, originalScores)
 * 		localFilterScore.run()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_sparsifier); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_scores); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_G};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_originalScores = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "networkit/sparsification.pyx":1551
 * 		"""
 * 		originalScores = self.sparsifier.scores(G)
 * 		localFilterScore = LocalFilterScore(G, originalScores)             # <<<<<<<<<<<<<<
 * 		localFilterScore.run()
 * 
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1551, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_originalScores);
  __Pyx_GIVEREF(__pyx_v_originalScores);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_originalScores)) __PYX_ERR(0, 1551, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_LocalFilterScore), __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_localFilterScore = ((struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1552
 * 		originalScores = self.sparsifier.scores(G)
 * 		localFilterScore = LocalFilterScore(G, originalScores)
 * 		localFilterScore.run()             # <<<<<<<<<<<<<<
 * 
 * 		return localFilterScore.scores()
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_localFilterScore), __pyx_n_s_run); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1552, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1554
 * 		localFilterScore.run()
 * 
 * 		return localFilterScore.scores()             # <<<<<<<<<<<<<<
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_localFilterScore), __pyx_n_s_scores); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1554, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1538
 * 		self.sparsifier = sparsifier
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_originalScores);
  __Pyx_XDECREF((PyObject *)__pyx_v_localFilterScore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1556
 * 		return localFilterScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15LocalSparsifier_5_getSparsifiedGraph = {"_getSparsifiedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15LocalSparsifier_5_getSparsifiedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_5_getSparsifiedGraph(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  PyObject *__pyx_v_parameter = 0;
  PyObject *__pyx_v_attribute = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getSparsifiedGraph (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,&__pyx_n_s_parameter,&__pyx_n_s_attribute,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1556, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1556, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 1); __PYX_ERR(0, 1556, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_parameter)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1556, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 2); __PYX_ERR(0, 1556, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_attribute)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1556, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, 3); __PYX_ERR(0, 1556, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getSparsifiedGraph") < 0)) __PYX_ERR(0, 1556, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
    __pyx_v_parameter = values[2];
    __pyx_v_attribute = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getSparsifiedGraph", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1556, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15LocalSparsifier_4_getSparsifiedGraph(__pyx_self, __pyx_v_self, __pyx_v_G, __pyx_v_parameter, __pyx_v_attribute);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier_4_getSparsifiedGraph(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G, PyObject *__pyx_v_parameter, PyObject *__pyx_v_attribute) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *__pyx_v_gf = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getSparsifiedGraph", 1);

  /* "networkit/sparsification.pyx":1557
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)             # <<<<<<<<<<<<<<
 * 		return gf.calculate()
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1557, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_attribute);
  __Pyx_GIVEREF(__pyx_v_attribute);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_attribute)) __PYX_ERR(0, 1557, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_parameter);
  __Pyx_GIVEREF(__pyx_v_parameter);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_parameter)) __PYX_ERR(0, 1557, __pyx_L1_error);
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 3, Py_True)) __PYX_ERR(0, 1557, __pyx_L1_error);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_gf = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1558
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()             # <<<<<<<<<<<<<<
 * 
 * 	def _getParameterizationAlgorithm(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_gf), __pyx_n_s_calculate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1558, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1556
 * 		return localFilterScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier._getSparsifiedGraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_gf);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1560
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_15LocalSparsifier_7_getParameterizationAlgorithm = {"_getParameterizationAlgorithm", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15LocalSparsifier_7_getParameterizationAlgorithm, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_15LocalSparsifier_7_getParameterizationAlgorithm(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1560, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_getParameterizationAlgorithm") < 0)) __PYX_ERR(0, 1560, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_self = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_getParameterizationAlgorithm", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1560, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_15LocalSparsifier_6_getParameterizationAlgorithm(__pyx_self, __pyx_v_self);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_15LocalSparsifier_6_getParameterizationAlgorithm(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_getParameterizationAlgorithm", 1);

  /* "networkit/sparsification.pyx":1561
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BinarySearchParameterization); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1560
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.LocalSparsifier._getParameterizationAlgorithm", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1573
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_24ModularityPartitionScore_scores, " \n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the minimum parameter value\n\t\tsuch that the edge is contained in the sparsified graph.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24ModularityPartitionScore_1scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_1scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_24ModularityPartitionScore_scores};
static PyObject *__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_1scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1573, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1573, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1573, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ModularityPartitionScore.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1589
 * 		partition = cdAlgo.getPartition()
 * 
 * 		def together(u, v):             # <<<<<<<<<<<<<<
 * 			if (partition[u] == partition[v]):
 * 				return 1.0
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_6scores_1together(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24ModularityPartitionScore_6scores_1together = {"together", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_6scores_1together, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_6scores_1together(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_u = 0;
  PyObject *__pyx_v_v = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("together (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_u,&__pyx_n_s_v,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_u)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1589, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_v)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1589, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("together", 1, 2, 2, 1); __PYX_ERR(0, 1589, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "together") < 0)) __PYX_ERR(0, 1589, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_u = values[0];
    __pyx_v_v = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("together", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1589, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ModularityPartitionScore.scores.together", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_6scores_together(__pyx_self, __pyx_v_u, __pyx_v_v);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_6scores_together(PyObject *__pyx_self, PyObject *__pyx_v_u, PyObject *__pyx_v_v) {
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *__pyx_cur_scope;
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("together", 1);
  __pyx_outer_scope = (struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "networkit/sparsification.pyx":1590
 * 
 * 		def together(u, v):
 * 			if (partition[u] == partition[v]):             # <<<<<<<<<<<<<<
 * 				return 1.0
 * 			else:
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_partition)) { __Pyx_RaiseClosureNameError("partition"); __PYX_ERR(0, 1590, __pyx_L1_error) }
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_cur_scope->__pyx_v_partition, __pyx_v_u); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(!__pyx_cur_scope->__pyx_v_partition)) { __Pyx_RaiseClosureNameError("partition"); __PYX_ERR(0, 1590, __pyx_L1_error) }
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_cur_scope->__pyx_v_partition, __pyx_v_v); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "networkit/sparsification.pyx":1591
 * 		def together(u, v):
 * 			if (partition[u] == partition[v]):
 * 				return 1.0             # <<<<<<<<<<<<<<
 * 			else:
 * 				return 0.0
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_float_1_0);
    __pyx_r = __pyx_float_1_0;
    goto __pyx_L0;

    /* "networkit/sparsification.pyx":1590
 * 
 * 		def together(u, v):
 * 			if (partition[u] == partition[v]):             # <<<<<<<<<<<<<<
 * 				return 1.0
 * 			else:
 */
  }

  /* "networkit/sparsification.pyx":1593
 * 				return 1.0
 * 			else:
 * 				return 0.0             # <<<<<<<<<<<<<<
 * 
 * 		edgeScores = [None for i in range(G.upperEdgeIdBound())]
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_float_0_0);
    __pyx_r = __pyx_float_0_0;
    goto __pyx_L0;
  }

  /* "networkit/sparsification.pyx":1589
 * 		partition = cdAlgo.getPartition()
 * 
 * 		def together(u, v):             # <<<<<<<<<<<<<<
 * 			if (partition[u] == partition[v]):
 * 				return 1.0
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("networkit.sparsification.ModularityPartitionScore.scores.together", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1596
 * 
 * 		edgeScores = [None for i in range(G.upperEdgeIdBound())]
 * 		G.forEdges(lambda u, v, w, eid: edgeScores.__setitem__(eid, together(u, v)))             # <<<<<<<<<<<<<<
 * 		return edgeScores
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_6scores_2lambda1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_24ModularityPartitionScore_6scores_2lambda1 = {"lambda1", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_6scores_2lambda1, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_24ModularityPartitionScore_6scores_2lambda1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_u = 0;
  PyObject *__pyx_v_v = 0;
  CYTHON_UNUSED PyObject *__pyx_v_w = 0;
  PyObject *__pyx_v_eid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[4] = {0,0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("lambda1 (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_u,&__pyx_n_s_v,&__pyx_n_s_w,&__pyx_n_s_eid,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_u)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_v)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("lambda1", 1, 4, 4, 1); __PYX_ERR(0, 1596, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("lambda1", 1, 4, 4, 2); __PYX_ERR(0, 1596, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_eid)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[3]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1596, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("lambda1", 1, 4, 4, 3); __PYX_ERR(0, 1596, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "lambda1") < 0)) __PYX_ERR(0, 1596, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_u = values[0];
    __pyx_v_v = values[1];
    __pyx_v_w = values[2];
    __pyx_v_eid = values[3];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("lambda1", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1596, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ModularityPartitionScore.scores.lambda1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_lambda_funcdef_lambda1(__pyx_self, __pyx_v_u, __pyx_v_v, __pyx_v_w, __pyx_v_eid);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_lambda_funcdef_lambda1(PyObject *__pyx_self, PyObject *__pyx_v_u, PyObject *__pyx_v_v, CYTHON_UNUSED PyObject *__pyx_v_w, PyObject *__pyx_v_eid) {
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *__pyx_cur_scope;
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("lambda1", 1);
  __pyx_outer_scope = (struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_cur_scope->__pyx_v_edgeScores)) { __Pyx_RaiseClosureNameError("edgeScores"); __PYX_ERR(0, 1596, __pyx_L1_error) }
  if (unlikely(!__pyx_cur_scope->__pyx_v_together)) { __Pyx_RaiseClosureNameError("together"); __PYX_ERR(0, 1596, __pyx_L1_error) }
  __pyx_t_1 = __pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_6scores_together(__pyx_cur_scope->__pyx_v_together, __pyx_v_u, __pyx_v_v); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyList_Type___setitem, __pyx_cur_scope->__pyx_v_edgeScores, __pyx_v_eid, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("networkit.sparsification.ModularityPartitionScore.scores.lambda1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1573
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

static PyObject *__pyx_pf_9networkit_14sparsification_24ModularityPartitionScore_scores(CYTHON_UNUSED PyObject *__pyx_self, CYTHON_UNUSED PyObject *__pyx_v_self, PyObject *__pyx_v_G) {
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *__pyx_cur_scope;
  PyObject *__pyx_v_cdAlgo = NULL;
  CYTHON_UNUSED PyObject *__pyx_8genexpr2__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 0);
  __pyx_cur_scope = (struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *)__pyx_tp_new_9networkit_14sparsification___pyx_scope_struct__scores(__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1573, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }

  /* "networkit/sparsification.pyx":1585
 * 			The input graph.
 * 		"""
 * 		cdAlgo = community.PLM(G, par="none randomized", refine=True, turbo=True)             # <<<<<<<<<<<<<<
 * 		cdAlgo.run()
 * 		partition = cdAlgo.getPartition()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_community); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_PLM); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_G);
  __Pyx_GIVEREF(__pyx_v_G);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_G)) __PYX_ERR(0, 1585, __pyx_L1_error);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_par, __pyx_kp_u_none_randomized) < 0) __PYX_ERR(0, 1585, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_refine, Py_True) < 0) __PYX_ERR(0, 1585, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_turbo, Py_True) < 0) __PYX_ERR(0, 1585, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_cdAlgo = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1586
 * 		"""
 * 		cdAlgo = community.PLM(G, par="none randomized", refine=True, turbo=True)
 * 		cdAlgo.run()             # <<<<<<<<<<<<<<
 * 		partition = cdAlgo.getPartition()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_cdAlgo, __pyx_n_s_run); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1587
 * 		cdAlgo = community.PLM(G, par="none randomized", refine=True, turbo=True)
 * 		cdAlgo.run()
 * 		partition = cdAlgo.getPartition()             # <<<<<<<<<<<<<<
 * 
 * 		def together(u, v):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_cdAlgo, __pyx_n_s_getPartition); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1587, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_partition = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1589
 * 		partition = cdAlgo.getPartition()
 * 
 * 		def together(u, v):             # <<<<<<<<<<<<<<
 * 			if (partition[u] == partition[v]):
 * 				return 1.0
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24ModularityPartitionScore_6scores_1together, 0, __pyx_n_s_ModularityPartitionScore_scores, ((PyObject*)__pyx_cur_scope), __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__8)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_together = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1595
 * 				return 0.0
 * 
 * 		edgeScores = [None for i in range(G.upperEdgeIdBound())]             # <<<<<<<<<<<<<<
 * 		G.forEdges(lambda u, v, w, eid: edgeScores.__setitem__(eid, together(u, v)))
 * 		return edgeScores
 */
  { /* enter inner scope */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1595, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_upperEdgeIdBound); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1595, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = NULL;
    __pyx_t_5 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1595, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1595, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3);
      __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1595, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1595, __pyx_L5_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_7)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_3);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1595, __pyx_L5_error)
            #endif
            if (__pyx_t_6 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 1595, __pyx_L5_error)
          #else
          __pyx_t_1 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1595, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_3);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 1595, __pyx_L5_error)
            #endif
            if (__pyx_t_6 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 1595, __pyx_L5_error)
          #else
          __pyx_t_1 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1595, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_7(__pyx_t_3);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1595, __pyx_L5_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_i, __pyx_t_1);
      __pyx_t_1 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)Py_None))) __PYX_ERR(0, 1595, __pyx_L5_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_i); __pyx_8genexpr2__pyx_v_i = 0;
    goto __pyx_L9_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_i); __pyx_8genexpr2__pyx_v_i = 0;
    goto __pyx_L1_error;
    __pyx_L9_exit_scope:;
  } /* exit inner scope */
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_edgeScores = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1596
 * 
 * 		edgeScores = [None for i in range(G.upperEdgeIdBound())]
 * 		G.forEdges(lambda u, v, w, eid: edgeScores.__setitem__(eid, together(u, v)))             # <<<<<<<<<<<<<<
 * 		return edgeScores
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_G, __pyx_n_s_forEdges); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24ModularityPartitionScore_6scores_2lambda1, 0, __pyx_n_s_ModularityPartitionScore_scores_2, ((PyObject*)__pyx_cur_scope), __pyx_n_s_networkit_sparsification, __pyx_d, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_1};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1596, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1597
 * 		edgeScores = [None for i in range(G.upperEdgeIdBound())]
 * 		G.forEdges(lambda u, v, w, eid: edgeScores.__setitem__(eid, together(u, v)))
 * 		return edgeScores             # <<<<<<<<<<<<<<
 * 
 * class ConstantScore():
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_edgeScores);
  __pyx_r = __pyx_cur_scope->__pyx_v_edgeScores;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1573
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("networkit.sparsification.ModularityPartitionScore.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_cdAlgo);
  __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_i);
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1611
 * 	"""
 * 
 * 	def __init__(self, constValue = 1.0):             # <<<<<<<<<<<<<<
 * 		self.constValue = constValue
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_13ConstantScore_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_9networkit_14sparsification_13ConstantScore_1__init__ = {"__init__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_13ConstantScore_1__init__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9networkit_14sparsification_13ConstantScore_1__init__(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  PyObject *__pyx_v_constValue = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_constValue,0};
    values[1] = __Pyx_Arg_NewRef_FASTCALL(((PyObject *)((PyObject*)__pyx_float_1_0)));
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1611, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_constValue);
          if (value) { values[1] = __Pyx_Arg_NewRef_FASTCALL(value); kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1611, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 1611, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_self = values[0];
    __pyx_v_constValue = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1611, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ConstantScore.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_13ConstantScore___init__(__pyx_self, __pyx_v_self, __pyx_v_constValue);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_13ConstantScore___init__(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, PyObject *__pyx_v_constValue) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 1);

  /* "networkit/sparsification.pyx":1612
 * 
 * 	def __init__(self, constValue = 1.0):
 * 		self.constValue = constValue             # <<<<<<<<<<<<<<
 * 
 * 	def scores(self, G):
 */
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_self, __pyx_n_s_constValue, __pyx_v_constValue) < 0) __PYX_ERR(0, 1612, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1611
 * 	"""
 * 
 * 	def __init__(self, constValue = 1.0):             # <<<<<<<<<<<<<<
 * 		self.constValue = constValue
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("networkit.sparsification.ConstantScore.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "networkit/sparsification.pyx":1614
 * 		self.constValue = constValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9networkit_14sparsification_13ConstantScore_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_9networkit_14sparsification_13ConstantScore_2scores, "\n\t\tscores(G)\n\n\t\tReturns an edge attribute that holds for each edge the constant value given\n\t\tin the constructor.\n\n\t\tParameters\n\t\t----------\n\t\tG : networkit.Graph\n\t\t\tThe input graph.\n\t\t");
static PyMethodDef __pyx_mdef_9networkit_14sparsification_13ConstantScore_3scores = {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_13ConstantScore_3scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_13ConstantScore_2scores};
static PyObject *__pyx_pw_9networkit_14sparsification_13ConstantScore_3scores(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_self = 0;
  CYTHON_UNUSED PyObject *__pyx_v_G = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[2] = {0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scores (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_self,&__pyx_n_s_G,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_self)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1614, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_G)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1614, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, 1); __PYX_ERR(0, 1614, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "scores") < 0)) __PYX_ERR(0, 1614, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_self = values[0];
    __pyx_v_G = values[1];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scores", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1614, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("networkit.sparsification.ConstantScore.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9networkit_14sparsification_13ConstantScore_2scores(__pyx_self, __pyx_v_self, __pyx_v_G);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9networkit_14sparsification_13ConstantScore_2scores(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_G) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scores", 1);

  /* "networkit/sparsification.pyx":1626
 * 			The input graph.
 * 		"""
 * 		return self.constValue             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self, __pyx_n_s_constValue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "networkit/sparsification.pyx":1614
 * 		self.constValue = constValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("networkit.sparsification.ConstantScore.scores", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore __pyx_vtable_9networkit_14sparsification_EdgeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore *p;
  PyObject *o = __Pyx_PyType_GetSlot(__pyx_ptype_9networkit_4base_Algorithm, tp_new, newfunc)(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_EdgeScore *)o);
  p->__pyx_vtab = __pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  p->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScore *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9networkit_14sparsification_9EdgeScore_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_G);
  if (likely(__pyx_ptype_9networkit_4base_Algorithm)) __Pyx_PyType_GetSlot(__pyx_ptype_9networkit_4base_Algorithm, tp_dealloc, destructor)(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore);
}

static int __pyx_tp_traverse_9networkit_14sparsification_EdgeScore(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9networkit_14sparsification_EdgeScore *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScore *)o;
  e = ((likely(__pyx_ptype_9networkit_4base_Algorithm)) ? ((__pyx_ptype_9networkit_4base_Algorithm->tp_traverse) ? __pyx_ptype_9networkit_4base_Algorithm->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9networkit_14sparsification_EdgeScore)); if (e) return e;
  if (p->_G) {
    e = (*v)(((PyObject *)p->_G), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9networkit_14sparsification_EdgeScore(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9networkit_14sparsification_EdgeScore *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScore *)o;
  if (likely(__pyx_ptype_9networkit_4base_Algorithm)) { if (__pyx_ptype_9networkit_4base_Algorithm->tp_clear) __pyx_ptype_9networkit_4base_Algorithm->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9networkit_14sparsification_EdgeScore);
  tmp = ((PyObject*)p->_G);
  p->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_EdgeScore[] = {
  {"score", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_5score, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_9EdgeScore_4score},
  {"scores", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_7scores, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_9EdgeScore_6scores},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_9EdgeScore_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_EdgeScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_EdgeScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tAbstract base class for an edge score.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_EdgeScore},
  {Py_tp_init, (void *)__pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_EdgeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_EdgeScore_spec = {
  "networkit.sparsification.EdgeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_EdgeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_EdgeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""EdgeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tAbstract base class for an edge score.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_EdgeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_EdgeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore __pyx_vtable_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tChibaNishizekiTriangleEdgeScore(G)\n\n\tCalculates for each edge the number of triangles it is embedded in.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to count triangles on.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore_spec = {
  "networkit.sparsification.ChibaNishizekiTriangleEdgeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""ChibaNishizekiTriangleEdgeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tChibaNishizekiTriangleEdgeScore(G)\n\n\tCalculates for each edge the number of triangles it is embedded in.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to count triangles on.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore __pyx_vtable_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tChibaNishizekiQuadrangleEdgeScore(G)\n\n\tCalculates for each edge the number of quadrangles (circles of length 4) it is embedded in.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to count quadrangles on.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore_spec = {
  "networkit.sparsification.ChibaNishizekiQuadrangleEdgeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""ChibaNishizekiQuadrangleEdgeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tChibaNishizekiQuadrangleEdgeScore(G)\n\n\tCalculates for each edge the number of quadrangles (circles of length 4) it is embedded in.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to count quadrangles on.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_TriangleEdgeScore __pyx_vtable_9networkit_14sparsification_TriangleEdgeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_TriangleEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_TriangleEdgeScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_TriangleEdgeScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17TriangleEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_TriangleEdgeScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tTriangleEdgeScore(G)\n\n\tTriangle counting.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to count triangles on.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_TriangleEdgeScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_TriangleEdgeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_TriangleEdgeScore_spec = {
  "networkit.sparsification.TriangleEdgeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_TriangleEdgeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_TriangleEdgeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""TriangleEdgeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_TriangleEdgeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tTriangleEdgeScore(G)\n\n\tTriangle counting.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to count triangles on.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_TriangleEdgeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_TriangleEdgeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreLinearizer __pyx_vtable_9networkit_14sparsification_EdgeScoreLinearizer;

static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreLinearizer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_EdgeScoreLinearizer;
  new((void*)&(p->_score)) std::vector<double> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreLinearizer(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreLinearizer) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_score);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_EdgeScoreLinearizer[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreLinearizer_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_EdgeScoreLinearizer_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreLinearizer},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tEdgeScoreLinearizer(G, a, inverse=False)\n\n\tLinearizes a score such that values are evenly distributed between 0 and 1.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph.\n\ta : list(float)\n\t\tEdge score that shall be linearized.\n\tinverse : bool, optional\n\t\tSet to True in order to inverse the resulting score. Default: False\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_EdgeScoreLinearizer},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_EdgeScoreLinearizer},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_EdgeScoreLinearizer_spec = {
  "networkit.sparsification.EdgeScoreLinearizer",
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_EdgeScoreLinearizer_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_EdgeScoreLinearizer = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""EdgeScoreLinearizer", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreLinearizer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreLinearizer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tEdgeScoreLinearizer(G, a, inverse=False)\n\n\tLinearizes a score such that values are evenly distributed between 0 and 1.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph.\n\ta : list(float)\n\t\tEdge score that shall be linearized.\n\tinverse : bool, optional\n\t\tSet to True in order to inverse the resulting score. Default: False\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_EdgeScoreLinearizer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_EdgeScoreLinearizer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreNormalizer __pyx_vtable_9networkit_14sparsification_EdgeScoreNormalizer;

static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreNormalizer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_EdgeScoreNormalizer;
  new((void*)&(p->_inScoreDouble)) std::vector<double> ();
  new((void*)&(p->_inScoreCount)) std::vector<__pyx_t_9networkit_10structures_count> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreNormalizer(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreNormalizer) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_inScoreDouble);
  __Pyx_call_destructor(p->_inScoreCount);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_EdgeScoreNormalizer[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19EdgeScoreNormalizer_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_EdgeScoreNormalizer_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreNormalizer},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tEdgeScoreNormalizer(G, score, inverse=False, lower=0.0, uppper=1.0)\n\n\tNormalize an edge score such that it is in a certain range.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph the edge score is defined on.\n\tscore : list(float)\n\t\tThe edge score to normalize.\n\tinverse: bool, optional\n\t\tSet to True in order to inverse the resulting score. Default: False\n\tlower : float, optional\n\t\tLower bound of the target range. Default: 0.0\n\tupper : float, optional\n\t\tUpper bound of the target range. Default: 1.0\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_EdgeScoreNormalizer},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_EdgeScoreNormalizer},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_EdgeScoreNormalizer_spec = {
  "networkit.sparsification.EdgeScoreNormalizer",
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_EdgeScoreNormalizer_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_EdgeScoreNormalizer = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""EdgeScoreNormalizer", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreNormalizer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreNormalizer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tEdgeScoreNormalizer(G, score, inverse=False, lower=0.0, uppper=1.0)\n\n\tNormalize an edge score such that it is in a certain range.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph the edge score is defined on.\n\tscore : list(float)\n\t\tThe edge score to normalize.\n\tinverse: bool, optional\n\t\tSet to True in order to inverse the resulting score. Default: False\n\tlower : float, optional\n\t\tLower bound of the target range. Default: 0.0\n\tupper : float, optional\n\t\tUpper bound of the target range. Default: 1.0\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_EdgeScoreNormalizer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_EdgeScoreNormalizer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScoreBlender __pyx_vtable_9networkit_14sparsification_EdgeScoreBlender;

static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreBlender(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_EdgeScoreBlender;
  new((void*)&(p->_attribute0)) std::vector<double> ();
  new((void*)&(p->_attribute1)) std::vector<double> ();
  new((void*)&(p->_selection)) std::vector<bool> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreBlender(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreBlender) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_attribute0);
  __Pyx_call_destructor(p->_attribute1);
  __Pyx_call_destructor(p->_selection);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_EdgeScoreBlender[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16EdgeScoreBlender_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_EdgeScoreBlender_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreBlender},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tEdgeScoreBlender(G, attribute0, attribute1, selection)\n\n\tBlends two attribute vectors, the value is chosen depending on the supplied bool vector\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph for which the attribute shall be blended\n\tattribute0 : list(float)\n\t\tThe first attribute (chosen for selection[eid] == False)\n\tattribute1 : list(float)\n\t\tThe second attribute (chosen for selection[eid] == True)\n\tselection : list(bool)\n\t\tThe selection vector.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_EdgeScoreBlender},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_EdgeScoreBlender},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_EdgeScoreBlender_spec = {
  "networkit.sparsification.EdgeScoreBlender",
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_EdgeScoreBlender_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_EdgeScoreBlender = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""EdgeScoreBlender", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreBlender), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreBlender, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tEdgeScoreBlender(G, attribute0, attribute1, selection)\n\n\tBlends two attribute vectors, the value is chosen depending on the supplied bool vector\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph for which the attribute shall be blended\n\tattribute0 : list(float)\n\t\tThe first attribute (chosen for selection[eid] == False)\n\tattribute1 : list(float)\n\t\tThe second attribute (chosen for selection[eid] == True)\n\tselection : list(bool)\n\t\tThe selection vector.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_EdgeScoreBlender, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_EdgeScoreBlender, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_GeometricMeanScore __pyx_vtable_9networkit_14sparsification_GeometricMeanScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_GeometricMeanScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_GeometricMeanScore;
  new((void*)&(p->_attribute)) std::vector<double> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_GeometricMeanScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *p = (struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_GeometricMeanScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_attribute);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_GeometricMeanScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18GeometricMeanScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_GeometricMeanScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_GeometricMeanScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tGeometricMeanScore(G, a)\n\n\tNormalizes the given edge attribute by the geometric average of the sum of the attributes of the incident edges of the incident nodes.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph.\n\ta : list(float)\n\t\tEdge attribute that shall be normalized.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_GeometricMeanScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_GeometricMeanScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_GeometricMeanScore_spec = {
  "networkit.sparsification.GeometricMeanScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_GeometricMeanScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_GeometricMeanScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""GeometricMeanScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_GeometricMeanScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_GeometricMeanScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tGeometricMeanScore(G, a)\n\n\tNormalizes the given edge attribute by the geometric average of the sum of the attributes of the incident edges of the incident nodes.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph.\n\ta : list(float)\n\t\tEdge attribute that shall be normalized.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_GeometricMeanScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_GeometricMeanScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9networkit_14sparsification_EdgeScoreAsWeight(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)o);
  new((void*)&(p->_score)) std::vector<double> ();
  p->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreAsWeight(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreAsWeight) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->_score);
  Py_CLEAR(p->_G);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static int __pyx_tp_traverse_9networkit_14sparsification_EdgeScoreAsWeight(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)o;
  if (p->_G) {
    e = (*v)(((PyObject *)p->_G), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9networkit_14sparsification_EdgeScoreAsWeight(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *p = (struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight *)o;
  tmp = ((PyObject*)p->_G);
  p->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_EdgeScoreAsWeight[] = {
  {"getWeightedGraph", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_5getWeightedGraph, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_9networkit_14sparsification_17EdgeScoreAsWeight_4getWeightedGraph},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_17EdgeScoreAsWeight_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_EdgeScoreAsWeight_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreAsWeight},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tEdgeScoreAsWeight(G, score, square, offset, factor)\n\n\tAssigns an edge score as edge weight of a graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to assign edge weights to.\n\tscore : list(float)\n\t\tThe input edge score.\n\tsquared : bool\n\t\tEdge weights will be squared if set to True.\n\toffset : float\n\t\tThis offset will be added to each edge weight.\n\tfactor : float\n\t\tEach edge weight will be multiplied by this factor.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScoreAsWeight},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScoreAsWeight},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_EdgeScoreAsWeight},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_EdgeScoreAsWeight},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_EdgeScoreAsWeight_spec = {
  "networkit.sparsification.EdgeScoreAsWeight",
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_9networkit_14sparsification_EdgeScoreAsWeight_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_EdgeScoreAsWeight = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""EdgeScoreAsWeight", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_EdgeScoreAsWeight), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScoreAsWeight, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n\tEdgeScoreAsWeight(G, score, square, offset, factor)\n\n\tAssigns an edge score as edge weight of a graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to assign edge weights to.\n\tscore : list(float)\n\t\tThe input edge score.\n\tsquared : bool\n\t\tEdge weights will be squared if set to True.\n\toffset : float\n\t\tThis offset will be added to each edge weight.\n\tfactor : float\n\t\tEach edge weight will be multiplied by this factor.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScoreAsWeight, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScoreAsWeight, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_EdgeScoreAsWeight, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_EdgeScoreAsWeight, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_SimmelianOverlapScore __pyx_vtable_9networkit_14sparsification_SimmelianOverlapScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_SimmelianOverlapScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_SimmelianOverlapScore;
  new((void*)&(p->_triangles)) std::vector<__pyx_t_9networkit_10structures_count> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_SimmelianOverlapScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *p = (struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_SimmelianOverlapScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_triangles);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_SimmelianOverlapScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21SimmelianOverlapScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_SimmelianOverlapScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_SimmelianOverlapScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tSimmelianOverlapScore(G, triangles, maxRank)\n\n\tAn implementation of the parametric variant of Simmelian Backbones. Calculates\n\tfor each edge the minimum parameter value such that the edge is still contained in\n\tthe sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Simmelian Backbone algorithm to.\n\ttriangles : list(int)\n\t\tPreviously calculated edge triangle counts on G.\n\tmaxRank: int\n\t\tMaximum rank that is considered for overlap calculation.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_SimmelianOverlapScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_SimmelianOverlapScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_SimmelianOverlapScore_spec = {
  "networkit.sparsification.SimmelianOverlapScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_SimmelianOverlapScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_SimmelianOverlapScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""SimmelianOverlapScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_SimmelianOverlapScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_SimmelianOverlapScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tSimmelianOverlapScore(G, triangles, maxRank)\n\n\tAn implementation of the parametric variant of Simmelian Backbones. Calculates\n\tfor each edge the minimum parameter value such that the edge is still contained in\n\tthe sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Simmelian Backbone algorithm to.\n\ttriangles : list(int)\n\t\tPreviously calculated edge triangle counts on G.\n\tmaxRank: int\n\t\tMaximum rank that is considered for overlap calculation.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_SimmelianOverlapScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_SimmelianOverlapScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_PrefixJaccardScore __pyx_vtable_9networkit_14sparsification_PrefixJaccardScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_PrefixJaccardScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_PrefixJaccardScore;
  new((void*)&(p->_attribute)) std::vector<double> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_PrefixJaccardScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *p = (struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_PrefixJaccardScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_attribute);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_PrefixJaccardScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_18PrefixJaccardScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_PrefixJaccardScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_PrefixJaccardScore},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_PrefixJaccardScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_PrefixJaccardScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_PrefixJaccardScore_spec = {
  "networkit.sparsification.PrefixJaccardScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_PrefixJaccardScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_PrefixJaccardScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""PrefixJaccardScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_PrefixJaccardScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_PrefixJaccardScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_PrefixJaccardScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_PrefixJaccardScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_MultiscaleScore __pyx_vtable_9networkit_14sparsification_MultiscaleScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_MultiscaleScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_MultiscaleScore;
  new((void*)&(p->_attribute)) std::vector<double> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_15MultiscaleScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_MultiscaleScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *p = (struct __pyx_obj_9networkit_14sparsification_MultiscaleScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_MultiscaleScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_attribute);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_MultiscaleScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15MultiscaleScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15MultiscaleScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_MultiscaleScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_MultiscaleScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tMultiscaleScore(G, attribute)\n\n\tAn implementation of the Multiscale Backbone. Calculates for each edge the minimum\n\tparameter value such that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Multiscale algorithm to.\n\tattribute : list(float)\n\t\tThe edge attribute the Multiscale algorithm is to be applied to.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_MultiscaleScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_MultiscaleScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_MultiscaleScore_spec = {
  "networkit.sparsification.MultiscaleScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_MultiscaleScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_MultiscaleScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_MultiscaleScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""MultiscaleScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_MultiscaleScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_MultiscaleScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tMultiscaleScore(G, attribute)\n\n\tAn implementation of the Multiscale Backbone. Calculates for each edge the minimum\n\tparameter value such that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Multiscale algorithm to.\n\tattribute : list(float)\n\t\tThe edge attribute the Multiscale algorithm is to be applied to.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_MultiscaleScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_MultiscaleScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_RandomEdgeScore __pyx_vtable_9networkit_14sparsification_RandomEdgeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_RandomEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_RandomEdgeScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_RandomEdgeScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15RandomEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_RandomEdgeScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tRandomEdgeScore(G)\n\n\tGenerates a random edge attribute. Each edge is assigned a random value in [0,1].\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to calculate the Random Edge attribute for.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_RandomEdgeScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_RandomEdgeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_RandomEdgeScore_spec = {
  "networkit.sparsification.RandomEdgeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_RandomEdgeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_RandomEdgeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""RandomEdgeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_RandomEdgeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tRandomEdgeScore(G)\n\n\tGenerates a random edge attribute. Each edge is assigned a random value in [0,1].\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to calculate the Random Edge attribute for.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_RandomEdgeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_RandomEdgeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_LocalSimilarityScore __pyx_vtable_9networkit_14sparsification_LocalSimilarityScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_LocalSimilarityScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_LocalSimilarityScore;
  new((void*)&(p->_triangles)) std::vector<__pyx_t_9networkit_10structures_count> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_LocalSimilarityScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *p = (struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_LocalSimilarityScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_triangles);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_LocalSimilarityScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_20LocalSimilarityScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_LocalSimilarityScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_LocalSimilarityScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tLocalSimilarityScore(G, triangles)\n\n\tAn implementation of the Local Simlarity sparsification approach.\n\tThis attributizer calculates for each edge the maximum parameter value\n\tsuch that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Local Similarity algorithm to.\n\ttriangles : list(int)\n\t\tPreviously calculated edge triangle counts.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_LocalSimilarityScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_LocalSimilarityScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_LocalSimilarityScore_spec = {
  "networkit.sparsification.LocalSimilarityScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_LocalSimilarityScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_LocalSimilarityScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""LocalSimilarityScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_LocalSimilarityScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_LocalSimilarityScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tLocalSimilarityScore(G, triangles)\n\n\tAn implementation of the Local Simlarity sparsification approach.\n\tThis attributizer calculates for each edge the maximum parameter value\n\tsuch that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Local Similarity algorithm to.\n\ttriangles : list(int)\n\t\tPreviously calculated edge triangle counts.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_LocalSimilarityScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_LocalSimilarityScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_ForestFireScore __pyx_vtable_9networkit_14sparsification_ForestFireScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_ForestFireScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_ForestFireScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_ForestFireScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_ForestFireScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_15ForestFireScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_ForestFireScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15ForestFireScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_15ForestFireScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_ForestFireScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tForestFireScore(G, pf, tebr)\n\n\tA variant of the Forest Fire sparsification approach that is based on random walks.\n\tThis attributizer calculates for each edge the minimum parameter value\n\tsuch that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Forest Fire algorithm to.\n\tpf : float\n\t\tThe probability for neighbor nodes to get burned aswell.\n\ttebr : float\n\t\tThe Forest Fire will burn until tebr * numberOfEdges edges have been burnt.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_ForestFireScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_ForestFireScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_ForestFireScore_spec = {
  "networkit.sparsification.ForestFireScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_ForestFireScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_ForestFireScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_ForestFireScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""ForestFireScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_ForestFireScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tForestFireScore(G, pf, tebr)\n\n\tA variant of the Forest Fire sparsification approach that is based on random walks.\n\tThis attributizer calculates for each edge the minimum parameter value\n\tsuch that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Forest Fire algorithm to.\n\tpf : float\n\t\tThe probability for neighbor nodes to get burned aswell.\n\ttebr : float\n\t\tThe Forest Fire will burn until tebr * numberOfEdges edges have been burnt.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_ForestFireScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_ForestFireScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_LocalDegreeScore __pyx_vtable_9networkit_14sparsification_LocalDegreeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_LocalDegreeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_LocalDegreeScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_LocalDegreeScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalDegreeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_LocalDegreeScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tLocalDegreeScore(G)\n\n\tThe LocalDegree sparsification approach is based on the idea of hub nodes.\n\tThis attributizer calculates for each edge the maximum parameter value\n\tsuch that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Local Degree  algorithm to.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_LocalDegreeScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_LocalDegreeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_LocalDegreeScore_spec = {
  "networkit.sparsification.LocalDegreeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_LocalDegreeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_LocalDegreeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""LocalDegreeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_LocalDegreeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tLocalDegreeScore(G)\n\n\tThe LocalDegree sparsification approach is based on the idea of hub nodes.\n\tThis attributizer calculates for each edge the maximum parameter value\n\tsuch that the edge is still contained in the sparsified graph.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Local Degree  algorithm to.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_LocalDegreeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_LocalDegreeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_RandomNodeEdgeScore __pyx_vtable_9networkit_14sparsification_RandomNodeEdgeScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_RandomNodeEdgeScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_RandomNodeEdgeScore;
  if (unlikely(__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_RandomNodeEdgeScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_19RandomNodeEdgeScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_RandomNodeEdgeScore_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n\tRandomNodeEdgeScore(G)\n\n\tRandom Edge sampling. This attributizer returns edge attributes where\n\teach value is selected uniformly at random from [0,1].\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to calculate the Random Edge attribute for.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_RandomNodeEdgeScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_RandomNodeEdgeScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_RandomNodeEdgeScore_spec = {
  "networkit.sparsification.RandomNodeEdgeScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_RandomNodeEdgeScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_RandomNodeEdgeScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""RandomNodeEdgeScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_RandomNodeEdgeScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tRandomNodeEdgeScore(G)\n\n\tRandom Edge sampling. This attributizer returns edge attributes where\n\teach value is selected uniformly at random from [0,1].\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to calculate the Random Edge attribute for.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_RandomNodeEdgeScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_RandomNodeEdgeScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_LocalFilterScore __pyx_vtable_9networkit_14sparsification_LocalFilterScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_LocalFilterScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_LocalFilterScore;
  new((void*)&(p->_a)) std::vector<double> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_16LocalFilterScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_LocalFilterScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *p = (struct __pyx_obj_9networkit_14sparsification_LocalFilterScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_LocalFilterScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_a);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_LocalFilterScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalFilterScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_16LocalFilterScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_LocalFilterScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_LocalFilterScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tLocalFilterScore(G, a, logarithmic=True)\n\n\tLocal filtering edge scoring. Edges with high score are more important.\n\n\tEdges are ranked locally, the top d^e (logarithmic, default) or 1+e*(d-1) edges (non-logarithmic) are kept.\n\tFor equal attribute values, neighbors of low degree are preferred.\n\tIf bothRequired is set (default: false), both neighbors need to indicate that they want to keep the edge.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph\n\ta : list(float)\n\t\tThe input attribute according to which the edges shall be fitlered locally.\n\tlogarithmic : bool, optional\n\t\tIf the score shall be logarithmic in the rank (then d^e edges are kept), linear otherwise. Default: True\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_LocalFilterScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_LocalFilterScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_LocalFilterScore_spec = {
  "networkit.sparsification.LocalFilterScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_LocalFilterScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_LocalFilterScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_LocalFilterScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""LocalFilterScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_LocalFilterScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_LocalFilterScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tLocalFilterScore(G, a, logarithmic=True)\n\n\tLocal filtering edge scoring. Edges with high score are more important.\n\n\tEdges are ranked locally, the top d^e (logarithmic, default) or 1+e*(d-1) edges (non-logarithmic) are kept.\n\tFor equal attribute values, neighbors of low degree are preferred.\n\tIf bothRequired is set (default: false), both neighbors need to indicate that they want to keep the edge.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph\n\ta : list(float)\n\t\tThe input attribute according to which the edges shall be fitlered locally.\n\tlogarithmic : bool, optional\n\t\tIf the score shall be logarithmic in the rank (then d^e edges are kept), linear otherwise. Default: True\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_LocalFilterScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_LocalFilterScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_ChanceCorrectedTriangleScore __pyx_vtable_9networkit_14sparsification_ChanceCorrectedTriangleScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_ChanceCorrectedTriangleScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_ChanceCorrectedTriangleScore;
  new((void*)&(p->_triangles)) std::vector<__pyx_t_9networkit_10structures_count> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_ChanceCorrectedTriangleScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *p = (struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_ChanceCorrectedTriangleScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_triangles);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_ChanceCorrectedTriangleScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_28ChanceCorrectedTriangleScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_ChanceCorrectedTriangleScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tChanceCorrectedTriangleScore(G, triangles)\n\n\tDivide the number of triangles per edge by the expected number of triangles given a random edge distribution.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph.\n\ttriangles : list(int)\n\t\tTriangle count.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_ChanceCorrectedTriangleScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_ChanceCorrectedTriangleScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore_spec = {
  "networkit.sparsification.ChanceCorrectedTriangleScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""ChanceCorrectedTriangleScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_ChanceCorrectedTriangleScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_ChanceCorrectedTriangleScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tChanceCorrectedTriangleScore(G, triangles)\n\n\tDivide the number of triangles per edge by the expected number of triangles given a random edge distribution.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe input graph.\n\ttriangles : list(int)\n\t\tTriangle count.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_ChanceCorrectedTriangleScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_ChanceCorrectedTriangleScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_9networkit_14sparsification_SCANStructuralSimilarityScore __pyx_vtable_9networkit_14sparsification_SCANStructuralSimilarityScore;

static PyObject *__pyx_tp_new_9networkit_14sparsification_SCANStructuralSimilarityScore(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *p;
  PyObject *o = __pyx_tp_new_9networkit_14sparsification_EdgeScore(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9networkit_14sparsification_EdgeScore*)__pyx_vtabptr_9networkit_14sparsification_SCANStructuralSimilarityScore;
  new((void*)&(p->_triangles)) std::vector<__pyx_t_9networkit_10structures_count> ();
  if (unlikely(__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_SCANStructuralSimilarityScore(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *p = (struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_SCANStructuralSimilarityScore) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_triangles);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9networkit_14sparsification_EdgeScore(o);
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_SCANStructuralSimilarityScore[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_29SCANStructuralSimilarityScore_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_SCANStructuralSimilarityScore},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tSCANStructuralSimilarityScore(G, triangles)\n\n\tAn implementation of the SCANStructuralSimilarityScore algorithm.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Local Similarity algorithm to.\n\ttriangles : list(int)\n\t\tPreviously calculated edge triangle counts.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_EdgeScore},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_EdgeScore},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_SCANStructuralSimilarityScore},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_SCANStructuralSimilarityScore},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore_spec = {
  "networkit.sparsification.SCANStructuralSimilarityScore",
  sizeof(struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""SCANStructuralSimilarityScore", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_SCANStructuralSimilarityScore), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_SCANStructuralSimilarityScore, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  PyDoc_STR("\n\tSCANStructuralSimilarityScore(G, triangles)\n\n\tAn implementation of the SCANStructuralSimilarityScore algorithm.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to apply the Local Similarity algorithm to.\n\ttriangles : list(int)\n\t\tPreviously calculated edge triangle counts.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_EdgeScore, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_EdgeScore, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_SCANStructuralSimilarityScore, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_9networkit_14sparsification_9EdgeScore_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_SCANStructuralSimilarityScore, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_9networkit_14sparsification_GlobalThresholdFilter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)o);
  new((void*)&(p->_attribute)) std::vector<double> ();
  p->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_9networkit_14sparsification_GlobalThresholdFilter(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *p = (struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification_GlobalThresholdFilter) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->_attribute);
  Py_CLEAR(p->_G);
  #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
  (*Py_TYPE(o)->tp_free)(o);
  #else
  {
    freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
    if (tp_free) tp_free(o);
  }
  #endif
}

static int __pyx_tp_traverse_9networkit_14sparsification_GlobalThresholdFilter(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *p = (struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)o;
  if (p->_G) {
    e = (*v)(((PyObject *)p->_G), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9networkit_14sparsification_GlobalThresholdFilter(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *p = (struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter *)o;
  tmp = ((PyObject*)p->_G);
  p->_G = ((struct __pyx_obj_9networkit_5graph_Graph *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9networkit_14sparsification_GlobalThresholdFilter[] = {
  {"calculate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_5calculate, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_9networkit_14sparsification_21GlobalThresholdFilter_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification_GlobalThresholdFilter_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification_GlobalThresholdFilter},
  {Py_tp_doc, (void *)PyDoc_STR("\n\tGlobalThresholdFilter(G, attribute, e, above)\n\n\tCalculates a sparsified graph by filtering globally using a constant threshold value\n\tand a given edge attribute.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to sparsify.\n\tattribute : list(float)\n\t\tThe edge attribute to consider for filtering.\n\te : float\n\t\tThreshold value.\n\tabove : bool\n\t\tIf set to True (False), all edges with an attribute value equal to or above (below)\n\t\twill be kept in the sparsified graph.\n\t")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification_GlobalThresholdFilter},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification_GlobalThresholdFilter},
  {Py_tp_methods, (void *)__pyx_methods_9networkit_14sparsification_GlobalThresholdFilter},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification_GlobalThresholdFilter},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification_GlobalThresholdFilter_spec = {
  "networkit.sparsification.GlobalThresholdFilter",
  sizeof(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_9networkit_14sparsification_GlobalThresholdFilter_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification_GlobalThresholdFilter = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""GlobalThresholdFilter", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification_GlobalThresholdFilter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification_GlobalThresholdFilter, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n\tGlobalThresholdFilter(G, attribute, e, above)\n\n\tCalculates a sparsified graph by filtering globally using a constant threshold value\n\tand a given edge attribute.\n\n\tParameters\n\t----------\n\tG : networkit.Graph\n\t\tThe graph to sparsify.\n\tattribute : list(float)\n\t\tThe edge attribute to consider for filtering.\n\te : float\n\t\tThreshold value.\n\tabove : bool\n\t\tIf set to True (False), all edges with an attribute value equal to or above (below)\n\t\twill be kept in the sparsified graph.\n\t"), /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification_GlobalThresholdFilter, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification_GlobalThresholdFilter, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9networkit_14sparsification_GlobalThresholdFilter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification_GlobalThresholdFilter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *__pyx_freelist_9networkit_14sparsification___pyx_scope_struct__scores[8];
static int __pyx_freecount_9networkit_14sparsification___pyx_scope_struct__scores = 0;

static PyObject *__pyx_tp_new_9networkit_14sparsification___pyx_scope_struct__scores(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_COMPILING_IN_CPYTHON
  if (likely((int)(__pyx_freecount_9networkit_14sparsification___pyx_scope_struct__scores > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores)))) {
    o = (PyObject*)__pyx_freelist_9networkit_14sparsification___pyx_scope_struct__scores[--__pyx_freecount_9networkit_14sparsification___pyx_scope_struct__scores];
    memset(o, 0, sizeof(struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_9networkit_14sparsification___pyx_scope_struct__scores(PyObject *o) {
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *p = (struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_9networkit_14sparsification___pyx_scope_struct__scores) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_edgeScores);
  Py_CLEAR(p->__pyx_v_partition);
  Py_CLEAR(p->__pyx_v_together);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (((int)(__pyx_freecount_9networkit_14sparsification___pyx_scope_struct__scores < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores)))) {
    __pyx_freelist_9networkit_14sparsification___pyx_scope_struct__scores[__pyx_freecount_9networkit_14sparsification___pyx_scope_struct__scores++] = ((struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_9networkit_14sparsification___pyx_scope_struct__scores(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *p = (struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *)o;
  if (p->__pyx_v_edgeScores) {
    e = (*v)(p->__pyx_v_edgeScores, a); if (e) return e;
  }
  if (p->__pyx_v_partition) {
    e = (*v)(p->__pyx_v_partition, a); if (e) return e;
  }
  if (p->__pyx_v_together) {
    e = (*v)(p->__pyx_v_together, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9networkit_14sparsification___pyx_scope_struct__scores(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *p = (struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores *)o;
  tmp = ((PyObject*)p->__pyx_v_edgeScores);
  p->__pyx_v_edgeScores = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_partition);
  p->__pyx_v_partition = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_together);
  p->__pyx_v_together = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_9networkit_14sparsification___pyx_scope_struct__scores_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_9networkit_14sparsification___pyx_scope_struct__scores},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_9networkit_14sparsification___pyx_scope_struct__scores},
  {Py_tp_clear, (void *)__pyx_tp_clear_9networkit_14sparsification___pyx_scope_struct__scores},
  {Py_tp_new, (void *)__pyx_tp_new_9networkit_14sparsification___pyx_scope_struct__scores},
  {0, 0},
};
static PyType_Spec __pyx_type_9networkit_14sparsification___pyx_scope_struct__scores_spec = {
  "networkit.sparsification.__pyx_scope_struct__scores",
  sizeof(struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_9networkit_14sparsification___pyx_scope_struct__scores_slots,
};
#else

static PyTypeObject __pyx_type_9networkit_14sparsification___pyx_scope_struct__scores = {
  PyVarObject_HEAD_INIT(0, 0)
  "networkit.sparsification.""__pyx_scope_struct__scores", /*tp_name*/
  sizeof(struct __pyx_obj_9networkit_14sparsification___pyx_scope_struct__scores), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9networkit_14sparsification___pyx_scope_struct__scores, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9networkit_14sparsification___pyx_scope_struct__scores, /*tp_traverse*/
  __pyx_tp_clear_9networkit_14sparsification___pyx_scope_struct__scores, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9networkit_14sparsification___pyx_scope_struct__scores, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_n_s_ABS_ZERO, __pyx_k_ABS_ZERO, sizeof(__pyx_k_ABS_ZERO), 0, 0, 1, 1},
    {&__pyx_kp_s_Abstract_base_class_representin, __pyx_k_Abstract_base_class_representin, sizeof(__pyx_k_Abstract_base_class_representin), 0, 0, 1, 0},
    {&__pyx_n_s_AdamicAdarDistance, __pyx_k_AdamicAdarDistance, sizeof(__pyx_k_AdamicAdarDistance), 0, 0, 1, 1},
    {&__pyx_n_s_AlgebraicDistance, __pyx_k_AlgebraicDistance, sizeof(__pyx_k_AlgebraicDistance), 0, 0, 1, 1},
    {&__pyx_n_s_AlgebraicDistanceSparsifier, __pyx_k_AlgebraicDistanceSparsifier, sizeof(__pyx_k_AlgebraicDistanceSparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_AlgebraicDistanceSparsifier___in, __pyx_k_AlgebraicDistanceSparsifier___in, sizeof(__pyx_k_AlgebraicDistanceSparsifier___in), 0, 0, 1, 1},
    {&__pyx_n_s_AlgebraicDistanceSparsifier__get, __pyx_k_AlgebraicDistanceSparsifier__get, sizeof(__pyx_k_AlgebraicDistanceSparsifier__get), 0, 0, 1, 1},
    {&__pyx_n_s_AlgebraicDistanceSparsifier__get_2, __pyx_k_AlgebraicDistanceSparsifier__get_2, sizeof(__pyx_k_AlgebraicDistanceSparsifier__get_2), 0, 0, 1, 1},
    {&__pyx_kp_s_AlgebraicDistanceSparsifier_num, __pyx_k_AlgebraicDistanceSparsifier_num, sizeof(__pyx_k_AlgebraicDistanceSparsifier_num), 0, 0, 1, 0},
    {&__pyx_n_s_AlgebraicDistanceSparsifier_scor, __pyx_k_AlgebraicDistanceSparsifier_scor, sizeof(__pyx_k_AlgebraicDistanceSparsifier_scor), 0, 0, 1, 1},
    {&__pyx_n_s_BinarySearchParameterization, __pyx_k_BinarySearchParameterization, sizeof(__pyx_k_BinarySearchParameterization), 0, 0, 1, 1},
    {&__pyx_n_s_BinarySearchParameterization___i, __pyx_k_BinarySearchParameterization___i, sizeof(__pyx_k_BinarySearchParameterization___i), 0, 0, 1, 1},
    {&__pyx_n_s_BinarySearchParameterization_par, __pyx_k_BinarySearchParameterization_par, sizeof(__pyx_k_BinarySearchParameterization_par), 0, 0, 1, 1},
    {&__pyx_kp_s_BinarySearchParameterization_si, __pyx_k_BinarySearchParameterization_si, sizeof(__pyx_k_BinarySearchParameterization_si), 0, 0, 1, 0},
    {&__pyx_n_s_ChanceCorrectedTriangleScore, __pyx_k_ChanceCorrectedTriangleScore, sizeof(__pyx_k_ChanceCorrectedTriangleScore), 0, 0, 1, 1},
    {&__pyx_n_s_ChanceCorrectedTriangleScore___r, __pyx_k_ChanceCorrectedTriangleScore___r, sizeof(__pyx_k_ChanceCorrectedTriangleScore___r), 0, 0, 1, 1},
    {&__pyx_n_s_ChanceCorrectedTriangleScore___s, __pyx_k_ChanceCorrectedTriangleScore___s, sizeof(__pyx_k_ChanceCorrectedTriangleScore___s), 0, 0, 1, 1},
    {&__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor, __pyx_k_ChibaNishizekiQuadrangleEdgeScor, sizeof(__pyx_k_ChibaNishizekiQuadrangleEdgeScor), 0, 0, 1, 1},
    {&__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2, __pyx_k_ChibaNishizekiQuadrangleEdgeScor_2, sizeof(__pyx_k_ChibaNishizekiQuadrangleEdgeScor_2), 0, 0, 1, 1},
    {&__pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3, __pyx_k_ChibaNishizekiQuadrangleEdgeScor_3, sizeof(__pyx_k_ChibaNishizekiQuadrangleEdgeScor_3), 0, 0, 1, 1},
    {&__pyx_n_s_ChibaNishizekiTriangleEdgeScore, __pyx_k_ChibaNishizekiTriangleEdgeScore, sizeof(__pyx_k_ChibaNishizekiTriangleEdgeScore), 0, 0, 1, 1},
    {&__pyx_n_s_ChibaNishizekiTriangleEdgeScore_2, __pyx_k_ChibaNishizekiTriangleEdgeScore_2, sizeof(__pyx_k_ChibaNishizekiTriangleEdgeScore_2), 0, 0, 1, 1},
    {&__pyx_n_s_ChibaNishizekiTriangleEdgeScore_3, __pyx_k_ChibaNishizekiTriangleEdgeScore_3, sizeof(__pyx_k_ChibaNishizekiTriangleEdgeScore_3), 0, 0, 1, 1},
    {&__pyx_n_s_CompleteSearchParameterization, __pyx_k_CompleteSearchParameterization, sizeof(__pyx_k_CompleteSearchParameterization), 0, 0, 1, 1},
    {&__pyx_kp_s_CompleteSearchParameterization_2, __pyx_k_CompleteSearchParameterization_2, sizeof(__pyx_k_CompleteSearchParameterization_2), 0, 0, 1, 0},
    {&__pyx_n_s_CompleteSearchParameterization_3, __pyx_k_CompleteSearchParameterization_3, sizeof(__pyx_k_CompleteSearchParameterization_3), 0, 0, 1, 1},
    {&__pyx_n_s_CompleteSearchParameterization_p, __pyx_k_CompleteSearchParameterization_p, sizeof(__pyx_k_CompleteSearchParameterization_p), 0, 0, 1, 1},
    {&__pyx_n_s_ConstantScore, __pyx_k_ConstantScore, sizeof(__pyx_k_ConstantScore), 0, 0, 1, 1},
    {&__pyx_n_s_ConstantScore___init, __pyx_k_ConstantScore___init, sizeof(__pyx_k_ConstantScore___init), 0, 0, 1, 1},
    {&__pyx_kp_s_ConstantScore_constValue_1_0_As, __pyx_k_ConstantScore_constValue_1_0_As, sizeof(__pyx_k_ConstantScore_constValue_1_0_As), 0, 0, 1, 0},
    {&__pyx_n_s_ConstantScore_scores, __pyx_k_ConstantScore_scores, sizeof(__pyx_k_ConstantScore_scores), 0, 0, 1, 1},
    {&__pyx_n_s_DegreeMultiscaleSparsifier, __pyx_k_DegreeMultiscaleSparsifier, sizeof(__pyx_k_DegreeMultiscaleSparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_DegreeMultiscaleSparsifier___ini, __pyx_k_DegreeMultiscaleSparsifier___ini, sizeof(__pyx_k_DegreeMultiscaleSparsifier___ini), 0, 0, 1, 1},
    {&__pyx_n_s_DegreeMultiscaleSparsifier__getP, __pyx_k_DegreeMultiscaleSparsifier__getP, sizeof(__pyx_k_DegreeMultiscaleSparsifier__getP), 0, 0, 1, 1},
    {&__pyx_n_s_DegreeMultiscaleSparsifier__getS, __pyx_k_DegreeMultiscaleSparsifier__getS, sizeof(__pyx_k_DegreeMultiscaleSparsifier__getS), 0, 0, 1, 1},
    {&__pyx_kp_s_DegreeMultiscaleSparsifier_degs, __pyx_k_DegreeMultiscaleSparsifier_degs, sizeof(__pyx_k_DegreeMultiscaleSparsifier_degs), 0, 0, 1, 0},
    {&__pyx_n_s_DegreeMultiscaleSparsifier_score, __pyx_k_DegreeMultiscaleSparsifier_score, sizeof(__pyx_k_DegreeMultiscaleSparsifier_score), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScore, __pyx_k_EdgeScore, sizeof(__pyx_k_EdgeScore), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreAsWeight, __pyx_k_EdgeScoreAsWeight, sizeof(__pyx_k_EdgeScoreAsWeight), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreAsWeight___reduce_cytho, __pyx_k_EdgeScoreAsWeight___reduce_cytho, sizeof(__pyx_k_EdgeScoreAsWeight___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreAsWeight___setstate_cyt, __pyx_k_EdgeScoreAsWeight___setstate_cyt, sizeof(__pyx_k_EdgeScoreAsWeight___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreAsWeight_getWeightedGra, __pyx_k_EdgeScoreAsWeight_getWeightedGra, sizeof(__pyx_k_EdgeScoreAsWeight_getWeightedGra), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreBlender, __pyx_k_EdgeScoreBlender, sizeof(__pyx_k_EdgeScoreBlender), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreBlender___reduce_cython, __pyx_k_EdgeScoreBlender___reduce_cython, sizeof(__pyx_k_EdgeScoreBlender___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreBlender___setstate_cyth, __pyx_k_EdgeScoreBlender___setstate_cyth, sizeof(__pyx_k_EdgeScoreBlender___setstate_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreLinearizer, __pyx_k_EdgeScoreLinearizer, sizeof(__pyx_k_EdgeScoreLinearizer), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreLinearizer___reduce_cyt, __pyx_k_EdgeScoreLinearizer___reduce_cyt, sizeof(__pyx_k_EdgeScoreLinearizer___reduce_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreLinearizer___setstate_c, __pyx_k_EdgeScoreLinearizer___setstate_c, sizeof(__pyx_k_EdgeScoreLinearizer___setstate_c), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreNormalizer, __pyx_k_EdgeScoreNormalizer, sizeof(__pyx_k_EdgeScoreNormalizer), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreNormalizer___reduce_cyt, __pyx_k_EdgeScoreNormalizer___reduce_cyt, sizeof(__pyx_k_EdgeScoreNormalizer___reduce_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScoreNormalizer___setstate_c, __pyx_k_EdgeScoreNormalizer___setstate_c, sizeof(__pyx_k_EdgeScoreNormalizer___setstate_c), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScore___reduce_cython, __pyx_k_EdgeScore___reduce_cython, sizeof(__pyx_k_EdgeScore___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScore___setstate_cython, __pyx_k_EdgeScore___setstate_cython, sizeof(__pyx_k_EdgeScore___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScore_score, __pyx_k_EdgeScore_score, sizeof(__pyx_k_EdgeScore_score), 0, 0, 1, 1},
    {&__pyx_n_s_EdgeScore_scores, __pyx_k_EdgeScore_scores, sizeof(__pyx_k_EdgeScore_scores), 0, 0, 1, 1},
    {&__pyx_kp_u_Error_you_may_not_use_EdgeScore, __pyx_k_Error_you_may_not_use_EdgeScore, sizeof(__pyx_k_Error_you_may_not_use_EdgeScore), 0, 1, 0, 0},
    {&__pyx_n_s_ForestFireScore, __pyx_k_ForestFireScore, sizeof(__pyx_k_ForestFireScore), 0, 0, 1, 1},
    {&__pyx_n_s_ForestFireScore___reduce_cython, __pyx_k_ForestFireScore___reduce_cython, sizeof(__pyx_k_ForestFireScore___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ForestFireScore___setstate_cytho, __pyx_k_ForestFireScore___setstate_cytho, sizeof(__pyx_k_ForestFireScore___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_ForestFireSparsifier, __pyx_k_ForestFireSparsifier, sizeof(__pyx_k_ForestFireSparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_ForestFireSparsifier___init, __pyx_k_ForestFireSparsifier___init, sizeof(__pyx_k_ForestFireSparsifier___init), 0, 0, 1, 1},
    {&__pyx_n_s_ForestFireSparsifier__getParamet, __pyx_k_ForestFireSparsifier__getParamet, sizeof(__pyx_k_ForestFireSparsifier__getParamet), 0, 0, 1, 1},
    {&__pyx_n_s_ForestFireSparsifier__getSparsif, __pyx_k_ForestFireSparsifier__getSparsif, sizeof(__pyx_k_ForestFireSparsifier__getSparsif), 0, 0, 1, 1},
    {&__pyx_kp_s_ForestFireSparsifier_burnProbab, __pyx_k_ForestFireSparsifier_burnProbab, sizeof(__pyx_k_ForestFireSparsifier_burnProbab), 0, 0, 1, 0},
    {&__pyx_n_s_ForestFireSparsifier_scores, __pyx_k_ForestFireSparsifier_scores, sizeof(__pyx_k_ForestFireSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_G, __pyx_k_G, sizeof(__pyx_k_G), 0, 0, 1, 1},
    {&__pyx_n_s_GeometricMeanScore, __pyx_k_GeometricMeanScore, sizeof(__pyx_k_GeometricMeanScore), 0, 0, 1, 1},
    {&__pyx_n_s_GeometricMeanScore___reduce_cyth, __pyx_k_GeometricMeanScore___reduce_cyth, sizeof(__pyx_k_GeometricMeanScore___reduce_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_GeometricMeanScore___setstate_cy, __pyx_k_GeometricMeanScore___setstate_cy, sizeof(__pyx_k_GeometricMeanScore___setstate_cy), 0, 0, 1, 1},
    {&__pyx_n_s_GlobalThresholdFilter, __pyx_k_GlobalThresholdFilter, sizeof(__pyx_k_GlobalThresholdFilter), 0, 0, 1, 1},
    {&__pyx_n_s_GlobalThresholdFilter___reduce_c, __pyx_k_GlobalThresholdFilter___reduce_c, sizeof(__pyx_k_GlobalThresholdFilter___reduce_c), 0, 0, 1, 1},
    {&__pyx_n_s_GlobalThresholdFilter___setstate, __pyx_k_GlobalThresholdFilter___setstate, sizeof(__pyx_k_GlobalThresholdFilter___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_GlobalThresholdFilter_calculate, __pyx_k_GlobalThresholdFilter_calculate, sizeof(__pyx_k_GlobalThresholdFilter_calculate), 0, 0, 1, 1},
    {&__pyx_kp_u_Implement_in_subclass, __pyx_k_Implement_in_subclass, sizeof(__pyx_k_Implement_in_subclass), 0, 1, 0, 0},
    {&__pyx_n_s_JaccardSimilarityAttributizer, __pyx_k_JaccardSimilarityAttributizer, sizeof(__pyx_k_JaccardSimilarityAttributizer), 0, 0, 1, 1},
    {&__pyx_n_s_JaccardSimilaritySparsifier, __pyx_k_JaccardSimilaritySparsifier, sizeof(__pyx_k_JaccardSimilaritySparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_JaccardSimilaritySparsifier_An, __pyx_k_JaccardSimilaritySparsifier_An, sizeof(__pyx_k_JaccardSimilaritySparsifier_An), 0, 0, 1, 0},
    {&__pyx_n_s_JaccardSimilaritySparsifier__get, __pyx_k_JaccardSimilaritySparsifier__get, sizeof(__pyx_k_JaccardSimilaritySparsifier__get), 0, 0, 1, 1},
    {&__pyx_n_s_JaccardSimilaritySparsifier__get_2, __pyx_k_JaccardSimilaritySparsifier__get_2, sizeof(__pyx_k_JaccardSimilaritySparsifier__get_2), 0, 0, 1, 1},
    {&__pyx_n_s_JaccardSimilaritySparsifier_scor, __pyx_k_JaccardSimilaritySparsifier_scor, sizeof(__pyx_k_JaccardSimilaritySparsifier_scor), 0, 0, 1, 1},
    {&__pyx_n_s_LocalDegreeScore, __pyx_k_LocalDegreeScore, sizeof(__pyx_k_LocalDegreeScore), 0, 0, 1, 1},
    {&__pyx_n_s_LocalDegreeScore___reduce_cython, __pyx_k_LocalDegreeScore___reduce_cython, sizeof(__pyx_k_LocalDegreeScore___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_LocalDegreeScore___setstate_cyth, __pyx_k_LocalDegreeScore___setstate_cyth, sizeof(__pyx_k_LocalDegreeScore___setstate_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_LocalDegreeSparsifier, __pyx_k_LocalDegreeSparsifier, sizeof(__pyx_k_LocalDegreeSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_LocalDegreeSparsifier_An_implem, __pyx_k_LocalDegreeSparsifier_An_implem, sizeof(__pyx_k_LocalDegreeSparsifier_An_implem), 0, 0, 1, 0},
    {&__pyx_n_s_LocalDegreeSparsifier__getParame, __pyx_k_LocalDegreeSparsifier__getParame, sizeof(__pyx_k_LocalDegreeSparsifier__getParame), 0, 0, 1, 1},
    {&__pyx_n_s_LocalDegreeSparsifier__getSparsi, __pyx_k_LocalDegreeSparsifier__getSparsi, sizeof(__pyx_k_LocalDegreeSparsifier__getSparsi), 0, 0, 1, 1},
    {&__pyx_n_s_LocalDegreeSparsifier_scores, __pyx_k_LocalDegreeSparsifier_scores, sizeof(__pyx_k_LocalDegreeSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_LocalFilterScore, __pyx_k_LocalFilterScore, sizeof(__pyx_k_LocalFilterScore), 0, 0, 1, 1},
    {&__pyx_n_s_LocalFilterScore___reduce_cython, __pyx_k_LocalFilterScore___reduce_cython, sizeof(__pyx_k_LocalFilterScore___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_LocalFilterScore___setstate_cyth, __pyx_k_LocalFilterScore___setstate_cyth, sizeof(__pyx_k_LocalFilterScore___setstate_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSimilarityScore, __pyx_k_LocalSimilarityScore, sizeof(__pyx_k_LocalSimilarityScore), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSimilarityScore___reduce_cy, __pyx_k_LocalSimilarityScore___reduce_cy, sizeof(__pyx_k_LocalSimilarityScore___reduce_cy), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSimilarityScore___setstate, __pyx_k_LocalSimilarityScore___setstate, sizeof(__pyx_k_LocalSimilarityScore___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSimilaritySparsifier, __pyx_k_LocalSimilaritySparsifier, sizeof(__pyx_k_LocalSimilaritySparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_LocalSimilaritySparsifier_An_im, __pyx_k_LocalSimilaritySparsifier_An_im, sizeof(__pyx_k_LocalSimilaritySparsifier_An_im), 0, 0, 1, 0},
    {&__pyx_n_s_LocalSimilaritySparsifier__getPa, __pyx_k_LocalSimilaritySparsifier__getPa, sizeof(__pyx_k_LocalSimilaritySparsifier__getPa), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSimilaritySparsifier__getSp, __pyx_k_LocalSimilaritySparsifier__getSp, sizeof(__pyx_k_LocalSimilaritySparsifier__getSp), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSimilaritySparsifier_scores, __pyx_k_LocalSimilaritySparsifier_scores, sizeof(__pyx_k_LocalSimilaritySparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSparsifier, __pyx_k_LocalSparsifier, sizeof(__pyx_k_LocalSparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSparsifier___init, __pyx_k_LocalSparsifier___init, sizeof(__pyx_k_LocalSparsifier___init), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSparsifier__getParameteriza, __pyx_k_LocalSparsifier__getParameteriza, sizeof(__pyx_k_LocalSparsifier__getParameteriza), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSparsifier__getSparsifiedGr, __pyx_k_LocalSparsifier__getSparsifiedGr, sizeof(__pyx_k_LocalSparsifier__getSparsifiedGr), 0, 0, 1, 1},
    {&__pyx_n_s_LocalSparsifier_scores, __pyx_k_LocalSparsifier_scores, sizeof(__pyx_k_LocalSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_kp_s_LocalSparsifier_sparsifier_Spar, __pyx_k_LocalSparsifier_sparsifier_Spar, sizeof(__pyx_k_LocalSparsifier_sparsifier_Spar), 0, 0, 1, 0},
    {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
    {&__pyx_n_s_ModularityPartitionScore, __pyx_k_ModularityPartitionScore, sizeof(__pyx_k_ModularityPartitionScore), 0, 0, 1, 1},
    {&__pyx_kp_s_ModularityPartitionScore_Sparsi, __pyx_k_ModularityPartitionScore_Sparsi, sizeof(__pyx_k_ModularityPartitionScore_Sparsi), 0, 0, 1, 0},
    {&__pyx_n_s_ModularityPartitionScore_scores, __pyx_k_ModularityPartitionScore_scores, sizeof(__pyx_k_ModularityPartitionScore_scores), 0, 0, 1, 1},
    {&__pyx_n_s_ModularityPartitionScore_scores_2, __pyx_k_ModularityPartitionScore_scores_2, sizeof(__pyx_k_ModularityPartitionScore_scores_2), 0, 0, 1, 1},
    {&__pyx_n_s_ModularityPartitionScore_scores_3, __pyx_k_ModularityPartitionScore_scores_3, sizeof(__pyx_k_ModularityPartitionScore_scores_3), 0, 0, 1, 1},
    {&__pyx_n_s_MultiscaleScore, __pyx_k_MultiscaleScore, sizeof(__pyx_k_MultiscaleScore), 0, 0, 1, 1},
    {&__pyx_n_s_MultiscaleScore___reduce_cython, __pyx_k_MultiscaleScore___reduce_cython, sizeof(__pyx_k_MultiscaleScore___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_MultiscaleScore___setstate_cytho, __pyx_k_MultiscaleScore___setstate_cytho, sizeof(__pyx_k_MultiscaleScore___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_MultiscaleSparsifier, __pyx_k_MultiscaleSparsifier, sizeof(__pyx_k_MultiscaleSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_MultiscaleSparsifier_An_impleme, __pyx_k_MultiscaleSparsifier_An_impleme, sizeof(__pyx_k_MultiscaleSparsifier_An_impleme), 0, 0, 1, 0},
    {&__pyx_n_s_MultiscaleSparsifier__getParamet, __pyx_k_MultiscaleSparsifier__getParamet, sizeof(__pyx_k_MultiscaleSparsifier__getParamet), 0, 0, 1, 1},
    {&__pyx_n_s_MultiscaleSparsifier__getSparsif, __pyx_k_MultiscaleSparsifier__getSparsif, sizeof(__pyx_k_MultiscaleSparsifier__getSparsif), 0, 0, 1, 1},
    {&__pyx_n_s_MultiscaleSparsifier_scores, __pyx_k_MultiscaleSparsifier_scores, sizeof(__pyx_k_MultiscaleSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
    {&__pyx_n_s_PLM, __pyx_k_PLM, sizeof(__pyx_k_PLM), 0, 0, 1, 1},
    {&__pyx_n_s_PrefixJaccardScore, __pyx_k_PrefixJaccardScore, sizeof(__pyx_k_PrefixJaccardScore), 0, 0, 1, 1},
    {&__pyx_n_s_PrefixJaccardScore___reduce_cyth, __pyx_k_PrefixJaccardScore___reduce_cyth, sizeof(__pyx_k_PrefixJaccardScore___reduce_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_PrefixJaccardScore___setstate_cy, __pyx_k_PrefixJaccardScore___setstate_cy, sizeof(__pyx_k_PrefixJaccardScore___setstate_cy), 0, 0, 1, 1},
    {&__pyx_kp_s_QuadrilateralSimmelianSparsifie, __pyx_k_QuadrilateralSimmelianSparsifie, sizeof(__pyx_k_QuadrilateralSimmelianSparsifie), 0, 0, 1, 0},
    {&__pyx_n_s_QuadrilateralSimmelianSparsifier, __pyx_k_QuadrilateralSimmelianSparsifier, sizeof(__pyx_k_QuadrilateralSimmelianSparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_QuadrilateralSimmelianSparsifier_2, __pyx_k_QuadrilateralSimmelianSparsifier_2, sizeof(__pyx_k_QuadrilateralSimmelianSparsifier_2), 0, 0, 1, 1},
    {&__pyx_n_s_QuadrilateralSimmelianSparsifier_3, __pyx_k_QuadrilateralSimmelianSparsifier_3, sizeof(__pyx_k_QuadrilateralSimmelianSparsifier_3), 0, 0, 1, 1},
    {&__pyx_n_s_QuadrilateralSimmelianSparsifier_4, __pyx_k_QuadrilateralSimmelianSparsifier_4, sizeof(__pyx_k_QuadrilateralSimmelianSparsifier_4), 0, 0, 1, 1},
    {&__pyx_n_s_RandomEdgeScore, __pyx_k_RandomEdgeScore, sizeof(__pyx_k_RandomEdgeScore), 0, 0, 1, 1},
    {&__pyx_n_s_RandomEdgeScore___reduce_cython, __pyx_k_RandomEdgeScore___reduce_cython, sizeof(__pyx_k_RandomEdgeScore___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_RandomEdgeScore___setstate_cytho, __pyx_k_RandomEdgeScore___setstate_cytho, sizeof(__pyx_k_RandomEdgeScore___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_RandomEdgeSparsifier, __pyx_k_RandomEdgeSparsifier, sizeof(__pyx_k_RandomEdgeSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_RandomEdgeSparsifier_Random_Edg, __pyx_k_RandomEdgeSparsifier_Random_Edg, sizeof(__pyx_k_RandomEdgeSparsifier_Random_Edg), 0, 0, 1, 0},
    {&__pyx_n_s_RandomEdgeSparsifier__getParamet, __pyx_k_RandomEdgeSparsifier__getParamet, sizeof(__pyx_k_RandomEdgeSparsifier__getParamet), 0, 0, 1, 1},
    {&__pyx_n_s_RandomEdgeSparsifier__getSparsif, __pyx_k_RandomEdgeSparsifier__getSparsif, sizeof(__pyx_k_RandomEdgeSparsifier__getSparsif), 0, 0, 1, 1},
    {&__pyx_n_s_RandomEdgeSparsifier_scores, __pyx_k_RandomEdgeSparsifier_scores, sizeof(__pyx_k_RandomEdgeSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeScore, __pyx_k_RandomNodeEdgeScore, sizeof(__pyx_k_RandomNodeEdgeScore), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeScore___reduce_cyt, __pyx_k_RandomNodeEdgeScore___reduce_cyt, sizeof(__pyx_k_RandomNodeEdgeScore___reduce_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeScore___setstate_c, __pyx_k_RandomNodeEdgeScore___setstate_c, sizeof(__pyx_k_RandomNodeEdgeScore___setstate_c), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeSparsifier, __pyx_k_RandomNodeEdgeSparsifier, sizeof(__pyx_k_RandomNodeEdgeSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_RandomNodeEdgeSparsifier_Random, __pyx_k_RandomNodeEdgeSparsifier_Random, sizeof(__pyx_k_RandomNodeEdgeSparsifier_Random), 0, 0, 1, 0},
    {&__pyx_n_s_RandomNodeEdgeSparsifier___init, __pyx_k_RandomNodeEdgeSparsifier___init, sizeof(__pyx_k_RandomNodeEdgeSparsifier___init), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeSparsifier__getPar, __pyx_k_RandomNodeEdgeSparsifier__getPar, sizeof(__pyx_k_RandomNodeEdgeSparsifier__getPar), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeSparsifier__getSpa, __pyx_k_RandomNodeEdgeSparsifier__getSpa, sizeof(__pyx_k_RandomNodeEdgeSparsifier__getSpa), 0, 0, 1, 1},
    {&__pyx_n_s_RandomNodeEdgeSparsifier_scores, __pyx_k_RandomNodeEdgeSparsifier_scores, sizeof(__pyx_k_RandomNodeEdgeSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
    {&__pyx_n_s_SCANSparsifier, __pyx_k_SCANSparsifier, sizeof(__pyx_k_SCANSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_SCANSparsifier_A_sparsifiier_de, __pyx_k_SCANSparsifier_A_sparsifiier_de, sizeof(__pyx_k_SCANSparsifier_A_sparsifiier_de), 0, 0, 1, 0},
    {&__pyx_n_s_SCANSparsifier__getParameterizat, __pyx_k_SCANSparsifier__getParameterizat, sizeof(__pyx_k_SCANSparsifier__getParameterizat), 0, 0, 1, 1},
    {&__pyx_n_s_SCANSparsifier__getSparsifiedGra, __pyx_k_SCANSparsifier__getSparsifiedGra, sizeof(__pyx_k_SCANSparsifier__getSparsifiedGra), 0, 0, 1, 1},
    {&__pyx_n_s_SCANSparsifier_scores, __pyx_k_SCANSparsifier_scores, sizeof(__pyx_k_SCANSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_SCANStructuralSimilarityScore, __pyx_k_SCANStructuralSimilarityScore, sizeof(__pyx_k_SCANStructuralSimilarityScore), 0, 0, 1, 1},
    {&__pyx_n_s_SCANStructuralSimilarityScore_2, __pyx_k_SCANStructuralSimilarityScore_2, sizeof(__pyx_k_SCANStructuralSimilarityScore_2), 0, 0, 1, 1},
    {&__pyx_n_s_SCANStructuralSimilarityScore_3, __pyx_k_SCANStructuralSimilarityScore_3, sizeof(__pyx_k_SCANStructuralSimilarityScore_3), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianMultiscaleSparsifier, __pyx_k_SimmelianMultiscaleSparsifier, sizeof(__pyx_k_SimmelianMultiscaleSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_SimmelianMultiscaleSparsifier_M, __pyx_k_SimmelianMultiscaleSparsifier_M, sizeof(__pyx_k_SimmelianMultiscaleSparsifier_M), 0, 0, 1, 0},
    {&__pyx_n_s_SimmelianMultiscaleSparsifier__g, __pyx_k_SimmelianMultiscaleSparsifier__g, sizeof(__pyx_k_SimmelianMultiscaleSparsifier__g), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianMultiscaleSparsifier__g_2, __pyx_k_SimmelianMultiscaleSparsifier__g_2, sizeof(__pyx_k_SimmelianMultiscaleSparsifier__g_2), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianMultiscaleSparsifier_sc, __pyx_k_SimmelianMultiscaleSparsifier_sc, sizeof(__pyx_k_SimmelianMultiscaleSparsifier_sc), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianOverlapScore, __pyx_k_SimmelianOverlapScore, sizeof(__pyx_k_SimmelianOverlapScore), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianOverlapScore___reduce_c, __pyx_k_SimmelianOverlapScore___reduce_c, sizeof(__pyx_k_SimmelianOverlapScore___reduce_c), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianOverlapScore___setstate, __pyx_k_SimmelianOverlapScore___setstate, sizeof(__pyx_k_SimmelianOverlapScore___setstate), 0, 0, 1, 1},
    {&__pyx_kp_s_SimmelianSparsifierNonParametri, __pyx_k_SimmelianSparsifierNonParametri, sizeof(__pyx_k_SimmelianSparsifierNonParametri), 0, 0, 1, 0},
    {&__pyx_n_s_SimmelianSparsifierNonParametric, __pyx_k_SimmelianSparsifierNonParametric, sizeof(__pyx_k_SimmelianSparsifierNonParametric), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierNonParametric_2, __pyx_k_SimmelianSparsifierNonParametric_2, sizeof(__pyx_k_SimmelianSparsifierNonParametric_2), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierNonParametric_3, __pyx_k_SimmelianSparsifierNonParametric_3, sizeof(__pyx_k_SimmelianSparsifierNonParametric_3), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierNonParametric_4, __pyx_k_SimmelianSparsifierNonParametric_4, sizeof(__pyx_k_SimmelianSparsifierNonParametric_4), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierParametric, __pyx_k_SimmelianSparsifierParametric, sizeof(__pyx_k_SimmelianSparsifierParametric), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierParametric_2, __pyx_k_SimmelianSparsifierParametric_2, sizeof(__pyx_k_SimmelianSparsifierParametric_2), 0, 0, 1, 1},
    {&__pyx_kp_s_SimmelianSparsifierParametric_A, __pyx_k_SimmelianSparsifierParametric_A, sizeof(__pyx_k_SimmelianSparsifierParametric_A), 0, 0, 1, 0},
    {&__pyx_n_s_SimmelianSparsifierParametric__g, __pyx_k_SimmelianSparsifierParametric__g, sizeof(__pyx_k_SimmelianSparsifierParametric__g), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierParametric__g_2, __pyx_k_SimmelianSparsifierParametric__g_2, sizeof(__pyx_k_SimmelianSparsifierParametric__g_2), 0, 0, 1, 1},
    {&__pyx_n_s_SimmelianSparsifierParametric_sc, __pyx_k_SimmelianSparsifierParametric_sc, sizeof(__pyx_k_SimmelianSparsifierParametric_sc), 0, 0, 1, 1},
    {&__pyx_n_s_SimpleParameterization, __pyx_k_SimpleParameterization, sizeof(__pyx_k_SimpleParameterization), 0, 0, 1, 1},
    {&__pyx_kp_s_SimpleParameterization_A_parame, __pyx_k_SimpleParameterization_A_parame, sizeof(__pyx_k_SimpleParameterization_A_parame), 0, 0, 1, 0},
    {&__pyx_n_s_SimpleParameterization_parameter, __pyx_k_SimpleParameterization_parameter, sizeof(__pyx_k_SimpleParameterization_parameter), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier, __pyx_k_Sparsifier, sizeof(__pyx_k_Sparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier__getParameterizationA, __pyx_k_Sparsifier__getParameterizationA, sizeof(__pyx_k_Sparsifier__getParameterizationA), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier__getSparsifiedGraph, __pyx_k_Sparsifier__getSparsifiedGraph, sizeof(__pyx_k_Sparsifier__getSparsifiedGraph), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier_getParameter, __pyx_k_Sparsifier_getParameter, sizeof(__pyx_k_Sparsifier_getParameter), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier_getSparsifiedGraph, __pyx_k_Sparsifier_getSparsifiedGraph, sizeof(__pyx_k_Sparsifier_getSparsifiedGraph), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier_getSparsifiedGraphOfS, __pyx_k_Sparsifier_getSparsifiedGraphOfS, sizeof(__pyx_k_Sparsifier_getSparsifiedGraphOfS), 0, 0, 1, 1},
    {&__pyx_n_s_Sparsifier_scores, __pyx_k_Sparsifier_scores, sizeof(__pyx_k_Sparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_TriangleEdgeScore, __pyx_k_TriangleEdgeScore, sizeof(__pyx_k_TriangleEdgeScore), 0, 0, 1, 1},
    {&__pyx_n_s_TriangleEdgeScore___reduce_cytho, __pyx_k_TriangleEdgeScore___reduce_cytho, sizeof(__pyx_k_TriangleEdgeScore___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_TriangleEdgeScore___setstate_cyt, __pyx_k_TriangleEdgeScore___setstate_cyt, sizeof(__pyx_k_TriangleEdgeScore___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_TriangleSparsifier, __pyx_k_TriangleSparsifier, sizeof(__pyx_k_TriangleSparsifier), 0, 0, 1, 1},
    {&__pyx_kp_s_TriangleSparsifier_Allows_for_g, __pyx_k_TriangleSparsifier_Allows_for_g, sizeof(__pyx_k_TriangleSparsifier_Allows_for_g), 0, 0, 1, 0},
    {&__pyx_n_s_TriangleSparsifier__getParameter, __pyx_k_TriangleSparsifier__getParameter, sizeof(__pyx_k_TriangleSparsifier__getParameter), 0, 0, 1, 1},
    {&__pyx_n_s_TriangleSparsifier__getSparsifie, __pyx_k_TriangleSparsifier__getSparsifie, sizeof(__pyx_k_TriangleSparsifier__getSparsifie), 0, 0, 1, 1},
    {&__pyx_n_s_TriangleSparsifier_scores, __pyx_k_TriangleSparsifier_scores, sizeof(__pyx_k_TriangleSparsifier_scores), 0, 0, 1, 1},
    {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
    {&__pyx_n_s__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 0, 1, 1},
    {&__pyx_n_s__171, __pyx_k__171, sizeof(__pyx_k__171), 0, 0, 1, 1},
    {&__pyx_kp_u__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 1, 0, 0},
    {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
    {&__pyx_n_s_a_ms, __pyx_k_a_ms, sizeof(__pyx_k_a_ms), 0, 0, 1, 1},
    {&__pyx_n_s_a_sj, __pyx_k_a_sj, sizeof(__pyx_k_a_sj), 0, 0, 1, 1},
    {&__pyx_n_s_a_triangles, __pyx_k_a_triangles, sizeof(__pyx_k_a_triangles), 0, 0, 1, 1},
    {&__pyx_n_s_above, __pyx_k_above, sizeof(__pyx_k_above), 0, 0, 1, 1},
    {&__pyx_n_s_algDist, __pyx_k_algDist, sizeof(__pyx_k_algDist), 0, 0, 1, 1},
    {&__pyx_n_s_algorithm, __pyx_k_algorithm, sizeof(__pyx_k_algorithm), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_attribute, __pyx_k_attribute, sizeof(__pyx_k_attribute), 0, 0, 1, 1},
    {&__pyx_n_s_attribute0, __pyx_k_attribute0, sizeof(__pyx_k_attribute0), 0, 0, 1, 1},
    {&__pyx_n_s_attribute1, __pyx_k_attribute1, sizeof(__pyx_k_attribute1), 0, 0, 1, 1},
    {&__pyx_n_s_attribute_2, __pyx_k_attribute_2, sizeof(__pyx_k_attribute_2), 0, 0, 1, 1},
    {&__pyx_n_s_bestParameter, __pyx_k_bestParameter, sizeof(__pyx_k_bestParameter), 0, 0, 1, 1},
    {&__pyx_n_s_bestRatio, __pyx_k_bestRatio, sizeof(__pyx_k_bestRatio), 0, 0, 1, 1},
    {&__pyx_n_s_burnProbability, __pyx_k_burnProbability, sizeof(__pyx_k_burnProbability), 0, 0, 1, 1},
    {&__pyx_n_s_calculate, __pyx_k_calculate, sizeof(__pyx_k_calculate), 0, 0, 1, 1},
    {&__pyx_n_s_cdAlgo, __pyx_k_cdAlgo, sizeof(__pyx_k_cdAlgo), 0, 0, 1, 1},
    {&__pyx_n_s_class_getitem, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_community, __pyx_k_community, sizeof(__pyx_k_community), 0, 0, 1, 1},
    {&__pyx_n_s_constValue, __pyx_k_constValue, sizeof(__pyx_k_constValue), 0, 0, 1, 1},
    {&__pyx_n_s_currentEdgeRatio, __pyx_k_currentEdgeRatio, sizeof(__pyx_k_currentEdgeRatio), 0, 0, 1, 1},
    {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
    {&__pyx_n_s_degree, __pyx_k_degree, sizeof(__pyx_k_degree), 0, 0, 1, 1},
    {&__pyx_n_s_degsToAttrValue, __pyx_k_degsToAttrValue, sizeof(__pyx_k_degsToAttrValue), 0, 0, 1, 1},
    {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_distance, __pyx_k_distance, sizeof(__pyx_k_distance), 0, 0, 1, 1},
    {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
    {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
    {&__pyx_n_s_edgeId, __pyx_k_edgeId, sizeof(__pyx_k_edgeId), 0, 0, 1, 1},
    {&__pyx_n_s_edgeRatio, __pyx_k_edgeRatio, sizeof(__pyx_k_edgeRatio), 0, 0, 1, 1},
    {&__pyx_n_s_edgeScores, __pyx_k_edgeScores, sizeof(__pyx_k_edgeScores), 0, 0, 1, 1},
    {&__pyx_n_s_eid, __pyx_k_eid, sizeof(__pyx_k_eid), 0, 0, 1, 1},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_estimation, __pyx_k_estimation, sizeof(__pyx_k_estimation), 0, 0, 1, 1},
    {&__pyx_n_s_factor, __pyx_k_factor, sizeof(__pyx_k_factor), 0, 0, 1, 1},
    {&__pyx_n_s_ffScore, __pyx_k_ffScore, sizeof(__pyx_k_ffScore), 0, 0, 1, 1},
    {&__pyx_n_s_forEdges, __pyx_k_forEdges, sizeof(__pyx_k_forEdges), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_getAttribute, __pyx_k_getAttribute, sizeof(__pyx_k_getAttribute), 0, 0, 1, 1},
    {&__pyx_n_s_getEdgeScores, __pyx_k_getEdgeScores, sizeof(__pyx_k_getEdgeScores), 0, 0, 1, 1},
    {&__pyx_n_s_getParameter, __pyx_k_getParameter, sizeof(__pyx_k_getParameter), 0, 0, 1, 1},
    {&__pyx_n_s_getParameterizationAlgorithm, __pyx_k_getParameterizationAlgorithm, sizeof(__pyx_k_getParameterizationAlgorithm), 0, 0, 1, 1},
    {&__pyx_n_s_getPartition, __pyx_k_getPartition, sizeof(__pyx_k_getPartition), 0, 0, 1, 1},
    {&__pyx_n_s_getRankAttribute, __pyx_k_getRankAttribute, sizeof(__pyx_k_getRankAttribute), 0, 0, 1, 1},
    {&__pyx_n_s_getRankAttribute_locals_lambda, __pyx_k_getRankAttribute_locals_lambda, sizeof(__pyx_k_getRankAttribute_locals_lambda), 0, 0, 1, 1},
    {&__pyx_n_s_getSparsifiedGraph, __pyx_k_getSparsifiedGraph, sizeof(__pyx_k_getSparsifiedGraph), 0, 0, 1, 1},
    {&__pyx_n_s_getSparsifiedGraphOfSize, __pyx_k_getSparsifiedGraphOfSize, sizeof(__pyx_k_getSparsifiedGraphOfSize), 0, 0, 1, 1},
    {&__pyx_n_s_getSparsifiedGraph_2, __pyx_k_getSparsifiedGraph_2, sizeof(__pyx_k_getSparsifiedGraph_2), 0, 0, 1, 1},
    {&__pyx_n_s_getWeightedGraph, __pyx_k_getWeightedGraph, sizeof(__pyx_k_getWeightedGraph), 0, 0, 1, 1},
    {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
    {&__pyx_n_s_gf, __pyx_k_gf, sizeof(__pyx_k_gf), 0, 0, 1, 1},
    {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_increase, __pyx_k_increase, sizeof(__pyx_k_increase), 0, 0, 1, 1},
    {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
    {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
    {&__pyx_n_s_init_subclass, __pyx_k_init_subclass, sizeof(__pyx_k_init_subclass), 0, 0, 1, 1},
    {&__pyx_n_s_inputAttribute, __pyx_k_inputAttribute, sizeof(__pyx_k_inputAttribute), 0, 0, 1, 1},
    {&__pyx_n_s_inverse, __pyx_k_inverse, sizeof(__pyx_k_inverse), 0, 0, 1, 1},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_iterEdges, __pyx_k_iterEdges, sizeof(__pyx_k_iterEdges), 0, 0, 1, 1},
    {&__pyx_n_s_iterEdgesWeights, __pyx_k_iterEdgesWeights, sizeof(__pyx_k_iterEdgesWeights), 0, 0, 1, 1},
    {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
    {&__pyx_n_s_localDegree, __pyx_k_localDegree, sizeof(__pyx_k_localDegree), 0, 0, 1, 1},
    {&__pyx_n_s_localDegreeScore, __pyx_k_localDegreeScore, sizeof(__pyx_k_localDegreeScore), 0, 0, 1, 1},
    {&__pyx_n_s_localFilterScore, __pyx_k_localFilterScore, sizeof(__pyx_k_localFilterScore), 0, 0, 1, 1},
    {&__pyx_n_s_localSimScore, __pyx_k_localSimScore, sizeof(__pyx_k_localSimScore), 0, 0, 1, 1},
    {&__pyx_n_s_logarithmic, __pyx_k_logarithmic, sizeof(__pyx_k_logarithmic), 0, 0, 1, 1},
    {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
    {&__pyx_n_s_lowerBound, __pyx_k_lowerBound, sizeof(__pyx_k_lowerBound), 0, 0, 1, 1},
    {&__pyx_n_s_lowerParameterBound, __pyx_k_lowerParameterBound, sizeof(__pyx_k_lowerParameterBound), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_maxRank, __pyx_k_maxRank, sizeof(__pyx_k_maxRank), 0, 0, 1, 1},
    {&__pyx_n_s_maxSteps, __pyx_k_maxSteps, sizeof(__pyx_k_maxSteps), 0, 0, 1, 1},
    {&__pyx_n_s_meanQuadrangles, __pyx_k_meanQuadrangles, sizeof(__pyx_k_meanQuadrangles), 0, 0, 1, 1},
    {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
    {&__pyx_n_s_minDistance, __pyx_k_minDistance, sizeof(__pyx_k_minDistance), 0, 0, 1, 1},
    {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
    {&__pyx_n_s_mro_entries, __pyx_k_mro_entries, sizeof(__pyx_k_mro_entries), 0, 0, 1, 1},
    {&__pyx_n_s_ms, __pyx_k_ms, sizeof(__pyx_k_ms), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_s_networkit_sparsification, __pyx_k_networkit_sparsification, sizeof(__pyx_k_networkit_sparsification), 0, 0, 1, 1},
    {&__pyx_kp_s_networkit_sparsification_pyx, __pyx_k_networkit_sparsification_pyx, sizeof(__pyx_k_networkit_sparsification_pyx), 0, 0, 1, 0},
    {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
    {&__pyx_kp_u_none_randomized, __pyx_k_none_randomized, sizeof(__pyx_k_none_randomized), 0, 1, 0, 0},
    {&__pyx_n_s_norm, __pyx_k_norm, sizeof(__pyx_k_norm), 0, 0, 1, 1},
    {&__pyx_n_s_numberIterations, __pyx_k_numberIterations, sizeof(__pyx_k_numberIterations), 0, 0, 1, 1},
    {&__pyx_n_s_numberOfEdges, __pyx_k_numberOfEdges, sizeof(__pyx_k_numberOfEdges), 0, 0, 1, 1},
    {&__pyx_n_s_numberSystems, __pyx_k_numberSystems, sizeof(__pyx_k_numberSystems), 0, 0, 1, 1},
    {&__pyx_n_s_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
    {&__pyx_n_s_offset, __pyx_k_offset, sizeof(__pyx_k_offset), 0, 0, 1, 1},
    {&__pyx_n_s_omega, __pyx_k_omega, sizeof(__pyx_k_omega), 0, 0, 1, 1},
    {&__pyx_n_s_originalScores, __pyx_k_originalScores, sizeof(__pyx_k_originalScores), 0, 0, 1, 1},
    {&__pyx_n_s_par, __pyx_k_par, sizeof(__pyx_k_par), 0, 0, 1, 1},
    {&__pyx_n_s_paramAlgorithm, __pyx_k_paramAlgorithm, sizeof(__pyx_k_paramAlgorithm), 0, 0, 1, 1},
    {&__pyx_n_s_parameter, __pyx_k_parameter, sizeof(__pyx_k_parameter), 0, 0, 1, 1},
    {&__pyx_kp_u_parameterization_method_not_yet, __pyx_k_parameterization_method_not_yet, sizeof(__pyx_k_parameterization_method_not_yet), 0, 1, 0, 0},
    {&__pyx_n_s_parameterize, __pyx_k_parameterize, sizeof(__pyx_k_parameterize), 0, 0, 1, 1},
    {&__pyx_n_s_partition, __pyx_k_partition, sizeof(__pyx_k_partition), 0, 0, 1, 1},
    {&__pyx_n_s_pf, __pyx_k_pf, sizeof(__pyx_k_pf), 0, 0, 1, 1},
    {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
    {&__pyx_n_s_preprocess, __pyx_k_preprocess, sizeof(__pyx_k_preprocess), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
    {&__pyx_n_s_quadranglePrefixJaccard, __pyx_k_quadranglePrefixJaccard, sizeof(__pyx_k_quadranglePrefixJaccard), 0, 0, 1, 1},
    {&__pyx_n_s_quadrangles, __pyx_k_quadrangles, sizeof(__pyx_k_quadrangles), 0, 0, 1, 1},
    {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_reScore, __pyx_k_reScore, sizeof(__pyx_k_reScore), 0, 0, 1, 1},
    {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
    {&__pyx_n_s_refine, __pyx_k_refine, sizeof(__pyx_k_refine), 0, 0, 1, 1},
    {&__pyx_n_s_result, __pyx_k_result, sizeof(__pyx_k_result), 0, 0, 1, 1},
    {&__pyx_n_s_reverse, __pyx_k_reverse, sizeof(__pyx_k_reverse), 0, 0, 1, 1},
    {&__pyx_n_s_rneScore, __pyx_k_rneScore, sizeof(__pyx_k_rneScore), 0, 0, 1, 1},
    {&__pyx_n_s_run, __pyx_k_run, sizeof(__pyx_k_run), 0, 0, 1, 1},
    {&__pyx_n_s_scanScore, __pyx_k_scanScore, sizeof(__pyx_k_scanScore), 0, 0, 1, 1},
    {&__pyx_n_s_score, __pyx_k_score, sizeof(__pyx_k_score), 0, 0, 1, 1},
    {&__pyx_kp_u_score_must_be_either_a_vector_of, __pyx_k_score_must_be_either_a_vector_of, sizeof(__pyx_k_score_must_be_either_a_vector_of), 0, 1, 0, 0},
    {&__pyx_n_s_scorer, __pyx_k_scorer, sizeof(__pyx_k_scorer), 0, 0, 1, 1},
    {&__pyx_n_s_scores, __pyx_k_scores, sizeof(__pyx_k_scores), 0, 0, 1, 1},
    {&__pyx_n_s_selection, __pyx_k_selection, sizeof(__pyx_k_selection), 0, 0, 1, 1},
    {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
    {&__pyx_kp_s_self__this_cannot_be_converted_t, __pyx_k_self__this_cannot_be_converted_t, sizeof(__pyx_k_self__this_cannot_be_converted_t), 0, 0, 1, 0},
    {&__pyx_n_s_set_name, __pyx_k_set_name, sizeof(__pyx_k_set_name), 0, 0, 1, 1},
    {&__pyx_n_s_setitem, __pyx_k_setitem, sizeof(__pyx_k_setitem), 0, 0, 1, 1},
    {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_simmelianOverlap, __pyx_k_simmelianOverlap, sizeof(__pyx_k_simmelianOverlap), 0, 0, 1, 1},
    {&__pyx_n_s_sizeIncreasesWithParameter, __pyx_k_sizeIncreasesWithParameter, sizeof(__pyx_k_sizeIncreasesWithParameter), 0, 0, 1, 1},
    {&__pyx_n_s_sorted, __pyx_k_sorted, sizeof(__pyx_k_sorted), 0, 0, 1, 1},
    {&__pyx_n_s_sparsified, __pyx_k_sparsified, sizeof(__pyx_k_sparsified), 0, 0, 1, 1},
    {&__pyx_n_s_sparsifier, __pyx_k_sparsifier, sizeof(__pyx_k_sparsifier), 0, 0, 1, 1},
    {&__pyx_n_s_squared, __pyx_k_squared, sizeof(__pyx_k_squared), 0, 0, 1, 1},
    {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
    {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
    {&__pyx_n_s_targetBurntRatio, __pyx_k_targetBurntRatio, sizeof(__pyx_k_targetBurntRatio), 0, 0, 1, 1},
    {&__pyx_n_s_tebr, __pyx_k_tebr, sizeof(__pyx_k_tebr), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_together, __pyx_k_together, sizeof(__pyx_k_together), 0, 0, 1, 1},
    {&__pyx_n_s_triangleScore, __pyx_k_triangleScore, sizeof(__pyx_k_triangleScore), 0, 0, 1, 1},
    {&__pyx_n_s_triangles, __pyx_k_triangles, sizeof(__pyx_k_triangles), 0, 0, 1, 1},
    {&__pyx_n_s_turbo, __pyx_k_turbo, sizeof(__pyx_k_turbo), 0, 0, 1, 1},
    {&__pyx_n_s_u, __pyx_k_u, sizeof(__pyx_k_u), 0, 0, 1, 1},
    {&__pyx_n_s_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 0, 1, 1},
    {&__pyx_n_s_upperBound, __pyx_k_upperBound, sizeof(__pyx_k_upperBound), 0, 0, 1, 1},
    {&__pyx_n_s_upperEdgeIdBound, __pyx_k_upperEdgeIdBound, sizeof(__pyx_k_upperEdgeIdBound), 0, 0, 1, 1},
    {&__pyx_n_s_upperParameterBound, __pyx_k_upperParameterBound, sizeof(__pyx_k_upperParameterBound), 0, 0, 1, 1},
    {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
    {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
    {&__pyx_n_s_withEdgeScores, __pyx_k_withEdgeScores, sizeof(__pyx_k_withEdgeScores), 0, 0, 1, 1},
    {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
    {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
    {&__pyx_n_s_zip, __pyx_k_zip, sizeof(__pyx_k_zip), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_object = __Pyx_GetBuiltinName(__pyx_n_s_object); if (!__pyx_builtin_object) __PYX_ERR(0, 700, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(0, 33, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(1, 2, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 720, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 892, __pyx_L1_error)
  __pyx_builtin_zip = __Pyx_GetBuiltinName(__pyx_n_s_zip); if (!__pyx_builtin_zip) __PYX_ERR(0, 992, __pyx_L1_error)
  __pyx_builtin_sorted = __Pyx_GetBuiltinName(__pyx_n_s_sorted); if (!__pyx_builtin_sorted) __PYX_ERR(0, 993, __pyx_L1_error)
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) __PYX_ERR(1, 68, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "networkit/sparsification.pyx":33
 * 
 * 	cdef bool_t isDoubleValue(self):
 * 		raise RuntimeError("Implement in subclass")             # <<<<<<<<<<<<<<
 * 
 * 	def __init__(self, *args, **namedargs):
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_Implement_in_subclass); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "networkit/sparsification.pyx":37
 * 	def __init__(self, *args, **namedargs):
 * 		if type(self) == EdgeScore:
 * 			raise RuntimeError("Error, you may not use EdgeScore directly, use a sub-class instead")             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_Error_you_may_not_use_EdgeScore); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "networkit/sparsification.pyx":228
 * 				self._this = new _EdgeScoreNormalizer[count](G._this, self._inScoreCount, inverse, lower, upper)
 * 			except TypeError:
 * 				raise TypeError("score must be either a vector of integer or float")             # <<<<<<<<<<<<<<
 * 
 * 	cdef bool_t isDoubleValue(self):
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_score_must_be_either_a_vector_of); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "networkit/sparsification.pyx":347
 * 			The weighted result graph.
 * 		"""
 * 		return Graph(0).setThis(self._this.calculate())             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<networkit/sparsification/SimmelianOverlapScore.hpp>":
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_int_0); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "networkit/sparsification.pyx":1069
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)             # <<<<<<<<<<<<<<
 * 
 * class QuadrilateralSimmelianSparsifier(Sparsifier):
 */
  __pyx_tuple__5 = PyTuple_Pack(4, Py_False, __pyx_float_0_0, __pyx_float_1_0, __pyx_int_20); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 1069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "networkit/sparsification.pyx":1479
 * 
 * 	def _getParameterizationAlgorithm(self):
 * 		raise NotImplementedError("parameterization method not yet implemented.")             # <<<<<<<<<<<<<<
 * 
 * class AlgebraicDistanceSparsifier(Sparsifier):
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_parameterization_method_not_yet); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 1479, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "networkit/sparsification.pyx":1589
 * 		partition = cdAlgo.getPartition()
 * 
 * 		def together(u, v):             # <<<<<<<<<<<<<<
 * 			if (partition[u] == partition[v]):
 * 				return 1.0
 */
  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_n_s_u, __pyx_n_s_v); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 1589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_together, 1589, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) __PYX_ERR(0, 1589, __pyx_L1_error)

  /* "networkit/sparsification.pyx":42
 * 		self._G = None # just to be sure the graph is deleted
 * 
 * 	def score(self, u, v = None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		score(u, v=None)
 */
  __pyx_tuple__11 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_u, __pyx_n_s_v); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);
  __pyx_codeobj__12 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__11, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_score, 42, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__12)) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_tuple__13 = PyTuple_Pack(1, Py_None); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "networkit/sparsification.pyx":71
 * 				return (<_EdgeScore[count]*>(self._this)).score(u, v)
 * 
 * 	def scores(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores()
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_codeobj__15 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 71, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__15)) __PYX_ERR(0, 71, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__16 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__16)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 */
  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);
  __pyx_codeobj__18 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__18)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__20 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__20)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__21 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__21)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__22 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__22)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__23 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__23)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__24 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__24)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__25 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__25)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__26 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__26)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__27 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__27)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__28 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__28)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__30 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__30)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__32 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__32)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "networkit/sparsification.pyx":338
 * 			self._this = NULL
 * 
 * 	def getWeightedGraph(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getWeightedGraph()
 */
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getWeightedGraph, 338, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 338, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__34 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__34)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__36 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__36)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__56 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__56)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "networkit/sparsification.pyx":695
 * 		del self._this
 * 
 * 	def calculate(self):             # <<<<<<<<<<<<<<
 * 		return Graph().setThis(self._this.calculate())
 * 
 */
  __pyx_codeobj__58 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_calculate, 695, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__58)) __PYX_ERR(0, 695, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__60 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__17, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__60)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "networkit/sparsification.pyx":700
 * _ABS_ZERO = 1e-7
 * 
 * class Sparsifier(object):             # <<<<<<<<<<<<<<
 * 	""" Abstract base class representing a graph sparsification algorithm that
 * 	uses only one parameter to determine the degree of filtering. """
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);
  __pyx_tuple__62 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "networkit/sparsification.pyx":704
 * 	uses only one parameter to determine the degree of filtering. """
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__63 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_G); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 704, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 704, __pyx_L1_error)

  /* "networkit/sparsification.pyx":722
 * 		raise NotImplementedError
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		""" The actual implementation of the sparsification.
 * 		(To be implemented in the derived class.)
 */
  __pyx_tuple__65 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_parameter, __pyx_n_s_attribute); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 722, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 722, __pyx_L1_error)

  /* "networkit/sparsification.pyx":733
 * 		raise NotImplementedError
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		""" Returns an appropriate parameterization algorithm for this sparsifier.
 * 		(To be implemented in the derived class.)
 */
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 733, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 733, __pyx_L1_error)

  /* "networkit/sparsification.pyx":739
 * 		return SimpleParameterization()
 * 
 * 	def getSparsifiedGraph(self, G, parameter, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraph(sG, parameter, attribute=None)
 */
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__65, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph_2, 739, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(0, 739, __pyx_L1_error)

  /* "networkit/sparsification.pyx":760
 * 		return self._getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getSparsifiedGraphOfSize(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraphOfSize(G, edgeRatio, attribute=None)
 */
  __pyx_tuple__69 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_edgeRatio, __pyx_n_s_attribute, __pyx_n_s_parameter); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 760, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);
  __pyx_codeobj__70 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__69, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraphOfSize, 760, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__70)) __PYX_ERR(0, 760, __pyx_L1_error)

  /* "networkit/sparsification.pyx":789
 * 		return self.getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getParameter(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getParameter(G, edgeRatio, attribute=None)
 */
  __pyx_tuple__71 = PyTuple_Pack(6, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_edgeRatio, __pyx_n_s_attribute, __pyx_n_s_paramAlgorithm, __pyx_n_s_parameter); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);
  __pyx_codeobj__72 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__71, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameter, 789, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__72)) __PYX_ERR(0, 789, __pyx_L1_error)

  /* "networkit/sparsification.pyx":823
 * 	"""
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */
  __pyx_tuple__73 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_algorithm, __pyx_n_s_G, __pyx_n_s_attribute, __pyx_n_s_edgeRatio); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_parameterize, 823, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(0, 823, __pyx_L1_error)

  /* "networkit/sparsification.pyx":861
 * 	"""
 * 
 * 	def __init__(self, sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps):             # <<<<<<<<<<<<<<
 * 
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter
 */
  __pyx_tuple__75 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_sizeIncreasesWithParameter, __pyx_n_s_lowerParameterBound, __pyx_n_s_upperParameterBound, __pyx_n_s_maxSteps); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 861, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(0, 861, __pyx_L1_error)

  /* "networkit/sparsification.pyx":868
 * 		self.maxSteps = maxSteps
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */
  __pyx_tuple__77 = PyTuple_Pack(15, __pyx_n_s_self, __pyx_n_s_algorithm, __pyx_n_s_G, __pyx_n_s_attribute, __pyx_n_s_edgeRatio, __pyx_n_s_lowerBound, __pyx_n_s_upperBound, __pyx_n_s_estimation, __pyx_n_s_bestParameter, __pyx_n_s_minDistance, __pyx_n_s_i, __pyx_n_s_sparsified, __pyx_n_s_currentEdgeRatio, __pyx_n_s_distance, __pyx_n_s_increase); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 15, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__77, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_parameterize, 868, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(0, 868, __pyx_L1_error)

  /* "networkit/sparsification.pyx":934
 * 	"""
 * 
 * 	def __init__(self, lowerParameterBound, upperParameterBound):             # <<<<<<<<<<<<<<
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound
 */
  __pyx_tuple__79 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_lowerParameterBound, __pyx_n_s_upperParameterBound); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__79, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 934, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(0, 934, __pyx_L1_error)

  /* "networkit/sparsification.pyx":938
 * 		self.upperParameterBound = upperParameterBound
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */
  __pyx_tuple__81 = PyTuple_Pack(12, __pyx_n_s_self, __pyx_n_s_algorithm, __pyx_n_s_G, __pyx_n_s_attribute, __pyx_n_s_edgeRatio, __pyx_n_s_bestParameter, __pyx_n_s_bestRatio, __pyx_n_s_minDistance, __pyx_n_s_i, __pyx_n_s_sparsified, __pyx_n_s_currentEdgeRatio, __pyx_n_s_distance); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 12, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_parameterize, 938, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(0, 938, __pyx_L1_error)

  /* "networkit/sparsification.pyx":972
 * 		return bestParameter
 * 
 * def getRankAttribute(attribute, reverse = False):             # <<<<<<<<<<<<<<
 * 	"""
 * 	getRankAttribute(attribute, reverse=False)
 */
  __pyx_tuple__83 = PyTuple_Pack(8, __pyx_n_s_attribute, __pyx_n_s_reverse, __pyx_n_s_attribute_2, __pyx_n_s_index, __pyx_n_s_result, __pyx_n_s_i, __pyx_n_s_v, __pyx_n_s_x); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getRankAttribute, 972, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 972, __pyx_L1_error)
  __pyx_tuple__85 = PyTuple_Pack(1, ((PyObject *)Py_False)); if (unlikely(!__pyx_tuple__85)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__85);
  __Pyx_GIVEREF(__pyx_tuple__85);

  /* "networkit/sparsification.pyx":1011
 * 	"""
 * 
 * 	def __init__(self, maxRank):             # <<<<<<<<<<<<<<
 * 		self.maxRank = maxRank
 * 
 */
  __pyx_tuple__86 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_maxRank); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 1011, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1011, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(0, 1011, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1014
 * 		self.maxRank = maxRank
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__88 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_triangles, __pyx_n_s_simmelianOverlap); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 1014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__88, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1014, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) __PYX_ERR(0, 1014, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1032
 * 		return simmelianOverlap.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_tuple__90 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_parameter, __pyx_n_s_attribute, __pyx_n_s_gf); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 1032, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1032, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) __PYX_ERR(0, 1032, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1036
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return CompleteSearchParameterization(0, self.maxRank)
 * 
 */
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1036, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(0, 1036, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1047
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__93 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_triangles, __pyx_n_s_a_sj); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 1047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1047, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 1047, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1064
 * 		return a_sj
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1064, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 1064, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1068
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1068, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 1068, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1078
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__97 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_quadrangles, __pyx_n_s_meanQuadrangles, __pyx_n_s_quadranglePrefixJaccard); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 1078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__97, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1078, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(0, 1078, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1094
 * 		return quadranglePrefixJaccard
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1094, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 1094, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1098
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__100 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1098, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__100)) __PYX_ERR(0, 1098, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1108
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__101 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_triangles, __pyx_n_s_ms, __pyx_n_s_a_ms); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);
  __pyx_codeobj__102 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__101, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1108, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__102)) __PYX_ERR(0, 1108, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1126
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1126, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 1126, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1130
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__104 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1130, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__104)) __PYX_ERR(0, 1130, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1145
 * 	"""
 * 
 * 	def __init__(self, degsToAttrValue):             # <<<<<<<<<<<<<<
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 */
  __pyx_tuple__105 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_degsToAttrValue); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);
  __pyx_codeobj__106 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__105, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1145, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__106)) __PYX_ERR(0, 1145, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1148
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__107 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_inputAttribute, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_ms, __pyx_n_s_a_ms); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 1148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__107, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1148, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(0, 1148, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1170
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1170, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(0, 1170, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1174
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1174, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(0, 1174, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1184
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__111 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_triangles); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__111, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1184, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 1184, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1198
 * 		return JaccardSimilarityAttributizer(G, triangles).getAttribute()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1198, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(0, 1198, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1202
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1202, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(0, 1202, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1213
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__115 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_triangles, __pyx_n_s_localSimScore); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(0, 1213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__115, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1213, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 1213, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1230
 * 		return localSimScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1230, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(0, 1230, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1234
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__118 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1234, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__118)) __PYX_ERR(0, 1234, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1244
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__119 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_inputAttribute, __pyx_n_s_u, __pyx_n_s_v, __pyx_n_s_w, __pyx_n_s_edgeId, __pyx_n_s_scorer, __pyx_n_s_scores); if (unlikely(!__pyx_tuple__119)) __PYX_ERR(0, 1244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__119);
  __Pyx_GIVEREF(__pyx_tuple__119);
  __pyx_codeobj__120 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__119, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1244, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__120)) __PYX_ERR(0, 1244, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1267
 * 		return scores
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__121 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1267, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__121)) __PYX_ERR(0, 1267, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1271
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1271, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(0, 1271, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1281
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__123 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_reScore); if (unlikely(!__pyx_tuple__123)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__123);
  __Pyx_GIVEREF(__pyx_tuple__123);
  __pyx_codeobj__124 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__123, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1281, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__124)) __PYX_ERR(0, 1281, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1298
 * 		return reScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, False)
 * 		return gf.calculate()
 */
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1298, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(0, 1298, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1302
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return SimpleParameterization()
 * 
 */
  __pyx_codeobj__126 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1302, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__126)) __PYX_ERR(0, 1302, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1318
 * 	"""
 * 
 * 	def __init__(self, above = True):             # <<<<<<<<<<<<<<
 * 		self.above = above
 * 
 */
  __pyx_tuple__127 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_above); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(0, 1318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__127, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1318, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(0, 1318, __pyx_L1_error)
  __pyx_tuple__129 = PyTuple_Pack(1, ((PyObject *)Py_True)); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 1318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);

  /* "networkit/sparsification.pyx":1321
 * 		self.above = above
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__130 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_rneScore); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__130, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1321, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(0, 1321, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1338
 * 		return rneScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, self.above)
 * 		return gf.calculate()
 */
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1338, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(0, 1338, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1342
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__133 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1342, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__133)) __PYX_ERR(0, 1342, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1359
 * 	"""
 * 
 * 	def __init__(self, burnProbability, targetBurntRatio):             # <<<<<<<<<<<<<<
 * 		self.burnProbability = burnProbability
 * 		self.targetBurntRatio = targetBurntRatio
 */
  __pyx_tuple__134 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_burnProbability, __pyx_n_s_targetBurntRatio); if (unlikely(!__pyx_tuple__134)) __PYX_ERR(0, 1359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__134);
  __Pyx_GIVEREF(__pyx_tuple__134);
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__134, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1359, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(0, 1359, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1363
 * 		self.targetBurntRatio = targetBurntRatio
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__136 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_ffScore); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(0, 1363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1363, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(0, 1363, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1380
 * 		return ffScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__138 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1380, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__138)) __PYX_ERR(0, 1380, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1384
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1384, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) __PYX_ERR(0, 1384, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1394
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__140 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_localDegree, __pyx_n_s_localDegreeScore); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1394, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(0, 1394, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1412
 * 		return localDegreeScore
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__142 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1412, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__142)) __PYX_ERR(0, 1412, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1416
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1416, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(0, 1416, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1426
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__144 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_a_triangles, __pyx_n_s_scanScore); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(0, 1426, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__144, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1426, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(0, 1426, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1445
 * 		return scanScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__146 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1445, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__146)) __PYX_ERR(0, 1445, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1449
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1449, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(0, 1449, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1459
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__148 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_triangleScore); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(0, 1459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__148, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1459, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(0, 1459, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1474
 * 		return triangleScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__150 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1474, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__150)) __PYX_ERR(0, 1474, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1478
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("parameterization method not yet implemented.")
 * 
 */
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1478, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) __PYX_ERR(0, 1478, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1499
 * 	"""
 * 
 * 	def __init__(self, numberSystems=10, numberIterations=30, omega=0.5, norm=0):             # <<<<<<<<<<<<<<
 * 		self.numberSystems = numberSystems
 * 		self.numberIterations = numberIterations
 */
  __pyx_tuple__152 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_numberSystems, __pyx_n_s_numberIterations, __pyx_n_s_omega, __pyx_n_s_norm); if (unlikely(!__pyx_tuple__152)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__152);
  __Pyx_GIVEREF(__pyx_tuple__152);
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__152, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1499, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __pyx_tuple__154 = PyTuple_Pack(4, ((PyObject *)__pyx_int_10), ((PyObject *)__pyx_int_30), ((PyObject*)__pyx_float_0_5), ((PyObject *)__pyx_int_0)); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);

  /* "networkit/sparsification.pyx":1505
 * 		self.norm = norm
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__155 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_algDist, __pyx_n_s_d); if (unlikely(!__pyx_tuple__155)) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__155);
  __Pyx_GIVEREF(__pyx_tuple__155);
  __pyx_codeobj__156 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__155, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1505, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__156)) __PYX_ERR(0, 1505, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1520
 * 		return [1.0 - d for d in algDist.getEdgeScores()]
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1520, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) __PYX_ERR(0, 1520, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1524
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__158 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1524, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__158)) __PYX_ERR(0, 1524, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1535
 * 	edges, which should be present in the sparsified graph.
 * 	"""
 * 	def __init__(self, sparsifier):             # <<<<<<<<<<<<<<
 * 		self.sparsifier = sparsifier
 * 
 */
  __pyx_tuple__159 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_sparsifier); if (unlikely(!__pyx_tuple__159)) __PYX_ERR(0, 1535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__159);
  __Pyx_GIVEREF(__pyx_tuple__159);
  __pyx_codeobj__160 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__159, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1535, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__160)) __PYX_ERR(0, 1535, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1538
 * 		self.sparsifier = sparsifier
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__161 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_originalScores, __pyx_n_s_localFilterScore); if (unlikely(!__pyx_tuple__161)) __PYX_ERR(0, 1538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__161);
  __Pyx_GIVEREF(__pyx_tuple__161);
  __pyx_codeobj__162 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__161, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1538, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__162)) __PYX_ERR(0, 1538, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1556
 * 		return localFilterScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_codeobj__163 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getSparsifiedGraph, 1556, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__163)) __PYX_ERR(0, 1556, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1560
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_codeobj__164 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__14, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_getParameterizationAlgorithm, 1560, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__164)) __PYX_ERR(0, 1560, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1573
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_tuple__165 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_G, __pyx_n_s_cdAlgo, __pyx_n_s_partition, __pyx_n_s_together, __pyx_n_s_together, __pyx_n_s_edgeScores, __pyx_n_s_i); if (unlikely(!__pyx_tuple__165)) __PYX_ERR(0, 1573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__165);
  __Pyx_GIVEREF(__pyx_tuple__165);
  __pyx_codeobj__166 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__165, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1573, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__166)) __PYX_ERR(0, 1573, __pyx_L1_error)

  /* "networkit/sparsification.pyx":1611
 * 	"""
 * 
 * 	def __init__(self, constValue = 1.0):             # <<<<<<<<<<<<<<
 * 		self.constValue = constValue
 * 
 */
  __pyx_tuple__167 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_constValue); if (unlikely(!__pyx_tuple__167)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__167);
  __Pyx_GIVEREF(__pyx_tuple__167);
  __pyx_codeobj__168 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__167, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_init, 1611, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__168)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __pyx_tuple__169 = PyTuple_Pack(1, ((PyObject*)__pyx_float_1_0)); if (unlikely(!__pyx_tuple__169)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__169);
  __Pyx_GIVEREF(__pyx_tuple__169);

  /* "networkit/sparsification.pyx":1614
 * 		self.constValue = constValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_codeobj__170 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_networkit_sparsification_pyx, __pyx_n_s_scores, 1614, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__170)) __PYX_ERR(0, 1614, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  __pyx_umethod_PyList_Type___setitem.type = (PyObject*)&PyList_Type;
  __pyx_umethod_PyList_Type___setitem.method_name = &__pyx_n_s_setitem;
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_7 = PyFloat_FromDouble(1e-7); if (unlikely(!__pyx_float_1eneg_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_100_0 = PyFloat_FromDouble(100.0); if (unlikely(!__pyx_float_100_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_30 = PyInt_FromLong(30); if (unlikely(!__pyx_int_30)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_t_1 = PyImport_ImportModule("networkit.base"); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_9networkit_4base_Algorithm = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.base", "Algorithm", sizeof(struct __pyx_obj_9networkit_4base_Algorithm), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_4base_Algorithm),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_4base_Algorithm) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_9networkit_14sparsification_EdgeScore = &__pyx_vtable_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_EdgeScore.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_9EdgeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_4base_Algorithm); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_EdgeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_EdgeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_EdgeScore)) __PYX_ERR(0, 26, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_EdgeScore_spec, __pyx_ptype_9networkit_14sparsification_EdgeScore) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_EdgeScore = &__pyx_type_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_EdgeScore->tp_base = __pyx_ptype_9networkit_4base_Algorithm;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_EdgeScore) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_EdgeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_EdgeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_EdgeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_EdgeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_EdgeScore, __pyx_vtabptr_9networkit_14sparsification_EdgeScore) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_EdgeScore) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EdgeScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScore) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScore) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore = &__pyx_vtable_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;
  __pyx_vtable_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore)) __PYX_ERR(0, 93, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore_spec, __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore = &__pyx_type_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore, __pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ChibaNishizekiTriangleEdgeScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_ChibaNishizekiTriangleEdgeScore) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore = &__pyx_vtable_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;
  __pyx_vtable_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore)) __PYX_ERR(0, 117, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore_spec, __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore = &__pyx_type_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore, __pyx_vtabptr_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ChibaNishizekiQuadrangleEdgeScor, (PyObject *) __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_ChibaNishizekiQuadrangleEdgeScore) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_TriangleEdgeScore = &__pyx_vtable_9networkit_14sparsification_TriangleEdgeScore;
  __pyx_vtable_9networkit_14sparsification_TriangleEdgeScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_TriangleEdgeScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_17TriangleEdgeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_TriangleEdgeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore)) __PYX_ERR(0, 141, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_TriangleEdgeScore_spec, __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore = &__pyx_type_9networkit_14sparsification_TriangleEdgeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore, __pyx_vtabptr_9networkit_14sparsification_TriangleEdgeScore) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_TriangleEdgeScore) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_TriangleEdgeScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_TriangleEdgeScore) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_EdgeScoreLinearizer = &__pyx_vtable_9networkit_14sparsification_EdgeScoreLinearizer;
  __pyx_vtable_9networkit_14sparsification_EdgeScoreLinearizer.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_EdgeScoreLinearizer.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_19EdgeScoreLinearizer_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer)) __PYX_ERR(0, 165, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer_spec, __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer = &__pyx_type_9networkit_14sparsification_EdgeScoreLinearizer;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer, __pyx_vtabptr_9networkit_14sparsification_EdgeScoreLinearizer) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EdgeScoreLinearizer, (PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreLinearizer) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_EdgeScoreNormalizer = &__pyx_vtable_9networkit_14sparsification_EdgeScoreNormalizer;
  __pyx_vtable_9networkit_14sparsification_EdgeScoreNormalizer.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_EdgeScoreNormalizer.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_19EdgeScoreNormalizer_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer)) __PYX_ERR(0, 196, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer_spec, __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer = &__pyx_type_9networkit_14sparsification_EdgeScoreNormalizer;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer, __pyx_vtabptr_9networkit_14sparsification_EdgeScoreNormalizer) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EdgeScoreNormalizer, (PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreNormalizer) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_EdgeScoreBlender = &__pyx_vtable_9networkit_14sparsification_EdgeScoreBlender;
  __pyx_vtable_9networkit_14sparsification_EdgeScoreBlender.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_EdgeScoreBlender.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_16EdgeScoreBlender_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_EdgeScoreBlender_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender)) __PYX_ERR(0, 238, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_EdgeScoreBlender_spec, __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender = &__pyx_type_9networkit_14sparsification_EdgeScoreBlender;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender, __pyx_vtabptr_9networkit_14sparsification_EdgeScoreBlender) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_EdgeScoreBlender) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EdgeScoreBlender, (PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreBlender) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_GeometricMeanScore = &__pyx_vtable_9networkit_14sparsification_GeometricMeanScore;
  __pyx_vtable_9networkit_14sparsification_GeometricMeanScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_GeometricMeanScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_18GeometricMeanScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_GeometricMeanScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_GeometricMeanScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_GeometricMeanScore)) __PYX_ERR(0, 275, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_GeometricMeanScore_spec, __pyx_ptype_9networkit_14sparsification_GeometricMeanScore) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_GeometricMeanScore = &__pyx_type_9networkit_14sparsification_GeometricMeanScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_GeometricMeanScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_GeometricMeanScore) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_GeometricMeanScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_GeometricMeanScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_GeometricMeanScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_GeometricMeanScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_GeometricMeanScore, __pyx_vtabptr_9networkit_14sparsification_GeometricMeanScore) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_GeometricMeanScore) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_GeometricMeanScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_GeometricMeanScore) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_GeometricMeanScore) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight_spec, NULL); if (unlikely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight)) __PYX_ERR(0, 304, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight_spec, __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight = &__pyx_type_9networkit_14sparsification_EdgeScoreAsWeight;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_EdgeScoreAsWeight, (PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_SimmelianOverlapScore = &__pyx_vtable_9networkit_14sparsification_SimmelianOverlapScore;
  __pyx_vtable_9networkit_14sparsification_SimmelianOverlapScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_SimmelianOverlapScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_21SimmelianOverlapScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_SimmelianOverlapScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore)) __PYX_ERR(0, 354, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_SimmelianOverlapScore_spec, __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore = &__pyx_type_9networkit_14sparsification_SimmelianOverlapScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore, __pyx_vtabptr_9networkit_14sparsification_SimmelianOverlapScore) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_SimmelianOverlapScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_SimmelianOverlapScore) < 0) __PYX_ERR(0, 354, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_PrefixJaccardScore = &__pyx_vtable_9networkit_14sparsification_PrefixJaccardScore;
  __pyx_vtable_9networkit_14sparsification_PrefixJaccardScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_PrefixJaccardScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_18PrefixJaccardScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 386, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_PrefixJaccardScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore)) __PYX_ERR(0, 386, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_PrefixJaccardScore_spec, __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore = &__pyx_type_9networkit_14sparsification_PrefixJaccardScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore, __pyx_vtabptr_9networkit_14sparsification_PrefixJaccardScore) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_PrefixJaccardScore) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PrefixJaccardScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_PrefixJaccardScore) < 0) __PYX_ERR(0, 386, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_MultiscaleScore = &__pyx_vtable_9networkit_14sparsification_MultiscaleScore;
  __pyx_vtable_9networkit_14sparsification_MultiscaleScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_MultiscaleScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_15MultiscaleScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_MultiscaleScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_MultiscaleScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_MultiscaleScore)) __PYX_ERR(0, 402, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_MultiscaleScore_spec, __pyx_ptype_9networkit_14sparsification_MultiscaleScore) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_MultiscaleScore = &__pyx_type_9networkit_14sparsification_MultiscaleScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_MultiscaleScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_MultiscaleScore) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_MultiscaleScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_MultiscaleScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_MultiscaleScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_MultiscaleScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_MultiscaleScore, __pyx_vtabptr_9networkit_14sparsification_MultiscaleScore) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_MultiscaleScore) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_MultiscaleScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_MultiscaleScore) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_MultiscaleScore) < 0) __PYX_ERR(0, 402, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_RandomEdgeScore = &__pyx_vtable_9networkit_14sparsification_RandomEdgeScore;
  __pyx_vtable_9networkit_14sparsification_RandomEdgeScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_RandomEdgeScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_15RandomEdgeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_RandomEdgeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_RandomEdgeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_RandomEdgeScore)) __PYX_ERR(0, 432, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_RandomEdgeScore_spec, __pyx_ptype_9networkit_14sparsification_RandomEdgeScore) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_RandomEdgeScore = &__pyx_type_9networkit_14sparsification_RandomEdgeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_RandomEdgeScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_RandomEdgeScore) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_RandomEdgeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_RandomEdgeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_RandomEdgeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_RandomEdgeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_RandomEdgeScore, __pyx_vtabptr_9networkit_14sparsification_RandomEdgeScore) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_RandomEdgeScore) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_RandomEdgeScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_RandomEdgeScore) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_RandomEdgeScore) < 0) __PYX_ERR(0, 432, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_LocalSimilarityScore = &__pyx_vtable_9networkit_14sparsification_LocalSimilarityScore;
  __pyx_vtable_9networkit_14sparsification_LocalSimilarityScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_LocalSimilarityScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_20LocalSimilarityScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_LocalSimilarityScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore)) __PYX_ERR(0, 456, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_LocalSimilarityScore_spec, __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore = &__pyx_type_9networkit_14sparsification_LocalSimilarityScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore, __pyx_vtabptr_9networkit_14sparsification_LocalSimilarityScore) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_LocalSimilarityScore) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LocalSimilarityScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_LocalSimilarityScore) < 0) __PYX_ERR(0, 456, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_ForestFireScore = &__pyx_vtable_9networkit_14sparsification_ForestFireScore;
  __pyx_vtable_9networkit_14sparsification_ForestFireScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_ForestFireScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_15ForestFireScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_ForestFireScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_ForestFireScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_ForestFireScore)) __PYX_ERR(0, 486, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_ForestFireScore_spec, __pyx_ptype_9networkit_14sparsification_ForestFireScore) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_ForestFireScore = &__pyx_type_9networkit_14sparsification_ForestFireScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_ForestFireScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_ForestFireScore) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_ForestFireScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_ForestFireScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_ForestFireScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_ForestFireScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_ForestFireScore, __pyx_vtabptr_9networkit_14sparsification_ForestFireScore) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_ForestFireScore) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ForestFireScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_ForestFireScore) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_ForestFireScore) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_LocalDegreeScore = &__pyx_vtable_9networkit_14sparsification_LocalDegreeScore;
  __pyx_vtable_9networkit_14sparsification_LocalDegreeScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_LocalDegreeScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_16LocalDegreeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_LocalDegreeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_LocalDegreeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_LocalDegreeScore)) __PYX_ERR(0, 516, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_LocalDegreeScore_spec, __pyx_ptype_9networkit_14sparsification_LocalDegreeScore) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_LocalDegreeScore = &__pyx_type_9networkit_14sparsification_LocalDegreeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_LocalDegreeScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_LocalDegreeScore) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_LocalDegreeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_LocalDegreeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_LocalDegreeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_LocalDegreeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_LocalDegreeScore, __pyx_vtabptr_9networkit_14sparsification_LocalDegreeScore) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_LocalDegreeScore) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LocalDegreeScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_LocalDegreeScore) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_LocalDegreeScore) < 0) __PYX_ERR(0, 516, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_RandomNodeEdgeScore = &__pyx_vtable_9networkit_14sparsification_RandomNodeEdgeScore;
  __pyx_vtable_9networkit_14sparsification_RandomNodeEdgeScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_RandomNodeEdgeScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_19RandomNodeEdgeScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore)) __PYX_ERR(0, 542, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore_spec, __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore) < 0) __PYX_ERR(0, 542, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore = &__pyx_type_9networkit_14sparsification_RandomNodeEdgeScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore) < 0) __PYX_ERR(0, 542, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore, __pyx_vtabptr_9networkit_14sparsification_RandomNodeEdgeScore) < 0) __PYX_ERR(0, 542, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore) < 0) __PYX_ERR(0, 542, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_RandomNodeEdgeScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore) < 0) __PYX_ERR(0, 542, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_RandomNodeEdgeScore) < 0) __PYX_ERR(0, 542, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_LocalFilterScore = &__pyx_vtable_9networkit_14sparsification_LocalFilterScore;
  __pyx_vtable_9networkit_14sparsification_LocalFilterScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_LocalFilterScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_16LocalFilterScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_LocalFilterScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_LocalFilterScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_LocalFilterScore)) __PYX_ERR(0, 573, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_LocalFilterScore_spec, __pyx_ptype_9networkit_14sparsification_LocalFilterScore) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_LocalFilterScore = &__pyx_type_9networkit_14sparsification_LocalFilterScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_LocalFilterScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_LocalFilterScore) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_LocalFilterScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_LocalFilterScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_LocalFilterScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_LocalFilterScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_LocalFilterScore, __pyx_vtabptr_9networkit_14sparsification_LocalFilterScore) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_LocalFilterScore) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LocalFilterScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_LocalFilterScore) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_LocalFilterScore) < 0) __PYX_ERR(0, 573, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_ChanceCorrectedTriangleScore = &__pyx_vtable_9networkit_14sparsification_ChanceCorrectedTriangleScore;
  __pyx_vtable_9networkit_14sparsification_ChanceCorrectedTriangleScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_ChanceCorrectedTriangleScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_28ChanceCorrectedTriangleScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 607, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore)) __PYX_ERR(0, 607, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore_spec, __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore = &__pyx_type_9networkit_14sparsification_ChanceCorrectedTriangleScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore, __pyx_vtabptr_9networkit_14sparsification_ChanceCorrectedTriangleScore) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ChanceCorrectedTriangleScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_ChanceCorrectedTriangleScore) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  #endif
  __pyx_vtabptr_9networkit_14sparsification_SCANStructuralSimilarityScore = &__pyx_vtable_9networkit_14sparsification_SCANStructuralSimilarityScore;
  __pyx_vtable_9networkit_14sparsification_SCANStructuralSimilarityScore.__pyx_base = *__pyx_vtabptr_9networkit_14sparsification_EdgeScore;
  __pyx_vtable_9networkit_14sparsification_SCANStructuralSimilarityScore.__pyx_base.isDoubleValue = (bool (*)(struct __pyx_obj_9networkit_14sparsification_EdgeScore *))__pyx_f_9networkit_14sparsification_29SCANStructuralSimilarityScore_isDoubleValue;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_2 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore_spec, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore)) __PYX_ERR(0, 635, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore_spec, __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore = &__pyx_type_9networkit_14sparsification_SCANStructuralSimilarityScore;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore->tp_base = __pyx_ptype_9networkit_14sparsification_EdgeScore;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore, __pyx_vtabptr_9networkit_14sparsification_SCANStructuralSimilarityScore) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_SCANStructuralSimilarityScore, (PyObject *) __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_SCANStructuralSimilarityScore) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification_GlobalThresholdFilter_spec, NULL); if (unlikely(!__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter)) __PYX_ERR(0, 664, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification_GlobalThresholdFilter_spec, __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter) < 0) __PYX_ERR(0, 664, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter = &__pyx_type_9networkit_14sparsification_GlobalThresholdFilter;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter) < 0) __PYX_ERR(0, 664, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter->tp_dictoffset && __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_GlobalThresholdFilter, (PyObject *) __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter) < 0) __PYX_ERR(0, 664, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter) < 0) __PYX_ERR(0, 664, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores_spec, NULL); if (unlikely(!__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores)) __PYX_ERR(0, 1573, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores_spec, __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores) < 0) __PYX_ERR(0, 1573, __pyx_L1_error)
  #else
  __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores = &__pyx_type_9networkit_14sparsification___pyx_scope_struct__scores;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores) < 0) __PYX_ERR(0, 1573, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores->tp_dictoffset && __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_9networkit_14sparsification___pyx_scope_struct__scores->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule("networkit.base"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_9networkit_4base__CythonParentClass = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.base", "_CythonParentClass", sizeof(struct __pyx_obj_9networkit_4base__CythonParentClass), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_4base__CythonParentClass),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_4base__CythonParentClass) __PYX_ERR(2, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("networkit.structures"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_9networkit_10structures_Cover = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.structures", "Cover", sizeof(struct __pyx_obj_9networkit_10structures_Cover), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_10structures_Cover),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_10structures_Cover) __PYX_ERR(3, 50, __pyx_L1_error)
  __pyx_vtabptr_9networkit_10structures_Cover = (struct __pyx_vtabstruct_9networkit_10structures_Cover*)__Pyx_GetVtable(__pyx_ptype_9networkit_10structures_Cover); if (unlikely(!__pyx_vtabptr_9networkit_10structures_Cover)) __PYX_ERR(3, 50, __pyx_L1_error)
  __pyx_ptype_9networkit_10structures_Partition = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.structures", "Partition", sizeof(struct __pyx_obj_9networkit_10structures_Partition), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_10structures_Partition),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_10structures_Partition) __PYX_ERR(3, 86, __pyx_L1_error)
  __pyx_vtabptr_9networkit_10structures_Partition = (struct __pyx_vtabstruct_9networkit_10structures_Partition*)__Pyx_GetVtable(__pyx_ptype_9networkit_10structures_Partition); if (unlikely(!__pyx_vtabptr_9networkit_10structures_Partition)) __PYX_ERR(3, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("networkit.graph"); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_9networkit_5graph_Graph = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "Graph", sizeof(struct __pyx_obj_9networkit_5graph_Graph), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_Graph),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_Graph) __PYX_ERR(4, 283, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_Graph = (struct __pyx_vtabstruct_9networkit_5graph_Graph*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_Graph); if (unlikely(!__pyx_vtabptr_9networkit_5graph_Graph)) __PYX_ERR(4, 283, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_NodeIntAttribute = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "NodeIntAttribute", sizeof(struct __pyx_obj_9networkit_5graph_NodeIntAttribute), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_NodeIntAttribute),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_NodeIntAttribute) __PYX_ERR(4, 287, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_NodeIntAttribute = (struct __pyx_vtabstruct_9networkit_5graph_NodeIntAttribute*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_NodeIntAttribute); if (unlikely(!__pyx_vtabptr_9networkit_5graph_NodeIntAttribute)) __PYX_ERR(4, 287, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_NodeDoubleAttribute = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "NodeDoubleAttribute", sizeof(struct __pyx_obj_9networkit_5graph_NodeDoubleAttribute), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_NodeDoubleAttribute),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_NodeDoubleAttribute) __PYX_ERR(4, 294, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_NodeDoubleAttribute = (struct __pyx_vtabstruct_9networkit_5graph_NodeDoubleAttribute*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_NodeDoubleAttribute); if (unlikely(!__pyx_vtabptr_9networkit_5graph_NodeDoubleAttribute)) __PYX_ERR(4, 294, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_NodeStringAttribute = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "NodeStringAttribute", sizeof(struct __pyx_obj_9networkit_5graph_NodeStringAttribute), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_NodeStringAttribute),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_NodeStringAttribute) __PYX_ERR(4, 301, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_NodeStringAttribute = (struct __pyx_vtabstruct_9networkit_5graph_NodeStringAttribute*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_NodeStringAttribute); if (unlikely(!__pyx_vtabptr_9networkit_5graph_NodeStringAttribute)) __PYX_ERR(4, 301, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_EdgeIntAttribute = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "EdgeIntAttribute", sizeof(struct __pyx_obj_9networkit_5graph_EdgeIntAttribute), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_EdgeIntAttribute),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_EdgeIntAttribute) __PYX_ERR(4, 308, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_EdgeIntAttribute = (struct __pyx_vtabstruct_9networkit_5graph_EdgeIntAttribute*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_EdgeIntAttribute); if (unlikely(!__pyx_vtabptr_9networkit_5graph_EdgeIntAttribute)) __PYX_ERR(4, 308, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_EdgeDoubleAttribute = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "EdgeDoubleAttribute", sizeof(struct __pyx_obj_9networkit_5graph_EdgeDoubleAttribute), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_EdgeDoubleAttribute),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_EdgeDoubleAttribute) __PYX_ERR(4, 315, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_EdgeDoubleAttribute = (struct __pyx_vtabstruct_9networkit_5graph_EdgeDoubleAttribute*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_EdgeDoubleAttribute); if (unlikely(!__pyx_vtabptr_9networkit_5graph_EdgeDoubleAttribute)) __PYX_ERR(4, 315, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_EdgeStringAttribute = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "EdgeStringAttribute", sizeof(struct __pyx_obj_9networkit_5graph_EdgeStringAttribute), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_EdgeStringAttribute),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_EdgeStringAttribute) __PYX_ERR(4, 322, __pyx_L1_error)
  __pyx_vtabptr_9networkit_5graph_EdgeStringAttribute = (struct __pyx_vtabstruct_9networkit_5graph_EdgeStringAttribute*)__Pyx_GetVtable(__pyx_ptype_9networkit_5graph_EdgeStringAttribute); if (unlikely(!__pyx_vtabptr_9networkit_5graph_EdgeStringAttribute)) __PYX_ERR(4, 322, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "RandomMaximumSpanningForest", sizeof(struct __pyx_obj_9networkit_5graph_RandomMaximumSpanningForest), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_RandomMaximumSpanningForest),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_RandomMaximumSpanningForest) __PYX_ERR(4, 347, __pyx_L1_error)
  __pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest = __Pyx_ImportType_3_0_8(__pyx_t_1, "networkit.graph", "UnionMaximumSpanningForest", sizeof(struct __pyx_obj_9networkit_5graph_UnionMaximumSpanningForest), __PYX_GET_STRUCT_ALIGNMENT_3_0_8(struct __pyx_obj_9networkit_5graph_UnionMaximumSpanningForest),__Pyx_ImportType_CheckSize_Warn_3_0_8); if (!__pyx_ptype_9networkit_5graph_UnionMaximumSpanningForest) __PYX_ERR(4, 362, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_sparsification(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_sparsification},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "sparsification",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initsparsification(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initsparsification(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_sparsification(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_sparsification(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_sparsification(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'sparsification' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("sparsification", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "sparsification" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = __Pyx_PyImport_AddModuleRef((const char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_sparsification(void)", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_networkit__sparsification) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "networkit.sparsification")) {
      if (unlikely((PyDict_SetItemString(modules, "networkit.sparsification", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "networkit/sparsification.pyx":8
 * from .base cimport _Algorithm, Algorithm
 * from .graph cimport _Graph, Graph
 * from .distance import AdamicAdarDistance, JaccardSimilarityAttributizer             # <<<<<<<<<<<<<<
 * from .structures cimport count, node, index, edgeid, edgeweight
 * from . import community
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_AdamicAdarDistance);
  __Pyx_GIVEREF(__pyx_n_s_AdamicAdarDistance);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_AdamicAdarDistance)) __PYX_ERR(0, 8, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JaccardSimilarityAttributizer);
  __Pyx_GIVEREF(__pyx_n_s_JaccardSimilarityAttributizer);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_JaccardSimilarityAttributizer)) __PYX_ERR(0, 8, __pyx_L1_error);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_distance, __pyx_t_2, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_AdamicAdarDistance); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AdamicAdarDistance, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_JaccardSimilarityAttributizer); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JaccardSimilarityAttributizer, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":10
 * from .distance import AdamicAdarDistance, JaccardSimilarityAttributizer
 * from .structures cimport count, node, index, edgeid, edgeweight
 * from . import community             # <<<<<<<<<<<<<<
 * from . import distance
 * 
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_community);
  __Pyx_GIVEREF(__pyx_n_s_community);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_community)) __PYX_ERR(0, 10, __pyx_L1_error);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s__10, __pyx_t_3, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_community); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_community, __pyx_t_3) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":11
 * from .structures cimport count, node, index, edgeid, edgeweight
 * from . import community
 * from . import distance             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_distance);
  __Pyx_GIVEREF(__pyx_n_s_distance);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_distance)) __PYX_ERR(0, 11, __pyx_L1_error);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s__10, __pyx_t_2, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_distance); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_distance, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":42
 * 		self._G = None # just to be sure the graph is deleted
 * 
 * 	def score(self, u, v = None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		score(u, v=None)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_9EdgeScore_5score, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScore_score, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__12)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__13);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore, __pyx_n_s_score, __pyx_t_3) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_9networkit_14sparsification_EdgeScore);

  /* "networkit/sparsification.pyx":71
 * 				return (<_EdgeScore[count]*>(self._this)).score(u, v)
 * 
 * 	def scores(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores()
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_9EdgeScore_7scores, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScore_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__15)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScore, __pyx_n_s_scores, __pyx_t_3) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_9networkit_14sparsification_EdgeScore);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_9EdgeScore_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScore___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__16)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._this cannot be converted to a Python object for pickling"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_9EdgeScore_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScore___setstate_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__18)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChibaNishizekiTriangleEdgeScore_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__19)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_31ChibaNishizekiTriangleEdgeScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChibaNishizekiTriangleEdgeScore_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__20)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__21)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_33ChibaNishizekiQuadrangleEdgeScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChibaNishizekiQuadrangleEdgeScor_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__22)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_17TriangleEdgeScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TriangleEdgeScore___reduce_cytho, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__23)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_17TriangleEdgeScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TriangleEdgeScore___setstate_cyt, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__24)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_19EdgeScoreLinearizer_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreLinearizer___reduce_cyt, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__25)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_19EdgeScoreLinearizer_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreLinearizer___setstate_c, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__26)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_19EdgeScoreNormalizer_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreNormalizer___reduce_cyt, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__27)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_19EdgeScoreNormalizer_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreNormalizer___setstate_c, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__28)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16EdgeScoreBlender_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreBlender___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__29)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16EdgeScoreBlender_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreBlender___setstate_cyth, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__30)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18GeometricMeanScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_GeometricMeanScore___reduce_cyth, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__31)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18GeometricMeanScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_GeometricMeanScore___setstate_cy, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__32)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":338
 * 			self._this = NULL
 * 
 * 	def getWeightedGraph(self):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getWeightedGraph()
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_17EdgeScoreAsWeight_5getWeightedGraph, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreAsWeight_getWeightedGra, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__33)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight, __pyx_n_s_getWeightedGraph, __pyx_t_3) < 0) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_9networkit_14sparsification_EdgeScoreAsWeight);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_17EdgeScoreAsWeight_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreAsWeight___reduce_cytho, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__34)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_17EdgeScoreAsWeight_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_EdgeScoreAsWeight___setstate_cyt, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__35)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21SimmelianOverlapScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SimmelianOverlapScore___reduce_c, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__36)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21SimmelianOverlapScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SimmelianOverlapScore___setstate, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__37)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18PrefixJaccardScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PrefixJaccardScore___reduce_cyth, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18PrefixJaccardScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PrefixJaccardScore___setstate_cy, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__39)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15MultiscaleScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_MultiscaleScore___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__40)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15MultiscaleScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_MultiscaleScore___setstate_cytho, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__41)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15RandomEdgeScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_RandomEdgeScore___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__42)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15RandomEdgeScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_RandomEdgeScore___setstate_cytho, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__43)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20LocalSimilarityScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LocalSimilarityScore___reduce_cy, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__44)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20LocalSimilarityScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LocalSimilarityScore___setstate, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15ForestFireScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ForestFireScore___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__46)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15ForestFireScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ForestFireScore___setstate_cytho, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__47)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16LocalDegreeScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LocalDegreeScore___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__48)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16LocalDegreeScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LocalDegreeScore___setstate_cyth, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__49)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_19RandomNodeEdgeScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_RandomNodeEdgeScore___reduce_cyt, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__50)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_19RandomNodeEdgeScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_RandomNodeEdgeScore___setstate_c, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__51)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16LocalFilterScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LocalFilterScore___reduce_cython, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__52)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_16LocalFilterScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LocalFilterScore___setstate_cyth, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__53)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_28ChanceCorrectedTriangleScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChanceCorrectedTriangleScore___r, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__54)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_28ChanceCorrectedTriangleScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChanceCorrectedTriangleScore___s, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SCANStructuralSimilarityScore_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SCANStructuralSimilarityScore_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__56)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SCANStructuralSimilarityScore_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SCANStructuralSimilarityScore_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":695
 * 		del self._this
 * 
 * 	def calculate(self):             # <<<<<<<<<<<<<<
 * 		return Graph().setThis(self._this.calculate())
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21GlobalThresholdFilter_5calculate, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_GlobalThresholdFilter_calculate, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__58)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_SetItemOnTypeDict((PyObject *)__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter, __pyx_n_s_calculate, __pyx_t_3) < 0) __PYX_ERR(0, 695, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_9networkit_14sparsification_GlobalThresholdFilter);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21GlobalThresholdFilter_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_GlobalThresholdFilter___reduce_c, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__59)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21GlobalThresholdFilter_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_GlobalThresholdFilter___setstate, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__60)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":698
 * 		return Graph().setThis(self._this.calculate())
 * 
 * _ABS_ZERO = 1e-7             # <<<<<<<<<<<<<<
 * 
 * class Sparsifier(object):
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ABS_ZERO, __pyx_float_1eneg_7) < 0) __PYX_ERR(0, 698, __pyx_L1_error)

  /* "networkit/sparsification.pyx":700
 * _ABS_ZERO = 1e-7
 * 
 * class Sparsifier(object):             # <<<<<<<<<<<<<<
 * 	""" Abstract base class representing a graph sparsification algorithm that
 * 	uses only one parameter to determine the degree of filtering. """
 */
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_tuple__62); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_3, __pyx_n_s_Sparsifier, __pyx_n_s_Sparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_Abstract_base_class_representin); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_tuple__62) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_tuple__62) < 0))) __PYX_ERR(0, 700, __pyx_L1_error)
  }

  /* "networkit/sparsification.pyx":704
 * 	uses only one parameter to determine the degree of filtering. """
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_10Sparsifier_1scores, 0, __pyx_n_s_Sparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_scores, __pyx_t_5) < 0) __PYX_ERR(0, 704, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":722
 * 		raise NotImplementedError
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		""" The actual implementation of the sparsification.
 * 		(To be implemented in the derived class.)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_10Sparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_Sparsifier__getSparsifiedGraph, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph, __pyx_t_5) < 0) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":733
 * 		raise NotImplementedError
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		""" Returns an appropriate parameterization algorithm for this sparsifier.
 * 		(To be implemented in the derived class.)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_10Sparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_Sparsifier__getParameterizationA, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_5) < 0) __PYX_ERR(0, 733, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":739
 * 		return SimpleParameterization()
 * 
 * 	def getSparsifiedGraph(self, G, parameter, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraph(sG, parameter, attribute=None)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_10Sparsifier_7getSparsifiedGraph, 0, __pyx_n_s_Sparsifier_getSparsifiedGraph, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__68)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_tuple__13);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph_2, __pyx_t_5) < 0) __PYX_ERR(0, 739, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":760
 * 		return self._getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getSparsifiedGraphOfSize(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getSparsifiedGraphOfSize(G, edgeRatio, attribute=None)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_10Sparsifier_9getSparsifiedGraphOfSize, 0, __pyx_n_s_Sparsifier_getSparsifiedGraphOfS, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__70)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 760, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_tuple__13);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraphOfSize, __pyx_t_5) < 0) __PYX_ERR(0, 760, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":789
 * 		return self.getSparsifiedGraph(G, parameter, attribute)
 * 
 * 	def getParameter(self, G, edgeRatio, attribute=None):             # <<<<<<<<<<<<<<
 * 		"""
 * 		getParameter(G, edgeRatio, attribute=None)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_10Sparsifier_11getParameter, 0, __pyx_n_s_Sparsifier_getParameter, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__72)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_tuple__13);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameter, __pyx_t_5) < 0) __PYX_ERR(0, 789, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":700
 * _ABS_ZERO = 1e-7
 * 
 * class Sparsifier(object):             # <<<<<<<<<<<<<<
 * 	""" Abstract base class representing a graph sparsification algorithm that
 * 	uses only one parameter to determine the degree of filtering. """
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_Sparsifier, __pyx_t_3, __pyx_t_4, NULL, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Sparsifier, __pyx_t_5) < 0) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":813
 * 		return parameter
 * 
 * class SimpleParameterization:             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimpleParameterization()
 */
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_SimpleParameterization, __pyx_n_s_SimpleParameterization, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_SimpleParameterization_A_parame); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "networkit/sparsification.pyx":823
 * 	"""
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_22SimpleParameterization_1parameterize, 0, __pyx_n_s_SimpleParameterization_parameter, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__74)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_parameterize, __pyx_t_2) < 0) __PYX_ERR(0, 823, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":813
 * 		return parameter
 * 
 * class SimpleParameterization:             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimpleParameterization()
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_SimpleParameterization, __pyx_empty_tuple, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SimpleParameterization, __pyx_t_2) < 0) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":843
 * 		return edgeRatio
 * 
 * class BinarySearchParameterization:             # <<<<<<<<<<<<<<
 * 	"""
 * 	BinarySearchParameterization(sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps)
 */
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_BinarySearchParameterization, __pyx_n_s_BinarySearchParameterization, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_BinarySearchParameterization_si); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "networkit/sparsification.pyx":861
 * 	"""
 * 
 * 	def __init__(self, sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps):             # <<<<<<<<<<<<<<
 * 
 * 		self.sizeIncreasesWithParameter = sizeIncreasesWithParameter
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_28BinarySearchParameterization_1__init__, 0, __pyx_n_s_BinarySearchParameterization___i, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__76)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_init, __pyx_t_2) < 0) __PYX_ERR(0, 861, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":868
 * 		self.maxSteps = maxSteps
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_28BinarySearchParameterization_3parameterize, 0, __pyx_n_s_BinarySearchParameterization_par, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__78)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_parameterize, __pyx_t_2) < 0) __PYX_ERR(0, 868, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":843
 * 		return edgeRatio
 * 
 * class BinarySearchParameterization:             # <<<<<<<<<<<<<<
 * 	"""
 * 	BinarySearchParameterization(sizeIncreasesWithParameter, lowerParameterBound, upperParameterBound, maxSteps)
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_BinarySearchParameterization, __pyx_empty_tuple, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BinarySearchParameterization, __pyx_t_2) < 0) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":918
 * 		return bestParameter
 * 
 * class CompleteSearchParameterization:             # <<<<<<<<<<<<<<
 * 	"""
 * 	CompleteSearchParameterization(lowerParameterBound, upperParameterBound)
 */
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_CompleteSearchParameterization, __pyx_n_s_CompleteSearchParameterization, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_CompleteSearchParameterization_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 918, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "networkit/sparsification.pyx":934
 * 	"""
 * 
 * 	def __init__(self, lowerParameterBound, upperParameterBound):             # <<<<<<<<<<<<<<
 * 		self.lowerParameterBound = lowerParameterBound
 * 		self.upperParameterBound = upperParameterBound
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_30CompleteSearchParameterization_1__init__, 0, __pyx_n_s_CompleteSearchParameterization_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__80)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_init, __pyx_t_2) < 0) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":938
 * 		self.upperParameterBound = upperParameterBound
 * 
 * 	def parameterize(self, algorithm, G, attribute, edgeRatio):             # <<<<<<<<<<<<<<
 * 		"""
 * 		parameterize(algorithm, G, attribute, edgeRatio)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_30CompleteSearchParameterization_3parameterize, 0, __pyx_n_s_CompleteSearchParameterization_p, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__82)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_parameterize, __pyx_t_2) < 0) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":918
 * 		return bestParameter
 * 
 * class CompleteSearchParameterization:             # <<<<<<<<<<<<<<
 * 	"""
 * 	CompleteSearchParameterization(lowerParameterBound, upperParameterBound)
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_CompleteSearchParameterization, __pyx_empty_tuple, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 918, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CompleteSearchParameterization, __pyx_t_2) < 0) __PYX_ERR(0, 918, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":972
 * 		return bestParameter
 * 
 * def getRankAttribute(attribute, reverse = False):             # <<<<<<<<<<<<<<
 * 	"""
 * 	getRankAttribute(attribute, reverse=False)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_1getRankAttribute, 0, __pyx_n_s_getRankAttribute, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__84)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__85);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getRankAttribute, __pyx_t_3) < 0) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1003
 * 	return result
 * 
 * class SimmelianSparsifierParametric(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianSparsifierParametric()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 1003, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_3, __pyx_n_s_SimmelianSparsifierParametric, __pyx_n_s_SimmelianSparsifierParametric, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_SimmelianSparsifierParametric_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3 != __pyx_t_2) {
    if (unlikely((PyDict_SetItemString(__pyx_t_5, "__orig_bases__", __pyx_t_2) < 0))) __PYX_ERR(0, 1003, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1011
 * 	"""
 * 
 * 	def __init__(self, maxRank):             # <<<<<<<<<<<<<<
 * 		self.maxRank = maxRank
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_1__init__, 0, __pyx_n_s_SimmelianSparsifierParametric_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__87)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1011, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_init, __pyx_t_2) < 0) __PYX_ERR(0, 1011, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1014
 * 		self.maxRank = maxRank
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_3scores, 0, __pyx_n_s_SimmelianSparsifierParametric_sc, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__89)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1014, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_scores, __pyx_t_2) < 0) __PYX_ERR(0, 1014, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1032
 * 		return simmelianOverlap.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_5_getSparsifiedGraph, 0, __pyx_n_s_SimmelianSparsifierParametric__g, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__91)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1032, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getSparsifiedGraph, __pyx_t_2) < 0) __PYX_ERR(0, 1032, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1036
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return CompleteSearchParameterization(0, self.maxRank)
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianSparsifierParametric_7_getParameterizationAlgorithm, 0, __pyx_n_s_SimmelianSparsifierParametric__g_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__92)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_2) < 0) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1003
 * 	return result
 * 
 * class SimmelianSparsifierParametric(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianSparsifierParametric()
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_SimmelianSparsifierParametric, __pyx_t_3, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SimmelianSparsifierParametric, __pyx_t_2) < 0) __PYX_ERR(0, 1003, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1039
 * 		return CompleteSearchParameterization(0, self.maxRank)
 * 
 * class SimmelianSparsifierNonParametric(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianSparsifierNonParametric()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(0, 1039, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_5, __pyx_t_3, __pyx_n_s_SimmelianSparsifierNonParametric, __pyx_n_s_SimmelianSparsifierNonParametric, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_SimmelianSparsifierNonParametri); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__pyx_t_3 != __pyx_t_4) {
    if (unlikely((PyDict_SetItemString(__pyx_t_2, "__orig_bases__", __pyx_t_4) < 0))) __PYX_ERR(0, 1039, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1047
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_32SimmelianSparsifierNonParametric_1scores, 0, __pyx_n_s_SimmelianSparsifierNonParametric_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__94)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1047, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1064
 * 		return a_sj
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_32SimmelianSparsifierNonParametric_3_getSparsifiedGraph, 0, __pyx_n_s_SimmelianSparsifierNonParametric_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getSparsifiedGraph, __pyx_t_4) < 0) __PYX_ERR(0, 1064, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1068
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_32SimmelianSparsifierNonParametric_5_getParameterizationAlgorithm, 0, __pyx_n_s_SimmelianSparsifierNonParametric_4, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__96)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1068, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_4) < 0) __PYX_ERR(0, 1068, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1039
 * 		return CompleteSearchParameterization(0, self.maxRank)
 * 
 * class SimmelianSparsifierNonParametric(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianSparsifierNonParametric()
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_SimmelianSparsifierNonParametric, __pyx_t_3, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SimmelianSparsifierNonParametric, __pyx_t_4) < 0) __PYX_ERR(0, 1039, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1071
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class QuadrilateralSimmelianSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	QuadrilateralSimmelianSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_3, __pyx_n_s_QuadrilateralSimmelianSparsifier, __pyx_n_s_QuadrilateralSimmelianSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_QuadrilateralSimmelianSparsifie); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_t_5) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_t_5) < 0))) __PYX_ERR(0, 1071, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1078
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_1scores, 0, __pyx_n_s_QuadrilateralSimmelianSparsifier_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__98)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1078, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_scores, __pyx_t_5) < 0) __PYX_ERR(0, 1078, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1094
 * 		return quadranglePrefixJaccard
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_QuadrilateralSimmelianSparsifier_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1094, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph, __pyx_t_5) < 0) __PYX_ERR(0, 1094, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1098
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_32QuadrilateralSimmelianSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_QuadrilateralSimmelianSparsifier_4, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__100)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_5) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1071
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class QuadrilateralSimmelianSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	QuadrilateralSimmelianSparsifier()
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_QuadrilateralSimmelianSparsifier, __pyx_t_3, __pyx_t_4, NULL, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_QuadrilateralSimmelianSparsifier, __pyx_t_5) < 0) __PYX_ERR(0, 1071, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1101
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class SimmelianMultiscaleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianMultiscaleSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 1101, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_3, __pyx_n_s_SimmelianMultiscaleSparsifier, __pyx_n_s_SimmelianMultiscaleSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_SimmelianMultiscaleSparsifier_M); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3 != __pyx_t_2) {
    if (unlikely((PyDict_SetItemString(__pyx_t_5, "__orig_bases__", __pyx_t_2) < 0))) __PYX_ERR(0, 1101, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1108
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_1scores, 0, __pyx_n_s_SimmelianMultiscaleSparsifier_sc, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__102)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_scores, __pyx_t_2) < 0) __PYX_ERR(0, 1108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1126
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_SimmelianMultiscaleSparsifier__g, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getSparsifiedGraph, __pyx_t_2) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1130
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_29SimmelianMultiscaleSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_SimmelianMultiscaleSparsifier__g_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__104)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_2) < 0) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1101
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class SimmelianMultiscaleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SimmelianMultiscaleSparsifier()
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_SimmelianMultiscaleSparsifier, __pyx_t_3, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SimmelianMultiscaleSparsifier, __pyx_t_2) < 0) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1133
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class DegreeMultiscaleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	DegreeMultiscaleSparsifier(degsToAttrValue)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(0, 1133, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_5, __pyx_t_3, __pyx_n_s_DegreeMultiscaleSparsifier, __pyx_n_s_DegreeMultiscaleSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_DegreeMultiscaleSparsifier_degs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__pyx_t_3 != __pyx_t_4) {
    if (unlikely((PyDict_SetItemString(__pyx_t_2, "__orig_bases__", __pyx_t_4) < 0))) __PYX_ERR(0, 1133, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1145
 * 	"""
 * 
 * 	def __init__(self, degsToAttrValue):             # <<<<<<<<<<<<<<
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_1__init__, 0, __pyx_n_s_DegreeMultiscaleSparsifier___ini, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__106)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_4) < 0) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1148
 * 		self.degsToAttrValue = degsToAttrValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_3scores, 0, __pyx_n_s_DegreeMultiscaleSparsifier_score, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__108)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1148, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1170
 * 		return a_ms
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_5_getSparsifiedGraph, 0, __pyx_n_s_DegreeMultiscaleSparsifier__getS, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getSparsifiedGraph, __pyx_t_4) < 0) __PYX_ERR(0, 1170, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1174
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_26DegreeMultiscaleSparsifier_7_getParameterizationAlgorithm, 0, __pyx_n_s_DegreeMultiscaleSparsifier__getP, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__110)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_4) < 0) __PYX_ERR(0, 1174, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1133
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class DegreeMultiscaleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	DegreeMultiscaleSparsifier(degsToAttrValue)
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_DegreeMultiscaleSparsifier, __pyx_t_3, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DegreeMultiscaleSparsifier, __pyx_t_4) < 0) __PYX_ERR(0, 1133, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1177
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class JaccardSimilaritySparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	JaccardSimilaritySparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3)) __PYX_ERR(0, 1177, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_3, __pyx_n_s_JaccardSimilaritySparsifier, __pyx_n_s_JaccardSimilaritySparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_JaccardSimilaritySparsifier_An); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_t_5) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_t_5) < 0))) __PYX_ERR(0, 1177, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1184
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27JaccardSimilaritySparsifier_1scores, 0, __pyx_n_s_JaccardSimilaritySparsifier_scor, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__112)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_scores, __pyx_t_5) < 0) __PYX_ERR(0, 1184, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1198
 * 		return JaccardSimilarityAttributizer(G, triangles).getAttribute()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27JaccardSimilaritySparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_JaccardSimilaritySparsifier__get, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__113)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph, __pyx_t_5) < 0) __PYX_ERR(0, 1198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1202
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27JaccardSimilaritySparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_JaccardSimilaritySparsifier__get_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__114)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_5) < 0) __PYX_ERR(0, 1202, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1177
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class JaccardSimilaritySparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	JaccardSimilaritySparsifier()
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_JaccardSimilaritySparsifier, __pyx_t_3, __pyx_t_4, NULL, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JaccardSimilaritySparsifier, __pyx_t_5) < 0) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1206
 * 
 * 
 * class LocalSimilaritySparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalSimilaritySparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 1206, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_3, __pyx_n_s_LocalSimilaritySparsifier, __pyx_n_s_LocalSimilaritySparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_LocalSimilaritySparsifier_An_im); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3 != __pyx_t_2) {
    if (unlikely((PyDict_SetItemString(__pyx_t_5, "__orig_bases__", __pyx_t_2) < 0))) __PYX_ERR(0, 1206, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1213
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_25LocalSimilaritySparsifier_1scores, 0, __pyx_n_s_LocalSimilaritySparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__116)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_scores, __pyx_t_2) < 0) __PYX_ERR(0, 1213, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1230
 * 		return localSimScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_25LocalSimilaritySparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_LocalSimilaritySparsifier__getSp, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__117)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getSparsifiedGraph, __pyx_t_2) < 0) __PYX_ERR(0, 1230, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1234
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_25LocalSimilaritySparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_LocalSimilaritySparsifier__getPa, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__118)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_2) < 0) __PYX_ERR(0, 1234, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1206
 * 
 * 
 * class LocalSimilaritySparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalSimilaritySparsifier()
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_LocalSimilaritySparsifier, __pyx_t_3, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LocalSimilaritySparsifier, __pyx_t_2) < 0) __PYX_ERR(0, 1206, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1237
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class MultiscaleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	MultiscaleSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(0, 1237, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_5, __pyx_t_3, __pyx_n_s_MultiscaleSparsifier, __pyx_n_s_MultiscaleSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_MultiscaleSparsifier_An_impleme); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__pyx_t_3 != __pyx_t_4) {
    if (unlikely((PyDict_SetItemString(__pyx_t_2, "__orig_bases__", __pyx_t_4) < 0))) __PYX_ERR(0, 1237, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1244
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20MultiscaleSparsifier_1scores, 0, __pyx_n_s_MultiscaleSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__120)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1244, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1267
 * 		return scores
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20MultiscaleSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_MultiscaleSparsifier__getSparsif, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__121)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getSparsifiedGraph, __pyx_t_4) < 0) __PYX_ERR(0, 1267, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1271
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20MultiscaleSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_MultiscaleSparsifier__getParamet, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__122)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_4) < 0) __PYX_ERR(0, 1271, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1237
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class MultiscaleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	MultiscaleSparsifier()
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_MultiscaleSparsifier, __pyx_t_3, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MultiscaleSparsifier, __pyx_t_4) < 0) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1274
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class RandomEdgeSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomEdgeSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3)) __PYX_ERR(0, 1274, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_3, __pyx_n_s_RandomEdgeSparsifier, __pyx_n_s_RandomEdgeSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_RandomEdgeSparsifier_Random_Edg); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_t_5) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_t_5) < 0))) __PYX_ERR(0, 1274, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1281
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20RandomEdgeSparsifier_1scores, 0, __pyx_n_s_RandomEdgeSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__124)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_scores, __pyx_t_5) < 0) __PYX_ERR(0, 1281, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1298
 * 		return reScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, False)
 * 		return gf.calculate()
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20RandomEdgeSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_RandomEdgeSparsifier__getSparsif, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__125)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph, __pyx_t_5) < 0) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1302
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return SimpleParameterization()
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20RandomEdgeSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_RandomEdgeSparsifier__getParamet, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__126)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1302, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_5) < 0) __PYX_ERR(0, 1302, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1274
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class RandomEdgeSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomEdgeSparsifier()
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_RandomEdgeSparsifier, __pyx_t_3, __pyx_t_4, NULL, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RandomEdgeSparsifier, __pyx_t_5) < 0) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1305
 * 		return SimpleParameterization()
 * 
 * class RandomNodeEdgeSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomNodeEdgeSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 1305, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_3, __pyx_n_s_RandomNodeEdgeSparsifier, __pyx_n_s_RandomNodeEdgeSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_RandomNodeEdgeSparsifier_Random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3 != __pyx_t_2) {
    if (unlikely((PyDict_SetItemString(__pyx_t_5, "__orig_bases__", __pyx_t_2) < 0))) __PYX_ERR(0, 1305, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1318
 * 	"""
 * 
 * 	def __init__(self, above = True):             # <<<<<<<<<<<<<<
 * 		self.above = above
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_1__init__, 0, __pyx_n_s_RandomNodeEdgeSparsifier___init, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__128)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1318, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__129);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_init, __pyx_t_2) < 0) __PYX_ERR(0, 1318, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1321
 * 		self.above = above
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_3scores, 0, __pyx_n_s_RandomNodeEdgeSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__131)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_scores, __pyx_t_2) < 0) __PYX_ERR(0, 1321, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1338
 * 		return rneScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, self.above)
 * 		return gf.calculate()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_5_getSparsifiedGraph, 0, __pyx_n_s_RandomNodeEdgeSparsifier__getSpa, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__132)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getSparsifiedGraph, __pyx_t_2) < 0) __PYX_ERR(0, 1338, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1342
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24RandomNodeEdgeSparsifier_7_getParameterizationAlgorithm, 0, __pyx_n_s_RandomNodeEdgeSparsifier__getPar, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__133)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_2) < 0) __PYX_ERR(0, 1342, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1305
 * 		return SimpleParameterization()
 * 
 * class RandomNodeEdgeSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	RandomNodeEdgeSparsifier()
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_RandomNodeEdgeSparsifier, __pyx_t_3, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RandomNodeEdgeSparsifier, __pyx_t_2) < 0) __PYX_ERR(0, 1305, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1345
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)
 * 
 * class ForestFireSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ForestFireSparsifier(burnProbability, targetBurntRatio)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_5, __pyx_t_3, __pyx_n_s_ForestFireSparsifier, __pyx_n_s_ForestFireSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_ForestFireSparsifier_burnProbab); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__pyx_t_3 != __pyx_t_4) {
    if (unlikely((PyDict_SetItemString(__pyx_t_2, "__orig_bases__", __pyx_t_4) < 0))) __PYX_ERR(0, 1345, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1359
 * 	"""
 * 
 * 	def __init__(self, burnProbability, targetBurntRatio):             # <<<<<<<<<<<<<<
 * 		self.burnProbability = burnProbability
 * 		self.targetBurntRatio = targetBurntRatio
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_1__init__, 0, __pyx_n_s_ForestFireSparsifier___init, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__135)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_init, __pyx_t_4) < 0) __PYX_ERR(0, 1359, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1363
 * 		self.targetBurntRatio = targetBurntRatio
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_3scores, 0, __pyx_n_s_ForestFireSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__137)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1363, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1380
 * 		return ffScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_5_getSparsifiedGraph, 0, __pyx_n_s_ForestFireSparsifier__getSparsif, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__138)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getSparsifiedGraph, __pyx_t_4) < 0) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1384
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_20ForestFireSparsifier_7_getParameterizationAlgorithm, 0, __pyx_n_s_ForestFireSparsifier__getParamet, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__139)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1384, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_4) < 0) __PYX_ERR(0, 1384, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1345
 * 		return BinarySearchParameterization((not self.above), 0.0, 1.0, 20)
 * 
 * class ForestFireSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	ForestFireSparsifier(burnProbability, targetBurntRatio)
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_ForestFireSparsifier, __pyx_t_3, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ForestFireSparsifier, __pyx_t_4) < 0) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1387
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class LocalDegreeSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalDegreeSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3)) __PYX_ERR(0, 1387, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_3, __pyx_n_s_LocalDegreeSparsifier, __pyx_n_s_LocalDegreeSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_LocalDegreeSparsifier_An_implem); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_t_5) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_t_5) < 0))) __PYX_ERR(0, 1387, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1394
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21LocalDegreeSparsifier_1scores, 0, __pyx_n_s_LocalDegreeSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__141)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_scores, __pyx_t_5) < 0) __PYX_ERR(0, 1394, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1412
 * 		return localDegreeScore
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21LocalDegreeSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_LocalDegreeSparsifier__getSparsi, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__142)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1412, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph, __pyx_t_5) < 0) __PYX_ERR(0, 1412, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1416
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_21LocalDegreeSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_LocalDegreeSparsifier__getParame, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__143)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_5) < 0) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1387
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class LocalDegreeSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalDegreeSparsifier()
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_LocalDegreeSparsifier, __pyx_t_3, __pyx_t_4, NULL, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LocalDegreeSparsifier, __pyx_t_5) < 0) __PYX_ERR(0, 1387, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1419
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class SCANSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SCANSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 1419, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_3, __pyx_n_s_SCANSparsifier, __pyx_n_s_SCANSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_SCANSparsifier_A_sparsifiier_de); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3 != __pyx_t_2) {
    if (unlikely((PyDict_SetItemString(__pyx_t_5, "__orig_bases__", __pyx_t_2) < 0))) __PYX_ERR(0, 1419, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1426
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_14SCANSparsifier_1scores, 0, __pyx_n_s_SCANSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__145)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1426, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_scores, __pyx_t_2) < 0) __PYX_ERR(0, 1426, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1445
 * 		return scanScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_14SCANSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_SCANSparsifier__getSparsifiedGra, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__146)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getSparsifiedGraph, __pyx_t_2) < 0) __PYX_ERR(0, 1445, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1449
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_14SCANSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_SCANSparsifier__getParameterizat, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__147)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_2) < 0) __PYX_ERR(0, 1449, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1419
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class SCANSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	SCANSparsifier()
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_SCANSparsifier, __pyx_t_3, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SCANSparsifier, __pyx_t_2) < 0) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1452
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class TriangleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	TriangleSparsifier()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3)) __PYX_ERR(0, 1452, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare(__pyx_t_5, __pyx_t_3, __pyx_n_s_TriangleSparsifier, __pyx_n_s_TriangleSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_TriangleSparsifier_Allows_for_g); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__pyx_t_3 != __pyx_t_4) {
    if (unlikely((PyDict_SetItemString(__pyx_t_2, "__orig_bases__", __pyx_t_4) < 0))) __PYX_ERR(0, 1452, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1459
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18TriangleSparsifier_1scores, 0, __pyx_n_s_TriangleSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__149)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1459, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1474
 * 		return triangleScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18TriangleSparsifier_3_getSparsifiedGraph, 0, __pyx_n_s_TriangleSparsifier__getSparsifie, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__150)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getSparsifiedGraph, __pyx_t_4) < 0) __PYX_ERR(0, 1474, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1478
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		raise NotImplementedError("parameterization method not yet implemented.")
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_18TriangleSparsifier_5_getParameterizationAlgorithm, 0, __pyx_n_s_TriangleSparsifier__getParameter, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__151)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_2, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_4) < 0) __PYX_ERR(0, 1478, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1452
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class TriangleSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	TriangleSparsifier()
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_5, __pyx_n_s_TriangleSparsifier, __pyx_t_3, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TriangleSparsifier, __pyx_t_4) < 0) __PYX_ERR(0, 1452, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1481
 * 		raise NotImplementedError("parameterization method not yet implemented.")
 * 
 * class AlgebraicDistanceSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	AlgebraicDistanceSparsifier(numberSystems=10, numberIterations=30, omega=0.5, norm=0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3)) __PYX_ERR(0, 1481, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_t_3, __pyx_n_s_AlgebraicDistanceSparsifier, __pyx_n_s_AlgebraicDistanceSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_AlgebraicDistanceSparsifier_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__pyx_t_3 != __pyx_t_5) {
    if (unlikely((PyDict_SetItemString(__pyx_t_4, "__orig_bases__", __pyx_t_5) < 0))) __PYX_ERR(0, 1481, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1499
 * 	"""
 * 
 * 	def __init__(self, numberSystems=10, numberIterations=30, omega=0.5, norm=0):             # <<<<<<<<<<<<<<
 * 		self.numberSystems = numberSystems
 * 		self.numberIterations = numberIterations
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_1__init__, 0, __pyx_n_s_AlgebraicDistanceSparsifier___in, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__153)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_5, __pyx_tuple__154);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_init, __pyx_t_5) < 0) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1505
 * 		self.norm = norm
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_3scores, 0, __pyx_n_s_AlgebraicDistanceSparsifier_scor, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__156)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_scores, __pyx_t_5) < 0) __PYX_ERR(0, 1505, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1520
 * 		return [1.0 - d for d in algDist.getEdgeScores()]
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_5_getSparsifiedGraph, 0, __pyx_n_s_AlgebraicDistanceSparsifier__get, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__157)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getSparsifiedGraph, __pyx_t_5) < 0) __PYX_ERR(0, 1520, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1524
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_5 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_27AlgebraicDistanceSparsifier_7_getParameterizationAlgorithm, 0, __pyx_n_s_AlgebraicDistanceSparsifier__get_2, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__158)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__Pyx_SetNameInClass(__pyx_t_4, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_5) < 0) __PYX_ERR(0, 1524, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "networkit/sparsification.pyx":1481
 * 		raise NotImplementedError("parameterization method not yet implemented.")
 * 
 * class AlgebraicDistanceSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	AlgebraicDistanceSparsifier(numberSystems=10, numberIterations=30, omega=0.5, norm=0)
 */
  __pyx_t_5 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_AlgebraicDistanceSparsifier, __pyx_t_3, __pyx_t_4, NULL, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AlgebraicDistanceSparsifier, __pyx_t_5) < 0) __PYX_ERR(0, 1481, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1527
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class LocalSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalSparsifier(sparsifier)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Sparsifier); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 1527, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PEP560_update_bases(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_CalculateMetaclass(NULL, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_4, __pyx_t_3, __pyx_n_s_LocalSparsifier, __pyx_n_s_LocalSparsifier, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_LocalSparsifier_sparsifier_Spar); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (__pyx_t_3 != __pyx_t_2) {
    if (unlikely((PyDict_SetItemString(__pyx_t_5, "__orig_bases__", __pyx_t_2) < 0))) __PYX_ERR(0, 1527, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1535
 * 	edges, which should be present in the sparsified graph.
 * 	"""
 * 	def __init__(self, sparsifier):             # <<<<<<<<<<<<<<
 * 		self.sparsifier = sparsifier
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15LocalSparsifier_1__init__, 0, __pyx_n_s_LocalSparsifier___init, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__160)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_init, __pyx_t_2) < 0) __PYX_ERR(0, 1535, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1538
 * 		self.sparsifier = sparsifier
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15LocalSparsifier_3scores, 0, __pyx_n_s_LocalSparsifier_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__162)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_scores, __pyx_t_2) < 0) __PYX_ERR(0, 1538, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1556
 * 		return localFilterScore.scores()
 * 
 * 	def _getSparsifiedGraph(self, G, parameter, attribute):             # <<<<<<<<<<<<<<
 * 		gf = GlobalThresholdFilter(G, attribute, parameter, True)
 * 		return gf.calculate()
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15LocalSparsifier_5_getSparsifiedGraph, 0, __pyx_n_s_LocalSparsifier__getSparsifiedGr, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__163)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getSparsifiedGraph, __pyx_t_2) < 0) __PYX_ERR(0, 1556, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1560
 * 		return gf.calculate()
 * 
 * 	def _getParameterizationAlgorithm(self):             # <<<<<<<<<<<<<<
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_15LocalSparsifier_7_getParameterizationAlgorithm, 0, __pyx_n_s_LocalSparsifier__getParameteriza, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__164)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_getParameterizationAlgorithm, __pyx_t_2) < 0) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "networkit/sparsification.pyx":1527
 * 		return BinarySearchParameterization(False, 0.0, 1.0, 20)
 * 
 * class LocalSparsifier(Sparsifier):             # <<<<<<<<<<<<<<
 * 	"""
 * 	LocalSparsifier(sparsifier)
 */
  __pyx_t_2 = __Pyx_Py3ClassCreate(__pyx_t_4, __pyx_n_s_LocalSparsifier, __pyx_t_3, __pyx_t_5, NULL, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LocalSparsifier, __pyx_t_2) < 0) __PYX_ERR(0, 1527, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1564
 * 
 * 
 * class ModularityPartitionScore():             # <<<<<<<<<<<<<<
 * 	"""
 * 	ModularityPartitionScore()
 */
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_ModularityPartitionScore, __pyx_n_s_ModularityPartitionScore, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_ModularityPartitionScore_Sparsi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "networkit/sparsification.pyx":1573
 * 	"""
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_24ModularityPartitionScore_1scores, 0, __pyx_n_s_ModularityPartitionScore_scores_3, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__166)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1564
 * 
 * 
 * class ModularityPartitionScore():             # <<<<<<<<<<<<<<
 * 	"""
 * 	ModularityPartitionScore()
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_ModularityPartitionScore, __pyx_empty_tuple, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ModularityPartitionScore, __pyx_t_4) < 0) __PYX_ERR(0, 1564, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1599
 * 		return edgeScores
 * 
 * class ConstantScore():             # <<<<<<<<<<<<<<
 * 	"""
 * 	ConstantScore(constValue=1.0)
 */
  __pyx_t_3 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_ConstantScore, __pyx_n_s_ConstantScore, (PyObject *) NULL, __pyx_n_s_networkit_sparsification, __pyx_kp_s_ConstantScore_constValue_1_0_As); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "networkit/sparsification.pyx":1611
 * 	"""
 * 
 * 	def __init__(self, constValue = 1.0):             # <<<<<<<<<<<<<<
 * 		self.constValue = constValue
 * 
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_13ConstantScore_1__init__, 0, __pyx_n_s_ConstantScore___init, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__168)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_4, __pyx_tuple__169);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_init, __pyx_t_4) < 0) __PYX_ERR(0, 1611, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1614
 * 		self.constValue = constValue
 * 
 * 	def scores(self, G):             # <<<<<<<<<<<<<<
 * 		"""
 * 		scores(G)
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_9networkit_14sparsification_13ConstantScore_3scores, 0, __pyx_n_s_ConstantScore_scores, NULL, __pyx_n_s_networkit_sparsification, __pyx_d, ((PyObject *)__pyx_codeobj__170)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (__Pyx_SetNameInClass(__pyx_t_3, __pyx_n_s_scores, __pyx_t_4) < 0) __PYX_ERR(0, 1614, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "networkit/sparsification.pyx":1599
 * 		return edgeScores
 * 
 * class ConstantScore():             # <<<<<<<<<<<<<<
 * 	"""
 * 	ConstantScore(constValue=1.0)
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_ConstantScore, __pyx_empty_tuple, __pyx_t_3, NULL, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ConstantScore, __pyx_t_4) < 0) __PYX_ERR(0, 1599, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "networkit/sparsification.pyx":1
 * # distutils: language=c++             # <<<<<<<<<<<<<<
 * 
 * from libcpp cimport bool as bool_t
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init networkit.sparsification", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init networkit.sparsification");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs = PyTuple_GET_SIZE(kwnames);
    PyObject *dict;
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kw,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kw, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kw))) {
        Py_ssize_t kwsize;
#if CYTHON_ASSUME_SAFE_MACROS
        kwsize = PyTuple_GET_SIZE(kw);
#else
        kwsize = PyTuple_Size(kw);
        if (kwsize < 0) return 0;
#endif
        if (unlikely(kwsize == 0))
            return 1;
        if (!kw_allowed) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, 0);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            goto invalid_keyword;
        }
#if PY_VERSION_HEX < 0x03090000
        for (pos = 0; pos < kwsize; pos++) {
#if CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kw, pos);
#else
            key = PyTuple_GetItem(kw, pos);
            if (!key) return 0;
#endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
        }
#endif
        return 1;
    }
    while (PyDict_Next(kw, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if (!kw_allowed && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        Py_XDECREF(key); key = NULL;
        Py_XDECREF(value); value = NULL;
        if (kwds_is_tuple) {
            Py_ssize_t size;
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(kwds);
#else
            size = PyTuple_Size(kwds);
            if (size < 0) goto bad;
#endif
            if (pos >= size) break;
#if CYTHON_AVOID_BORROWED_REFS
            key = __Pyx_PySequence_ITEM(kwds, pos);
            if (!key) goto bad;
#elif CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kwds, pos);
#else
            key = PyTuple_GetItem(kwds, pos);
            if (!key) goto bad;
#endif
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
#endif
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(value);
            Py_DECREF(key);
#endif
            key = NULL;
            value = NULL;
            continue;
        }
#if !CYTHON_AVOID_BORROWED_REFS
        Py_INCREF(key);
#endif
        Py_INCREF(value);
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    Py_XDECREF(key);
    Py_XDECREF(value);
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    Py_XDECREF(key);
    Py_XDECREF(value);
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    __Pyx_TypeName type_name;
    __Pyx_TypeName obj_type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    type_name = __Pyx_PyType_GetName(type);
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected " __Pyx_FMT_TYPENAME
        ", got " __Pyx_FMT_TYPENAME ")", name, type_name, obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    #endif
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) < 0) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL
        #if PY_VERSION_HEX < 0x03090000
        vectorcallfunc f = _PyVectorcall_Function(func);
        #else
        vectorcallfunc f = PyVectorcall_Function(func);
        #endif
        if (f) {
            return f(func, args, (size_t)nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, (size_t)nargs, NULL);
        }
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg[2] = {NULL, NULL};
    return __Pyx_PyObject_FastCall(func, arg + 1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* PyFloatBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double b = floatval;
    double a, result;
    CYTHON_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    if (likely(PyFloat_CheckExact(op1))) {
#if CYTHON_COMPILING_IN_LIMITED_API
        a = __pyx_PyFloat_AsDouble(op1);
#else
        a = PyFloat_AS_DOUBLE(op1);
#endif
        
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
        
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsZero(op1)) {
            a = 0.0;
            
        } else if (__Pyx_PyLong_IsCompact(op1)) {
            a = (double) __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                case 2:
                    if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                        a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                            if (size == -2)
                                a = -a;
                            break;
                        }
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                case 3:
                    if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                        a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                            if (size == -3)
                                a = -a;
                            break;
                        }
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                case 4:
                    if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                        a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                            if (size == -4)
                                a = -a;
                            break;
                        }
                    }
                    CYTHON_FALLTHROUGH;
                default:
        #endif
                    a = PyLong_AsDouble(op1);
                    if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
        #if CYTHON_USE_PYLONG_INTERNALS
            }
        }
        #endif
    } else {
        return (inplace ? PyNumber_InPlaceTrueDivide : PyNumber_TrueDivide)(op1, op2);
    }
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* py_abs */
#if CYTHON_USE_PYLONG_INTERNALS
static PyObject *__Pyx_PyLong_AbsNeg(PyObject *n) {
#if PY_VERSION_HEX >= 0x030C00A7
    if (likely(__Pyx_PyLong_IsCompact(n))) {
        return PyLong_FromSize_t(__Pyx_PyLong_CompactValueUnsigned(n));
    }
#else
    if (likely(Py_SIZE(n) == -1)) {
        return PyLong_FromUnsignedLong(__Pyx_PyLong_Digits(n)[0]);
    }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000
    {
        PyObject *copy = _PyLong_Copy((PyLongObject*)n);
        if (likely(copy)) {
            #if PY_VERSION_HEX >= 0x030C00A7
            ((PyLongObject*)copy)->long_value.lv_tag = ((PyLongObject*)copy)->long_value.lv_tag & ~_PyLong_SIGN_MASK;
            #else
            __Pyx_SET_SIZE(copy, -Py_SIZE(copy));
            #endif
        }
        return copy;
    }
#else
    return PyNumber_Negative(n);
#endif
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + (unsigned long)b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef((char*) __PYX_ABI_MODULE_NAME);
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#elif PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyObject *py_name = NULL;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
    if (!py_name) return NULL;
    PyErr_Format(PyExc_TypeError, "%.200S() takes no keyword arguments",
                 py_name);
    Py_DECREF(py_name);
#else
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
#endif
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_MACROS
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(!argc) < 0) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
    PyObject* exc_type;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    exc_type = __Pyx_PyErr_CurrentExceptionType();
    if (unlikely(exc_type)) {
        if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
            return -1;
        __Pyx_PyErr_Clear();
        return 0;
    }
    return 0;
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    }
    return __Pyx_IterFinish();
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyFloatBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractCObj(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double a = floatval;
    double b, result;
    CYTHON_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    if (likely(PyFloat_CheckExact(op2))) {
#if CYTHON_COMPILING_IN_LIMITED_API
        b = __pyx_PyFloat_AsDouble(op2);
#else
        b = PyFloat_AS_DOUBLE(op2);
#endif
        
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
        
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        if (__Pyx_PyLong_IsZero(op2)) {
            b = 0.0;
            
        } else if (__Pyx_PyLong_IsCompact(op2)) {
            b = (double) __Pyx_PyLong_CompactValue(op2);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op2);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op2);
            switch (size) {
                case -2:
                case 2:
                    if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                        b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                            if (size == -2)
                                b = -b;
                            break;
                        }
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                case 3:
                    if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                        b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                            if (size == -3)
                                b = -b;
                            break;
                        }
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                case 4:
                    if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                        b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                            if (size == -4)
                                b = -b;
                            break;
                        }
                    }
                    CYTHON_FALLTHROUGH;
                default:
        #endif
                    b = PyLong_AsDouble(op2);
                    if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
        #if CYTHON_USE_PYLONG_INTERNALS
            }
        }
        #endif
    } else {
        return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
    }
        PyFPE_START_PROTECT("subtract", return NULL)
        result = a - b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* RaiseClosureNameError */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {
    PyObject *runerr = NULL;
    Py_ssize_t key_value;
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError,
            "cannot fit '" __Pyx_FMT_TYPENAME "' into an index-sized integer", index_type_name);
        __Pyx_DECREF_TypeName(index_type_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem_Slow(PyObject *obj, PyObject *key) {
    __Pyx_TypeName obj_type_name;
    if (likely(PyType_Check(obj))) {
        PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(obj, __pyx_n_s_class_getitem);
        if (!meth) {
            PyErr_Clear();
        } else {
            PyObject *result = __Pyx_PyObject_CallOneArg(meth, key);
            Py_DECREF(meth);
            return result;
        }
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is not subscriptable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key) {
    PyTypeObject *tp = Py_TYPE(obj);
    PyMappingMethods *mm = tp->tp_as_mapping;
    PySequenceMethods *sm = tp->tp_as_sequence;
    if (likely(mm && mm->mp_subscript)) {
        return mm->mp_subscript(obj, key);
    }
    if (likely(sm && sm->sq_item)) {
        return __Pyx_PyObject_GetIndex(obj, key);
    }
    return __Pyx_PyObject_GetItem_Slow(obj, key);
}
#endif

/* UnpackUnboundCMethod */
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
    PyObject *result;
    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
    if (unlikely(!selfless_args)) return NULL;
    result = PyObject_Call(method, selfless_args, kwargs);
    Py_DECREF(selfless_args);
    return result;
}
static PyMethodDef __Pyx_UnboundCMethod_Def = {
     "CythonUnboundCMethod",
     __PYX_REINTERPRET_FUNCION(PyCFunction, __Pyx_SelflessCall),
     METH_VARARGS | METH_KEYWORDS,
     NULL
};
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #else
    if (likely(!__Pyx_CyOrPyCFunction_Check(method)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    } else
#endif
#if CYTHON_COMPILING_IN_PYPY
#else
    if (PyCFunction_Check(method))
#endif
    {
        PyObject *self;
        int self_found;
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        self = PyObject_GetAttrString(method, "__self__");
        if (!self) {
            PyErr_Clear();
        }
#else
        self = PyCFunction_GET_SELF(method);
#endif
        self_found = (self && self != Py_None);
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        Py_XDECREF(self);
#endif
        if (self_found) {
            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);
            if (unlikely(!unbound_method)) return -1;
            Py_DECREF(method);
            target->method = unbound_method;
        }
    }
    return 0;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallNextTpDealloc */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    destructor tp_dealloc = NULL;
    while (type && __Pyx_PyType_GetSlot(type, tp_dealloc, destructor) != current_tp_dealloc)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    while (type && (tp_dealloc = __Pyx_PyType_GetSlot(type, tp_dealloc, destructor)) == current_tp_dealloc)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    if (type)
        tp_dealloc(obj);
}

/* CallNextTpTraverse */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    traverseproc tp_traverse = NULL;
    while (type && __Pyx_PyType_GetSlot(type, tp_traverse, traverseproc) != current_tp_traverse)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    while (type && (tp_traverse = __Pyx_PyType_GetSlot(type, tp_traverse, traverseproc)) == current_tp_traverse)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    if (type && tp_traverse)
        return tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    inquiry tp_clear = NULL;
    while (type && __Pyx_PyType_GetSlot(type, tp_clear, inquiry) != current_tp_clear)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    while (type && (tp_clear = __Pyx_PyType_GetSlot(type, tp_clear, inquiry)) == current_tp_clear)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    if (type && tp_clear)
        tp_clear(obj);
}

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType_3_0_8
#define __PYX_HAVE_RT_ImportType_3_0_8
static PyTypeObject *__Pyx_ImportType_3_0_8(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_8 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_0_8 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_0_8 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n;
#if CYTHON_ASSUME_SAFE_MACROS
    n = PyTuple_GET_SIZE(bases);
#else
    n = PyTuple_Size(bases);
    if (n < 0) return -1;
#endif
    for (i = 1; i < n; i++)
    {
#if CYTHON_AVOID_BORROWED_REFS
        PyObject *b0 = PySequence_GetItem(bases, i);
        if (!b0) return -1;
#elif CYTHON_ASSUME_SAFE_MACROS
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *b0 = PyTuple_GetItem(bases, i);
        if (!b0) return -1;
#endif
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
        if (dictoffset == 0)
        {
            Py_ssize_t b_dictoffset = 0;
#if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
            b_dictoffset = b->tp_dictoffset;
#else
            PyObject *py_b_dictoffset = PyObject_GetAttrString((PyObject*)b, "__dictoffset__");
            if (!py_b_dictoffset) goto dictoffset_return;
            b_dictoffset = PyLong_AsSsize_t(py_b_dictoffset);
            Py_DECREF(py_b_dictoffset);
            if (b_dictoffset == -1 && PyErr_Occurred()) goto dictoffset_return;
#endif
            if (b_dictoffset) {
                {
                    __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
                    PyErr_Format(PyExc_TypeError,
                        "extension type '%.200s' has no __dict__ slot, "
                        "but base type '" __Pyx_FMT_TYPENAME "' has: "
                        "either add 'cdef dict __dict__' to the extension type "
                        "or add '__slots__ = [...]' to the base type",
                        type_name, b_name);
                    __Pyx_DECREF_TypeName(b_name);
                }
#if !(CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY)
              dictoffset_return:
#endif
#if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(b0);
#endif
                return -1;
            }
        }
#if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(b0);
#endif
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyTypeObject *type, void *vtable) {
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
    if (unlikely(!ob))
        goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(PyObject_SetAttr((PyObject *) type, __pyx_n_s_pyx_vtable, ob) < 0))
#else
    if (unlikely(PyDict_SetItem(type->tp_dict, __pyx_n_s_pyx_vtable, ob) < 0))
#endif
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* GetVTable */
static void* __Pyx_GetVtable(PyTypeObject *type) {
    void* ptr;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *ob = PyObject_GetAttr((PyObject *)type, __pyx_n_s_pyx_vtable);
#else
    PyObject *ob = PyObject_GetItem(type->tp_dict, __pyx_n_s_pyx_vtable);
#endif
    if (!ob)
        goto bad;
    ptr = PyCapsule_GetPointer(ob, 0);
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* MergeVTables */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type) {
    int i;
    void** base_vtables;
    __Pyx_TypeName tp_base_name;
    __Pyx_TypeName base_name;
    void* unknown = (void*)-1;
    PyObject* bases = type->tp_bases;
    int base_depth = 0;
    {
        PyTypeObject* base = type->tp_base;
        while (base) {
            base_depth += 1;
            base = base->tp_base;
        }
    }
    base_vtables = (void**) malloc(sizeof(void*) * (size_t)(base_depth + 1));
    base_vtables[0] = unknown;
    for (i = 1; i < PyTuple_GET_SIZE(bases); i++) {
        void* base_vtable = __Pyx_GetVtable(((PyTypeObject*)PyTuple_GET_ITEM(bases, i)));
        if (base_vtable != NULL) {
            int j;
            PyTypeObject* base = type->tp_base;
            for (j = 0; j < base_depth; j++) {
                if (base_vtables[j] == unknown) {
                    base_vtables[j] = __Pyx_GetVtable(base);
                    base_vtables[j + 1] = unknown;
                }
                if (base_vtables[j] == base_vtable) {
                    break;
                } else if (base_vtables[j] == NULL) {
                    goto bad;
                }
                base = base->tp_base;
            }
        }
    }
    PyErr_Clear();
    free(base_vtables);
    return 0;
bad:
    tp_base_name = __Pyx_PyType_GetName(type->tp_base);
    base_name = __Pyx_PyType_GetName((PyTypeObject*)PyTuple_GET_ITEM(bases, i));
    PyErr_Format(PyExc_TypeError,
        "multiple bases have vtable conflict: '" __Pyx_FMT_TYPENAME "' and '" __Pyx_FMT_TYPENAME "'", tp_base_name, base_name);
    __Pyx_DECREF_TypeName(tp_base_name);
    __Pyx_DECREF_TypeName(base_name);
    free(base_vtables);
    return -1;
}
#endif

/* SetupReduce */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.') != NULL) {
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__9);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* Py3UpdateBases */
static PyObject*
__Pyx_PEP560_update_bases(PyObject *bases)
{
    Py_ssize_t i, j, size_bases;
    PyObject *base, *meth, *new_base, *result, *new_bases = NULL;
    size_bases = PyTuple_GET_SIZE(bases);
    for (i = 0; i < size_bases; i++) {
        base  = PyTuple_GET_ITEM(bases, i);
        if (PyType_Check(base)) {
            if (new_bases) {
                if (PyList_Append(new_bases, base) < 0) {
                    goto error;
                }
            }
            continue;
        }
        meth = __Pyx_PyObject_GetAttrStrNoError(base, __pyx_n_s_mro_entries);
        if (!meth && PyErr_Occurred()) {
            goto error;
        }
        if (!meth) {
            if (new_bases) {
                if (PyList_Append(new_bases, base) < 0) {
                    goto error;
                }
            }
            continue;
        }
        new_base = __Pyx_PyObject_CallOneArg(meth, bases);
        Py_DECREF(meth);
        if (!new_base) {
            goto error;
        }
        if (!PyTuple_Check(new_base)) {
            PyErr_SetString(PyExc_TypeError,
                            "__mro_entries__ must return a tuple");
            Py_DECREF(new_base);
            goto error;
        }
        if (!new_bases) {
            if (!(new_bases = PyList_New(i))) {
                goto error;
            }
            for (j = 0; j < i; j++) {
                base = PyTuple_GET_ITEM(bases, j);
                PyList_SET_ITEM(new_bases, j, base);
                Py_INCREF(base);
            }
        }
        j = PyList_GET_SIZE(new_bases);
        if (PyList_SetSlice(new_bases, j, j, new_base) < 0) {
            goto error;
        }
        Py_DECREF(new_base);
    }
    if (!new_bases) {
        Py_INCREF(bases);
        return bases;
    }
    result = PyList_AsTuple(new_bases);
    Py_DECREF(new_bases);
    return result;
error:
    Py_XDECREF(new_bases);
    return NULL;
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases;
#if CYTHON_ASSUME_SAFE_MACROS
    nbases = PyTuple_GET_SIZE(bases);
#else
    nbases = PyTuple_Size(bases);
    if (nbases < 0) return NULL;
#endif
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
#if CYTHON_ASSUME_SAFE_MACROS
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *tmp = PyTuple_GetItem(bases, i);
        if (!tmp) return NULL;
#endif
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* PyObjectCall2Args */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args[3] = {NULL, arg1, arg2};
    return __Pyx_PyObject_FastCall(function, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectLookupSpecial */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return with_error ? __Pyx_PyObject_GetAttrStr(obj, attr_name) : __Pyx_PyObject_GetAttrStrNoError(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else if (with_error) {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#endif

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStrNoError(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs[3] = {NULL, name, bases};
            ns = __Pyx_PyObject_FastCallDict(prep, pargs+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, mkw);
            Py_DECREF(prep);
        } else {
            if (unlikely(PyErr_Occurred()))
                return NULL;
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
#if PY_VERSION_HEX >= 0x03030000
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
#else
    CYTHON_MAYBE_UNUSED_VAR(qualname);
#endif
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
static int __Pyx_SetNamesPEP487(PyObject *type_obj) {
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *names_to_set, *key, *value, *set_name, *tmp;
    Py_ssize_t i = 0;
#if CYTHON_USE_TYPE_SLOTS
    names_to_set = PyDict_Copy(type->tp_dict);
#else
    {
        PyObject *d = PyObject_GetAttr(type_obj, __pyx_n_s_dict);
        names_to_set = NULL;
        if (likely(d)) {
            PyObject *names_to_set = PyDict_New();
            int ret = likely(names_to_set) ? PyDict_Update(names_to_set, d) : -1;
            Py_DECREF(d);
            if (unlikely(ret < 0))
                Py_CLEAR(names_to_set);
        }
    }
#endif
    if (unlikely(names_to_set == NULL))
        goto bad;
    while (PyDict_Next(names_to_set, &i, &key, &value)) {
        set_name = __Pyx_PyObject_LookupSpecialNoError(value, __pyx_n_s_set_name);
        if (unlikely(set_name != NULL)) {
            tmp = __Pyx_PyObject_Call2Args(set_name, type_obj, key);
            Py_DECREF(set_name);
            if (unlikely(tmp == NULL)) {
                __Pyx_TypeName value_type_name =
                    __Pyx_PyType_GetName(Py_TYPE(value));
                __Pyx_TypeName type_name = __Pyx_PyType_GetName(type);
                PyErr_Format(PyExc_RuntimeError,
#if PY_MAJOR_VERSION >= 3
                    "Error calling __set_name__ on '" __Pyx_FMT_TYPENAME "' instance %R " "in '" __Pyx_FMT_TYPENAME "'",
                    value_type_name, key, type_name);
#else
                    "Error calling __set_name__ on '" __Pyx_FMT_TYPENAME "' instance %.100s in '" __Pyx_FMT_TYPENAME "'",
                    value_type_name,
                    PyString_Check(key) ? PyString_AS_STRING(key) : "?",
                    type_name);
#endif
                goto bad;
            } else {
                Py_DECREF(tmp);
            }
        }
        else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
    Py_DECREF(names_to_set);
    return 0;
bad:
    Py_XDECREF(names_to_set);
    return -1;
}
static PyObject *__Pyx_InitSubclassPEP487(PyObject *type_obj, PyObject *mkw) {
#if CYTHON_USE_TYPE_SLOTS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *mro = type->tp_mro;
    Py_ssize_t i, nbases;
    if (unlikely(!mro)) goto done;
    (void) &__Pyx_GetBuiltinName;
    Py_INCREF(mro);
    nbases = PyTuple_GET_SIZE(mro);
    assert(PyTuple_GET_ITEM(mro, 0) == type_obj);
    for (i = 1; i < nbases-1; i++) {
        PyObject *base, *dict, *meth;
        base = PyTuple_GET_ITEM(mro, i);
        dict = ((PyTypeObject *)base)->tp_dict;
        meth = __Pyx_PyDict_GetItemStrWithError(dict, __pyx_n_s_init_subclass);
        if (unlikely(meth)) {
            descrgetfunc f = Py_TYPE(meth)->tp_descr_get;
            PyObject *res;
            Py_INCREF(meth);
            if (likely(f)) {
                res = f(meth, NULL, type_obj);
                Py_DECREF(meth);
                if (unlikely(!res)) goto bad;
                meth = res;
            }
            res = __Pyx_PyObject_FastCallDict(meth, NULL, 0, mkw);
            Py_DECREF(meth);
            if (unlikely(!res)) goto bad;
            Py_DECREF(res);
            goto done;
        } else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
done:
    Py_XDECREF(mro);
    return type_obj;
bad:
    Py_XDECREF(mro);
    Py_DECREF(type_obj);
    return NULL;
#else
    PyObject *super_type, *super, *func, *res;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    super_type = __Pyx_GetBuiltinName(__pyx_n_s_super);
#else
    super_type = (PyObject*) &PySuper_Type;
    (void) &__Pyx_GetBuiltinName;
#endif
    super = likely(super_type) ? __Pyx_PyObject_Call2Args(super_type, type_obj, type_obj) : NULL;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    Py_XDECREF(super_type);
#endif
    if (unlikely(!super)) {
        Py_CLEAR(type_obj);
        goto done;
    }
    func = __Pyx_PyObject_GetAttrStrNoError(super, __pyx_n_s_init_subclass);
    Py_DECREF(super);
    if (likely(!func)) {
        if (unlikely(PyErr_Occurred()))
            Py_CLEAR(type_obj);
        goto done;
    }
    res = __Pyx_PyObject_FastCallDict(func, NULL, 0, mkw);
    Py_DECREF(func);
    if (unlikely(!res))
        Py_CLEAR(type_obj);
    Py_XDECREF(res);
done:
    return type_obj;
#endif
}
#endif
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result;
    PyObject *owned_metaclass = NULL;
    PyObject *margs[4] = {NULL, name, bases, dict};
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    result = __Pyx_PyObject_FastCallDict(metaclass, margs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET,
#if PY_VERSION_HEX < 0x030600A4
        (metaclass == (PyObject*)&PyType_Type) ? NULL : mkw
#else
        mkw
#endif
    );
    Py_XDECREF(owned_metaclass);
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
    if (likely(result) && likely(PyType_Check(result))) {
        if (unlikely(__Pyx_SetNamesPEP487(result) < 0)) {
            Py_CLEAR(result);
        } else {
            result = __Pyx_InitSubclassPEP487(result, mkw);
        }
    }
#else
    (void) &__Pyx_GetBuiltinName;
#endif
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result;
        result = PyObject_Call(replace, __pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    #if __PYX_LIMITED_VERSION_HEX < 0x030780000
    {
        PyObject *compiled = NULL, *result = NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "code", code))) return NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "type", (PyObject*)(&PyType_Type)))) return NULL;
        compiled = Py_CompileString(
            "out = type(code)(\n"
            "  code.co_argcount, code.co_kwonlyargcount, code.co_nlocals, code.co_stacksize,\n"
            "  code.co_flags, code.co_code, code.co_consts, code.co_names,\n"
            "  code.co_varnames, code.co_filename, co_name, co_firstlineno,\n"
            "  code.co_lnotab)\n", "<dummy>", Py_file_input);
        if (!compiled) return NULL;
        result = PyEval_EvalCode(compiled, scratch_dict, scratch_dict);
        Py_DECREF(compiled);
        if (!result) PyErr_Print();
        Py_DECREF(result);
        result = PyDict_GetItemString(scratch_dict, "out");
        if (result) Py_INCREF(result);
        return result;
    }
    #else
    return NULL;
    #endif
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
    if (unlikely(!code_object)) goto bad;
    py_py_line = PyLong_FromLong(py_line);
    if (unlikely(!py_py_line)) goto bad;
    py_funcname = PyUnicode_FromString(funcname);
    if (unlikely(!py_funcname)) goto bad;
    dict = PyDict_New();
    if (unlikely(!dict)) goto bad;
    {
        PyObject *old_code_object = code_object;
        code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
        Py_DECREF(old_code_object);
    }
    if (unlikely(!code_object)) goto bad;
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE uint64_t __Pyx_PyInt_As_uint64_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint64_t neg_one = (uint64_t) -1, const_zero = (uint64_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(uint64_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(uint64_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (uint64_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(uint64_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(uint64_t) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) >= 2 * PyLong_SHIFT)) {
                                return (uint64_t) (((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(uint64_t) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) >= 3 * PyLong_SHIFT)) {
                                return (uint64_t) (((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(uint64_t) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) >= 4 * PyLong_SHIFT)) {
                                return (uint64_t) (((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (uint64_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(uint64_t) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(uint64_t) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(uint64_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(uint64_t) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT)) {
                                return (uint64_t) (((uint64_t)-1)*(((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(uint64_t) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT)) {
                                return (uint64_t) ((((((uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(uint64_t) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT)) {
                                return (uint64_t) (((uint64_t)-1)*(((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(uint64_t) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT)) {
                                return (uint64_t) ((((((((uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(uint64_t) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) - 1 > 4 * PyLong_SHIFT)) {
                                return (uint64_t) (((uint64_t)-1)*(((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(uint64_t) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(uint64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(uint64_t) - 1 > 4 * PyLong_SHIFT)) {
                                return (uint64_t) ((((((((((uint64_t)digits[3]) << PyLong_SHIFT) | (uint64_t)digits[2]) << PyLong_SHIFT) | (uint64_t)digits[1]) << PyLong_SHIFT) | (uint64_t)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(uint64_t) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(uint64_t) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(uint64_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            uint64_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (uint64_t) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (uint64_t) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (uint64_t) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (uint64_t) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (uint64_t) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(uint64_t) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((uint64_t) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(uint64_t) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((uint64_t) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((uint64_t) 1) << (sizeof(uint64_t) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (uint64_t) -1;
        }
    } else {
        uint64_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (uint64_t) -1;
        val = __Pyx_PyInt_As_uint64_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to uint64_t");
    return (uint64_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to uint64_t");
    return (uint64_t) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_uint64_t(uint64_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const uint64_t neg_one = (uint64_t) -1, const_zero = (uint64_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(uint64_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(uint64_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint64_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(uint64_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(uint64_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        return _PyLong_FromByteArray(bytes, sizeof(uint64_t),
                                     little, !is_unsigned);
#else
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(uint64_t));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XDECREF(name);
        name = __Pyx_NewRef(__pyx_n_s__171);
    }
    return name;
}
#endif

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                                return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                                return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                                return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (long) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (long) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (long) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (long) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (long) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((long) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((long) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                                return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                                return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                                return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (int) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (int) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (int) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (int) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (int) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((int) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((int) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030B00A4
    return Py_Version & ~0xFFUL;
#else
    const char* rt_version = Py_GetVersion();
    unsigned long version = 0;
    unsigned long factor = 0x01000000UL;
    unsigned int digit = 0;
    int i = 0;
    while (factor) {
        while ('0' <= rt_version[i] && rt_version[i] <= '9') {
            digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
            ++i;
        }
        version += factor * digit;
        if (rt_version[i] != '.')
            break;
        digit = 0;
        factor >>= 8;
        ++i;
    }
    return version;
#endif
}
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
